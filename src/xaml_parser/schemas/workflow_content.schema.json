{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://github.com/rpapub/rpax/schemas/xaml_parser/workflow_content.json",
  "title": "XAML Workflow Content",
  "description": "Complete parsed workflow content from XAML file with strict validation",
  "type": "object",
  "properties": {
    "arguments": {
      "type": "array",
      "description": "Workflow argument definitions",
      "items": {
        "$ref": "#/$defs/workflowArgument"
      }
    },
    "variables": {
      "type": "array", 
      "description": "Workflow variable definitions",
      "items": {
        "$ref": "#/$defs/workflowVariable"
      }
    },
    "activities": {
      "type": "array",
      "description": "Complete activity tree with metadata",
      "items": {
        "$ref": "#/$defs/activityContent"
      }
    },
    "root_annotation": {
      "type": ["string", "null"],
      "description": "Main workflow description annotation"
    },
    "display_name": {
      "type": ["string", "null"],
      "description": "Workflow display name"
    },
    "description": {
      "type": ["string", "null"],
      "description": "Workflow description"
    },
    "namespaces": {
      "type": "object",
      "description": "XML namespace mappings",
      "patternProperties": {
        "^[a-zA-Z][a-zA-Z0-9]*$": {
          "type": "string",
          "format": "uri"
        }
      }
    },
    "assembly_references": {
      "type": "array",
      "description": "External assembly references",
      "items": {
        "type": "string"
      }
    },
    "expression_language": {
      "type": "string",
      "enum": ["VisualBasic", "CSharp"],
      "description": "Expression language used in workflow"
    },
    "metadata": {
      "type": "object",
      "description": "Additional metadata"
    },
    "total_activities": {
      "type": "integer",
      "minimum": 0,
      "description": "Total count of activities"
    },
    "total_arguments": {
      "type": "integer", 
      "minimum": 0,
      "description": "Total count of arguments"
    },
    "total_variables": {
      "type": "integer",
      "minimum": 0,
      "description": "Total count of variables"
    }
  },
  "required": [
    "arguments",
    "variables", 
    "activities",
    "namespaces",
    "assembly_references",
    "expression_language",
    "metadata",
    "total_activities",
    "total_arguments", 
    "total_variables"
  ],
  "additionalProperties": false,
  "$defs": {
    "workflowArgument": {
      "type": "object",
      "description": "Workflow argument definition",
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1,
          "description": "Argument name"
        },
        "type": {
          "type": "string", 
          "minLength": 1,
          "description": "Full .NET type signature"
        },
        "direction": {
          "type": "string",
          "enum": ["in", "out", "inout"],
          "description": "Argument direction"
        },
        "annotation": {
          "type": ["string", "null"],
          "description": "Argument documentation"
        },
        "default_value": {
          "type": ["string", "null"],
          "description": "Default value expression"
        }
      },
      "required": ["name", "type", "direction"],
      "additionalProperties": false
    },
    "workflowVariable": {
      "type": "object",
      "description": "Workflow variable definition", 
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1,
          "description": "Variable name"
        },
        "type": {
          "type": "string",
          "minLength": 1, 
          "description": "Full .NET type signature"
        },
        "default_value": {
          "type": ["string", "null"],
          "description": "Default value expression"
        },
        "scope": {
          "type": "string",
          "minLength": 1,
          "description": "Variable scope context"
        }
      },
      "required": ["name", "type", "scope"],
      "additionalProperties": false
    },
    "activityContent": {
      "type": "object",
      "description": "Complete activity representation",
      "properties": {
        "tag": {
          "type": "string",
          "minLength": 1,
          "description": "Activity type"
        },
        "activity_id": {
          "type": "string", 
          "pattern": "^activity_\\d+$",
          "description": "Unique activity identifier"
        },
        "display_name": {
          "type": ["string", "null"],
          "description": "User-friendly activity name"
        },
        "annotation": {
          "type": ["string", "null"],
          "description": "Activity documentation"
        },
        "visible_attributes": {
          "type": "object",
          "description": "User-configured properties",
          "patternProperties": {
            ".*": {"type": "string"}
          }
        },
        "invisible_attributes": {
          "type": "object", 
          "description": "Technical ViewState properties",
          "patternProperties": {
            ".*": {"type": "string"}
          }
        },
        "configuration": {
          "type": "object",
          "description": "Nested element configuration"
        },
        "variables": {
          "type": "array",
          "description": "Activity-scoped variables",
          "items": {
            "$ref": "#/$defs/workflowVariable"
          }
        },
        "expressions": {
          "type": "array",
          "description": "Expressions in this activity",
          "items": {
            "$ref": "#/$defs/expression"
          }
        },
        "parent_activity_id": {
          "type": ["string", "null"],
          "pattern": "^(activity_\\d+|null)$",
          "description": "Parent activity identifier"
        },
        "child_activities": {
          "type": "array",
          "description": "Child activity identifiers",
          "items": {
            "type": "string",
            "pattern": "^activity_\\d+$"
          }
        },
        "depth_level": {
          "type": "integer",
          "minimum": 0,
          "description": "Nesting depth in activity tree"
        },
        "xpath_location": {
          "type": ["string", "null"],
          "description": "XPath location for debugging"
        },
        "source_line": {
          "type": ["integer", "null"],
          "minimum": 1,
          "description": "Line number in source XAML"
        }
      },
      "required": [
        "tag",
        "activity_id", 
        "visible_attributes",
        "invisible_attributes",
        "configuration",
        "variables",
        "expressions",
        "child_activities",
        "depth_level"
      ],
      "additionalProperties": false
    },
    "expression": {
      "type": "object",
      "description": "Expression found in XAML",
      "properties": {
        "content": {
          "type": "string",
          "minLength": 1,
          "description": "Raw expression text"
        },
        "expression_type": {
          "type": "string", 
          "enum": ["assignment", "condition", "message", "timeout", "general", "text_content"],
          "description": "Classification of expression"
        },
        "language": {
          "type": "string",
          "enum": ["VisualBasic", "CSharp"],
          "description": "Expression language"
        },
        "context": {
          "type": ["string", "null"],
          "description": "Activity property containing expression"
        },
        "contains_variables": {
          "type": "array",
          "description": "Variable references detected",
          "items": {"type": "string"}
        },
        "contains_methods": {
          "type": "array", 
          "description": "Method calls detected",
          "items": {"type": "string"}
        }
      },
      "required": ["content", "expression_type", "language"],
      "additionalProperties": false
    }
  }
}