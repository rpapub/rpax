<?xml version="1.0" encoding="utf-8"?>
<Activity mc:Ignorable="sap sap2010" x:Class="GetConfig" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_ConfigPath" Type="InArgument(x:String)" sap2010:Annotation.AnnotationText="Full path to configuration file" />
    <x:Property Name="out_ConfigData" Type="OutArgument(x:String)" sap2010:Annotation.AnnotationText="Configuration data as string" />
  </x:Members>
  <sap:VirtualizedContainerService.HintSize>300,400</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="20">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System</x:String>
      <x:String>System.IO</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="12">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Get Configuration Data" sap2010:Annotation.AnnotationText="Loads configuration data from specified file path with error handling" sap:VirtualizedContainerService.HintSize="280,360" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="FileExists" sap2010:Annotation.AnnotationText="Indicates whether the configuration file exists" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <LogMessage DisplayName="Log Config Request" sap:VirtualizedContainerService.HintSize="238,93" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Loading configuration from: &quot; + in_ConfigPath]" />
    <Assign DisplayName="Check File Exists" sap:VirtualizedContainerService.HintSize="238,82" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Boolean">[FileExists]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Boolean">[File.Exists(in_ConfigPath)]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[FileExists]" DisplayName="File Exists Check" sap:VirtualizedContainerService.HintSize="238,208" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <TryCatch DisplayName="Read Configuration File" sap:VirtualizedContainerService.HintSize="200,165" sap2010:WorkflowViewState.IdRef="TryCatch_1">
          <TryCatch.Try>
            <Assign DisplayName="Read All Text" sap:VirtualizedContainerService.HintSize="200,82" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[out_ConfigData]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[File.ReadAllText(in_ConfigPath)]</InArgument>
              </Assign.Value>
            </Assign>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
              <ActivityAction x:TypeArguments="s:Exception">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Handle Read Error" sap:VirtualizedContainerService.HintSize="200,135" sap2010:WorkflowViewState.IdRef="Sequence_2">
                  <LogMessage DisplayName="Log Read Error" sap:VirtualizedContainerService.HintSize="178,93" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Error" Message="[&quot;Error reading config file: &quot; + exception.Message]" />
                  <Assign DisplayName="Set Empty Config" sap:VirtualizedContainerService.HintSize="178,82" sap2010:WorkflowViewState.IdRef="Assign_3">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[out_ConfigData]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">""</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
        </TryCatch>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="File Not Found Handler" sap:VirtualizedContainerService.HintSize="200,176" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <LogMessage DisplayName="Log File Not Found" sap:VirtualizedContainerService.HintSize="178,93" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Warn" Message="[&quot;Configuration file not found: &quot; + in_ConfigPath]" />
          <Assign DisplayName="Set Default Config" sap:VirtualizedContainerService.HintSize="178,82" sap2010:WorkflowViewState.IdRef="Assign_4">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_ConfigData]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">"DefaultConfig=True"</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>