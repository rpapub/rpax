{
  "openapi": "3.0.0",
  "info": {
    "title": "rpax API",
    "description": "UiPath project analysis API - generated from CLI blueprint",
    "version": "0.1.0",
    "contact": {
      "name": "rpax",
      "url": "https://github.com/rpapub/rpax"
    },
    "license": {
      "name": "MIT",
      "url": "https://github.com/rpapub/rpax/blob/main/LICENSE"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8623/api/v0",
      "description": "Local development server"
    }
  ],
  "paths": {
    "/projects/{project}/workflows": {
      "get": {
        "summary": "List workflows, roots, orphans, or activities in a project",
        "description": "List workflows, roots, orphans, or activities in a project",
        "tags": [
          "workflows"
        ],
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "required": true,
            "description": "Project identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "item_type",
            "in": "query",
            "required": false,
            "description": "Type of items to list: workflows, roots, orphans, activities",
            "schema": {
              "type": "string",
              "default": "workflows"
            }
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "description": "Output format: table, json, csv (default: table)",
            "schema": {
              "type": "string",
              "default": "table"
            }
          },
          {
            "name": "projects",
            "in": "query",
            "required": false,
            "description": "Multiple project slugs for cross-project listing (comma-separated or multiple uses)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "description": "Search term to filter results by name/path (optional)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "description": "Sort by: name, size, modified, path (default: name)",
            "schema": {
              "type": "string",
              "default": "name"
            }
          },
          {
            "name": "reverse",
            "in": "query",
            "required": false,
            "description": "Reverse sort order (default: False)",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "filter_pattern",
            "in": "query",
            "required": false,
            "description": "Filter by glob pattern: '*.xaml', '*Test*', etc. (optional)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Limit number of results shown (default: no limit)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "verbose",
            "in": "query",
            "required": false,
            "description": "Show detailed information and metadata (default: False)",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object"
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/projects": {
      "get": {
        "summary": "List all projects in the rpax lake",
        "description": "List all projects in the rpax lake",
        "tags": [
          "projects"
        ],
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": false,
            "description": "Output format: table, json, csv (default: table)",
            "schema": {
              "type": "string",
              "default": "table"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "description": "Search projects by name or slug",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Limit number of results",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object"
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project}/workflows/{workflow}": {
      "get": {
        "summary": "Show detailed information about a specific workflow",
        "description": "Show detailed information about a specific workflow",
        "tags": [
          "workflows"
        ],
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "required": true,
            "description": "Project identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workflow",
            "in": "path",
            "required": true,
            "description": "Workflow identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pseudocode",
            "in": "query",
            "required": false,
            "description": "Show pseudocode representation of workflow activities",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object"
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project}/validation": {
      "get": {
        "summary": "Run validation rules on parser artifacts",
        "description": "Run validation rules on parser artifacts",
        "tags": [
          "validation"
        ],
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "required": true,
            "description": "Project identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rule",
            "in": "query",
            "required": false,
            "description": "Specific rule to run: all, missing, cycles, config (default: all)",
            "schema": {
              "type": "string",
              "default": "all"
            }
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "description": "Output format: table, json, markdown (default: table)",
            "schema": {
              "type": "string",
              "default": "table"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object"
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project}/graphs/{graph_type}": {
      "get": {
        "summary": "Generate workflow call graphs and diagrams",
        "description": "Generate workflow call graphs and diagrams",
        "tags": [
          "graphs"
        ],
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "required": true,
            "description": "Project identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "graph_type",
            "in": "path",
            "required": true,
            "description": "Graph_Type identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "out",
            "in": "query",
            "required": false,
            "description": "Output file path (default: stdout)",
            "schema": {
              "type": "string",
              "format": "path"
            }
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "description": "Output format: mermaid, graphviz (default: mermaid)",
            "schema": {
              "type": "string",
              "default": "mermaid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object"
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/schemas/{action}": {
      "get": {
        "summary": "Generate JSON schemas or validate artifacts against schemas",
        "description": "Generate JSON schemas or validate artifacts against schemas",
        "tags": [
          "schemas"
        ],
        "parameters": [
          {
            "name": "action",
            "in": "path",
            "required": true,
            "description": "Action identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "out",
            "in": "query",
            "required": false,
            "description": "Output directory for generated schemas (default: current)",
            "schema": {
              "type": "string",
              "format": "path"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object"
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Generate JSON schemas or validate artifacts against schemas",
        "description": "Generate JSON schemas or validate artifacts against schemas",
        "tags": [
          "schemas"
        ],
        "parameters": [
          {
            "name": "action",
            "in": "path",
            "required": true,
            "description": "Action identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "out",
            "in": "query",
            "required": false,
            "description": "Output directory for generated schemas (default: current)",
            "schema": {
              "type": "string",
              "format": "path"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object"
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project}/workflows/{workflow}/activities/{action}": {
      "get": {
        "summary": "Access workflow activity trees, control flow, and resource references",
        "description": "Access workflow activity trees, control flow, and resource references",
        "tags": [
          "activities"
        ],
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "required": true,
            "description": "Project identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workflow",
            "in": "path",
            "required": true,
            "description": "Workflow identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action",
            "in": "path",
            "required": true,
            "description": "Action identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "description": "Output format: json, table (default: json)",
            "schema": {
              "type": "string",
              "default": "json"
            }
          },
          {
            "name": "verbose",
            "in": "query",
            "required": false,
            "description": "Show detailed information and metadata (default: False)",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Limit number of results shown (default: no limit)",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object"
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project}/workflows/{workflow}/pseudocode": {
      "get": {
        "summary": "Show pseudocode representation of workflow activities",
        "description": "Show pseudocode representation of workflow activities",
        "tags": [
          "analysis"
        ],
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "required": true,
            "description": "Project identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workflow",
            "in": "path",
            "required": true,
            "description": "Workflow identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format_type",
            "in": "query",
            "required": false,
            "description": "Output format: text, json (default: text)",
            "schema": {
              "type": "string",
              "default": "text"
            }
          },
          {
            "name": "all_workflows",
            "in": "query",
            "required": false,
            "description": "Show pseudocode for all workflows in the project",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "recursive",
            "in": "query",
            "required": false,
            "description": "Recursively expand InvokeWorkflowFile activities to show complete call tree",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object"
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "example": "error"
          }
        },
        "required": [
          "error",
          "message",
          "status"
        ]
      }
    }
  }
}