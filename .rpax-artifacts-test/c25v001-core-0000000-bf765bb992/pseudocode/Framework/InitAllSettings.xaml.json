{
  "workflow_id": "InitAllSettings",
  "project_id": "unknown",
  "project_slug": "unknown",
  "schema_version": "1.0.0",
  "generated_at": "2025-09-06T21:05:04.805462+00:00",
  "rpax_version": "0.0.1",
  "activities": [
    {
      "indent": 0,
      "displayName": "Initialize All Settings",
      "tag": "Sequence",
      "path": "Activity/Sequence",
      "formattedLine": "- [Initialize All Settings] Sequence (Path: Activity/Sequence)",
      "nodeId": "Activity/Sequence_1",
      "depth": 1,
      "isVisual": true,
      "children": [
        {
          "indent": 1,
          "displayName": "Log Message (Initialize All Settings)",
          "tag": "LogMessage",
          "path": "Activity/Sequence/LogMessage",
          "formattedLine": "  - [Log Message (Initialize All Settings)] LogMessage (Path: Activity/Sequence/LogMessage)",
          "nodeId": "Activity/Sequence/LogMessage_2",
          "depth": 2,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 1,
          "displayName": "Assing out_Config (initialization)",
          "tag": "Assign",
          "path": "Activity/Sequence/Assign",
          "formattedLine": "  - [Assing out_Config (initialization)] Assign (Path: Activity/Sequence/Assign)",
          "nodeId": "Activity/Sequence/Assign_2",
          "depth": 2,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 1,
          "displayName": "For each configuration sheet",
          "tag": "ForEach",
          "path": "Activity/Sequence/ForEach",
          "formattedLine": "  - [For each configuration sheet] ForEach (Path: Activity/Sequence/ForEach)",
          "nodeId": "Activity/Sequence/ForEach_2",
          "depth": 2,
          "isVisual": true,
          "children": [
            {
              "indent": 2,
              "displayName": "Get local settings and constants",
              "tag": "Sequence",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence",
              "formattedLine": "    - [Get local settings and constants] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence_5",
              "depth": 5,
              "isVisual": true,
              "children": [
                {
                  "indent": 3,
                  "displayName": "Read range (Settings and Constants sheets)",
                  "tag": "ReadRange",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange",
                  "formattedLine": "      - [Read range (Settings and Constants sheets)] ReadRange (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange_6",
                  "depth": 6,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 3,
                  "displayName": "For each configuration row",
                  "tag": "ForEachRow",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow",
                  "formattedLine": "      - [For each configuration row] ForEachRow (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow_6",
                  "depth": 6,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 4,
                      "displayName": "If configuration row is not empty",
                      "tag": "If",
                      "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If",
                      "formattedLine": "        - [If configuration row is not empty] If (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If)",
                      "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If_9",
                      "depth": 9,
                      "isVisual": true,
                      "children": [
                        {
                          "indent": 5,
                          "displayName": "Add Config key/value pair",
                          "tag": "Assign",
                          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
                          "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
                          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
                          "depth": 11,
                          "isVisual": true,
                          "children": []
                        },
                        {
                          "indent": 5,
                          "displayName": "Else",
                          "tag": "Sequence",
                          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
                          "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
                          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
                          "depth": 11,
                          "isVisual": true,
                          "children": []
                        }
                      ]
                    },
                    {
                      "indent": 5,
                      "displayName": "Add Config key/value pair",
                      "tag": "Assign",
                      "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
                      "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
                      "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 5,
                      "displayName": "Else",
                      "tag": "Sequence",
                      "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
                      "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
                      "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 4,
                  "displayName": "If configuration row is not empty",
                  "tag": "If",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If",
                  "formattedLine": "        - [If configuration row is not empty] If (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If_9",
                  "depth": 9,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 5,
                      "displayName": "Add Config key/value pair",
                      "tag": "Assign",
                      "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
                      "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
                      "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 5,
                      "displayName": "Else",
                      "tag": "Sequence",
                      "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
                      "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
                      "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 5,
                  "displayName": "Add Config key/value pair",
                  "tag": "Assign",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
                  "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "Else",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
                  "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 3,
              "displayName": "Read range (Settings and Constants sheets)",
              "tag": "ReadRange",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange",
              "formattedLine": "      - [Read range (Settings and Constants sheets)] ReadRange (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange_6",
              "depth": 6,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 3,
              "displayName": "For each configuration row",
              "tag": "ForEachRow",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow",
              "formattedLine": "      - [For each configuration row] ForEachRow (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow_6",
              "depth": 6,
              "isVisual": true,
              "children": [
                {
                  "indent": 4,
                  "displayName": "If configuration row is not empty",
                  "tag": "If",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If",
                  "formattedLine": "        - [If configuration row is not empty] If (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If_9",
                  "depth": 9,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 5,
                      "displayName": "Add Config key/value pair",
                      "tag": "Assign",
                      "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
                      "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
                      "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 5,
                      "displayName": "Else",
                      "tag": "Sequence",
                      "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
                      "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
                      "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 5,
                  "displayName": "Add Config key/value pair",
                  "tag": "Assign",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
                  "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "Else",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
                  "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 4,
              "displayName": "If configuration row is not empty",
              "tag": "If",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If",
              "formattedLine": "        - [If configuration row is not empty] If (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If_9",
              "depth": 9,
              "isVisual": true,
              "children": [
                {
                  "indent": 5,
                  "displayName": "Add Config key/value pair",
                  "tag": "Assign",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
                  "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "Else",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
                  "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 5,
              "displayName": "Add Config key/value pair",
              "tag": "Assign",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
              "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "Else",
              "tag": "Sequence",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
              "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 2,
          "displayName": "Get local settings and constants",
          "tag": "Sequence",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence",
          "formattedLine": "    - [Get local settings and constants] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence_5",
          "depth": 5,
          "isVisual": true,
          "children": [
            {
              "indent": 3,
              "displayName": "Read range (Settings and Constants sheets)",
              "tag": "ReadRange",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange",
              "formattedLine": "      - [Read range (Settings and Constants sheets)] ReadRange (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange_6",
              "depth": 6,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 3,
              "displayName": "For each configuration row",
              "tag": "ForEachRow",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow",
              "formattedLine": "      - [For each configuration row] ForEachRow (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow_6",
              "depth": 6,
              "isVisual": true,
              "children": [
                {
                  "indent": 4,
                  "displayName": "If configuration row is not empty",
                  "tag": "If",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If",
                  "formattedLine": "        - [If configuration row is not empty] If (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If_9",
                  "depth": 9,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 5,
                      "displayName": "Add Config key/value pair",
                      "tag": "Assign",
                      "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
                      "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
                      "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 5,
                      "displayName": "Else",
                      "tag": "Sequence",
                      "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
                      "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
                      "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 5,
                  "displayName": "Add Config key/value pair",
                  "tag": "Assign",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
                  "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "Else",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
                  "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 4,
              "displayName": "If configuration row is not empty",
              "tag": "If",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If",
              "formattedLine": "        - [If configuration row is not empty] If (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If_9",
              "depth": 9,
              "isVisual": true,
              "children": [
                {
                  "indent": 5,
                  "displayName": "Add Config key/value pair",
                  "tag": "Assign",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
                  "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "Else",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
                  "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 5,
              "displayName": "Add Config key/value pair",
              "tag": "Assign",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
              "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "Else",
              "tag": "Sequence",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
              "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 3,
          "displayName": "Read range (Settings and Constants sheets)",
          "tag": "ReadRange",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange",
          "formattedLine": "      - [Read range (Settings and Constants sheets)] ReadRange (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange_6",
          "depth": 6,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 3,
          "displayName": "For each configuration row",
          "tag": "ForEachRow",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow",
          "formattedLine": "      - [For each configuration row] ForEachRow (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow_6",
          "depth": 6,
          "isVisual": true,
          "children": [
            {
              "indent": 4,
              "displayName": "If configuration row is not empty",
              "tag": "If",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If",
              "formattedLine": "        - [If configuration row is not empty] If (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If_9",
              "depth": 9,
              "isVisual": true,
              "children": [
                {
                  "indent": 5,
                  "displayName": "Add Config key/value pair",
                  "tag": "Assign",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
                  "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "Else",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
                  "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 5,
              "displayName": "Add Config key/value pair",
              "tag": "Assign",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
              "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "Else",
              "tag": "Sequence",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
              "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 4,
          "displayName": "If configuration row is not empty",
          "tag": "If",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If",
          "formattedLine": "        - [If configuration row is not empty] If (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If_9",
          "depth": 9,
          "isVisual": true,
          "children": [
            {
              "indent": 5,
              "displayName": "Add Config key/value pair",
              "tag": "Assign",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
              "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "Else",
              "tag": "Sequence",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
              "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 5,
          "displayName": "Add Config key/value pair",
          "tag": "Assign",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
          "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 5,
          "displayName": "Else",
          "tag": "Sequence",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
          "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 1,
          "displayName": "Try initializing assets",
          "tag": "TryCatch",
          "path": "Activity/Sequence/TryCatch",
          "formattedLine": "  - [Try initializing assets] TryCatch (Path: Activity/Sequence/TryCatch)",
          "nodeId": "Activity/Sequence/TryCatch_2",
          "depth": 2,
          "isVisual": true,
          "children": [
            {
              "indent": 2,
              "displayName": "Get Orchestrator assets",
              "tag": "Sequence",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence",
              "formattedLine": "    - [Get Orchestrator assets] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence_4",
              "depth": 4,
              "isVisual": true,
              "children": [
                {
                  "indent": 3,
                  "displayName": "Read range (Assets sheet)",
                  "tag": "ReadRange",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange",
                  "formattedLine": "      - [Read range (Assets sheet)] ReadRange (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange_5",
                  "depth": 5,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 3,
                  "displayName": "For each asset row",
                  "tag": "ForEachRow",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow",
                  "formattedLine": "      - [For each asset row] ForEachRow (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow_5",
                  "depth": 5,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 4,
                      "displayName": "Try retrieving asset from Orchestrator",
                      "tag": "TryCatch",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch",
                      "formattedLine": "        - [Try retrieving asset from Orchestrator] TryCatch (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch_8",
                      "depth": 8,
                      "isVisual": true,
                      "children": [
                        {
                          "indent": 5,
                          "displayName": "Get asset from Orchestrator",
                          "tag": "Sequence",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
                          "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
                          "depth": 10,
                          "isVisual": true,
                          "children": [
                            {
                              "indent": 6,
                              "displayName": "Get Orchestrator asset",
                              "tag": "GetRobotAsset",
                              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                              "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                              "depth": 11,
                              "isVisual": true,
                              "children": []
                            },
                            {
                              "indent": 6,
                              "displayName": "Assign asset value in Config",
                              "tag": "Assign",
                              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                              "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                              "depth": 11,
                              "isVisual": true,
                              "children": []
                            }
                          ]
                        },
                        {
                          "indent": 6,
                          "displayName": "Get Orchestrator asset",
                          "tag": "GetRobotAsset",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                          "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                          "depth": 11,
                          "isVisual": true,
                          "children": []
                        },
                        {
                          "indent": 6,
                          "displayName": "Assign asset value in Config",
                          "tag": "Assign",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                          "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                          "depth": 11,
                          "isVisual": true,
                          "children": []
                        },
                        {
                          "indent": 5,
                          "displayName": "If asset name is specified, but it cannot be retrieved",
                          "tag": "If",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
                          "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
                          "depth": 12,
                          "isVisual": true,
                          "children": [
                            {
                              "indent": 6,
                              "displayName": "Throw AssetFailedToLoad Exception",
                              "tag": "Throw",
                              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                              "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                              "depth": 14,
                              "isVisual": true,
                              "children": []
                            }
                          ]
                        },
                        {
                          "indent": 6,
                          "displayName": "Throw AssetFailedToLoad Exception",
                          "tag": "Throw",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                          "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                          "depth": 14,
                          "isVisual": true,
                          "children": []
                        }
                      ]
                    },
                    {
                      "indent": 5,
                      "displayName": "Get asset from Orchestrator",
                      "tag": "Sequence",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
                      "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
                      "depth": 10,
                      "isVisual": true,
                      "children": [
                        {
                          "indent": 6,
                          "displayName": "Get Orchestrator asset",
                          "tag": "GetRobotAsset",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                          "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                          "depth": 11,
                          "isVisual": true,
                          "children": []
                        },
                        {
                          "indent": 6,
                          "displayName": "Assign asset value in Config",
                          "tag": "Assign",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                          "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                          "depth": 11,
                          "isVisual": true,
                          "children": []
                        }
                      ]
                    },
                    {
                      "indent": 6,
                      "displayName": "Get Orchestrator asset",
                      "tag": "GetRobotAsset",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                      "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 6,
                      "displayName": "Assign asset value in Config",
                      "tag": "Assign",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                      "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 5,
                      "displayName": "If asset name is specified, but it cannot be retrieved",
                      "tag": "If",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
                      "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
                      "depth": 12,
                      "isVisual": true,
                      "children": [
                        {
                          "indent": 6,
                          "displayName": "Throw AssetFailedToLoad Exception",
                          "tag": "Throw",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                          "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                          "depth": 14,
                          "isVisual": true,
                          "children": []
                        }
                      ]
                    },
                    {
                      "indent": 6,
                      "displayName": "Throw AssetFailedToLoad Exception",
                      "tag": "Throw",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                      "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                      "depth": 14,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 4,
                  "displayName": "Try retrieving asset from Orchestrator",
                  "tag": "TryCatch",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch",
                  "formattedLine": "        - [Try retrieving asset from Orchestrator] TryCatch (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch_8",
                  "depth": 8,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 5,
                      "displayName": "Get asset from Orchestrator",
                      "tag": "Sequence",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
                      "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
                      "depth": 10,
                      "isVisual": true,
                      "children": [
                        {
                          "indent": 6,
                          "displayName": "Get Orchestrator asset",
                          "tag": "GetRobotAsset",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                          "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                          "depth": 11,
                          "isVisual": true,
                          "children": []
                        },
                        {
                          "indent": 6,
                          "displayName": "Assign asset value in Config",
                          "tag": "Assign",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                          "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                          "depth": 11,
                          "isVisual": true,
                          "children": []
                        }
                      ]
                    },
                    {
                      "indent": 6,
                      "displayName": "Get Orchestrator asset",
                      "tag": "GetRobotAsset",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                      "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 6,
                      "displayName": "Assign asset value in Config",
                      "tag": "Assign",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                      "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 5,
                      "displayName": "If asset name is specified, but it cannot be retrieved",
                      "tag": "If",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
                      "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
                      "depth": 12,
                      "isVisual": true,
                      "children": [
                        {
                          "indent": 6,
                          "displayName": "Throw AssetFailedToLoad Exception",
                          "tag": "Throw",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                          "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                          "depth": 14,
                          "isVisual": true,
                          "children": []
                        }
                      ]
                    },
                    {
                      "indent": 6,
                      "displayName": "Throw AssetFailedToLoad Exception",
                      "tag": "Throw",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                      "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                      "depth": 14,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 5,
                  "displayName": "Get asset from Orchestrator",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
                  "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
                  "depth": 10,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Get Orchestrator asset",
                      "tag": "GetRobotAsset",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                      "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 6,
                      "displayName": "Assign asset value in Config",
                      "tag": "Assign",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                      "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "If asset name is specified, but it cannot be retrieved",
                  "tag": "If",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
                  "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
                  "depth": 12,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Throw AssetFailedToLoad Exception",
                      "tag": "Throw",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                      "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                      "depth": 14,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 3,
              "displayName": "Read range (Assets sheet)",
              "tag": "ReadRange",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange",
              "formattedLine": "      - [Read range (Assets sheet)] ReadRange (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange_5",
              "depth": 5,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 3,
              "displayName": "For each asset row",
              "tag": "ForEachRow",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow",
              "formattedLine": "      - [For each asset row] ForEachRow (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow_5",
              "depth": 5,
              "isVisual": true,
              "children": [
                {
                  "indent": 4,
                  "displayName": "Try retrieving asset from Orchestrator",
                  "tag": "TryCatch",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch",
                  "formattedLine": "        - [Try retrieving asset from Orchestrator] TryCatch (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch_8",
                  "depth": 8,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 5,
                      "displayName": "Get asset from Orchestrator",
                      "tag": "Sequence",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
                      "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
                      "depth": 10,
                      "isVisual": true,
                      "children": [
                        {
                          "indent": 6,
                          "displayName": "Get Orchestrator asset",
                          "tag": "GetRobotAsset",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                          "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                          "depth": 11,
                          "isVisual": true,
                          "children": []
                        },
                        {
                          "indent": 6,
                          "displayName": "Assign asset value in Config",
                          "tag": "Assign",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                          "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                          "depth": 11,
                          "isVisual": true,
                          "children": []
                        }
                      ]
                    },
                    {
                      "indent": 6,
                      "displayName": "Get Orchestrator asset",
                      "tag": "GetRobotAsset",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                      "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 6,
                      "displayName": "Assign asset value in Config",
                      "tag": "Assign",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                      "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 5,
                      "displayName": "If asset name is specified, but it cannot be retrieved",
                      "tag": "If",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
                      "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
                      "depth": 12,
                      "isVisual": true,
                      "children": [
                        {
                          "indent": 6,
                          "displayName": "Throw AssetFailedToLoad Exception",
                          "tag": "Throw",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                          "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                          "depth": 14,
                          "isVisual": true,
                          "children": []
                        }
                      ]
                    },
                    {
                      "indent": 6,
                      "displayName": "Throw AssetFailedToLoad Exception",
                      "tag": "Throw",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                      "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                      "depth": 14,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 5,
                  "displayName": "Get asset from Orchestrator",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
                  "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
                  "depth": 10,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Get Orchestrator asset",
                      "tag": "GetRobotAsset",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                      "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 6,
                      "displayName": "Assign asset value in Config",
                      "tag": "Assign",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                      "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "If asset name is specified, but it cannot be retrieved",
                  "tag": "If",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
                  "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
                  "depth": 12,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Throw AssetFailedToLoad Exception",
                      "tag": "Throw",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                      "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                      "depth": 14,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 4,
              "displayName": "Try retrieving asset from Orchestrator",
              "tag": "TryCatch",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch",
              "formattedLine": "        - [Try retrieving asset from Orchestrator] TryCatch (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch_8",
              "depth": 8,
              "isVisual": true,
              "children": [
                {
                  "indent": 5,
                  "displayName": "Get asset from Orchestrator",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
                  "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
                  "depth": 10,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Get Orchestrator asset",
                      "tag": "GetRobotAsset",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                      "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 6,
                      "displayName": "Assign asset value in Config",
                      "tag": "Assign",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                      "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "If asset name is specified, but it cannot be retrieved",
                  "tag": "If",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
                  "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
                  "depth": 12,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Throw AssetFailedToLoad Exception",
                      "tag": "Throw",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                      "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                      "depth": 14,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 5,
              "displayName": "Get asset from Orchestrator",
              "tag": "Sequence",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
              "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
              "depth": 10,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Get Orchestrator asset",
              "tag": "GetRobotAsset",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
              "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 6,
              "displayName": "Assign asset value in Config",
              "tag": "Assign",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
              "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "If asset name is specified, but it cannot be retrieved",
              "tag": "If",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
              "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
              "depth": 12,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Throw AssetFailedToLoad Exception",
              "tag": "Throw",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
              "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
              "depth": 14,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 2,
              "displayName": "Rethrow loading asset exception",
              "tag": "Rethrow",
              "path": "Activity/Sequence/TryCatch/TryCatch.Catches/Catch/ActivityAction/Rethrow",
              "formattedLine": "    - [Rethrow loading asset exception] Rethrow (Path: Activity/Sequence/TryCatch/TryCatch.Catches/Catch/ActivityAction/Rethrow)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Catches/Catch/ActivityAction/Rethrow_6",
              "depth": 6,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 2,
          "displayName": "Get Orchestrator assets",
          "tag": "Sequence",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence",
          "formattedLine": "    - [Get Orchestrator assets] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence_4",
          "depth": 4,
          "isVisual": true,
          "children": [
            {
              "indent": 3,
              "displayName": "Read range (Assets sheet)",
              "tag": "ReadRange",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange",
              "formattedLine": "      - [Read range (Assets sheet)] ReadRange (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange_5",
              "depth": 5,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 3,
              "displayName": "For each asset row",
              "tag": "ForEachRow",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow",
              "formattedLine": "      - [For each asset row] ForEachRow (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow_5",
              "depth": 5,
              "isVisual": true,
              "children": [
                {
                  "indent": 4,
                  "displayName": "Try retrieving asset from Orchestrator",
                  "tag": "TryCatch",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch",
                  "formattedLine": "        - [Try retrieving asset from Orchestrator] TryCatch (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch_8",
                  "depth": 8,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 5,
                      "displayName": "Get asset from Orchestrator",
                      "tag": "Sequence",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
                      "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
                      "depth": 10,
                      "isVisual": true,
                      "children": [
                        {
                          "indent": 6,
                          "displayName": "Get Orchestrator asset",
                          "tag": "GetRobotAsset",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                          "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                          "depth": 11,
                          "isVisual": true,
                          "children": []
                        },
                        {
                          "indent": 6,
                          "displayName": "Assign asset value in Config",
                          "tag": "Assign",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                          "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                          "depth": 11,
                          "isVisual": true,
                          "children": []
                        }
                      ]
                    },
                    {
                      "indent": 6,
                      "displayName": "Get Orchestrator asset",
                      "tag": "GetRobotAsset",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                      "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 6,
                      "displayName": "Assign asset value in Config",
                      "tag": "Assign",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                      "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 5,
                      "displayName": "If asset name is specified, but it cannot be retrieved",
                      "tag": "If",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
                      "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
                      "depth": 12,
                      "isVisual": true,
                      "children": [
                        {
                          "indent": 6,
                          "displayName": "Throw AssetFailedToLoad Exception",
                          "tag": "Throw",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                          "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                          "depth": 14,
                          "isVisual": true,
                          "children": []
                        }
                      ]
                    },
                    {
                      "indent": 6,
                      "displayName": "Throw AssetFailedToLoad Exception",
                      "tag": "Throw",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                      "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                      "depth": 14,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 5,
                  "displayName": "Get asset from Orchestrator",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
                  "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
                  "depth": 10,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Get Orchestrator asset",
                      "tag": "GetRobotAsset",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                      "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 6,
                      "displayName": "Assign asset value in Config",
                      "tag": "Assign",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                      "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "If asset name is specified, but it cannot be retrieved",
                  "tag": "If",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
                  "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
                  "depth": 12,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Throw AssetFailedToLoad Exception",
                      "tag": "Throw",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                      "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                      "depth": 14,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 4,
              "displayName": "Try retrieving asset from Orchestrator",
              "tag": "TryCatch",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch",
              "formattedLine": "        - [Try retrieving asset from Orchestrator] TryCatch (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch_8",
              "depth": 8,
              "isVisual": true,
              "children": [
                {
                  "indent": 5,
                  "displayName": "Get asset from Orchestrator",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
                  "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
                  "depth": 10,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Get Orchestrator asset",
                      "tag": "GetRobotAsset",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                      "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 6,
                      "displayName": "Assign asset value in Config",
                      "tag": "Assign",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                      "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "If asset name is specified, but it cannot be retrieved",
                  "tag": "If",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
                  "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
                  "depth": 12,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Throw AssetFailedToLoad Exception",
                      "tag": "Throw",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                      "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                      "depth": 14,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 5,
              "displayName": "Get asset from Orchestrator",
              "tag": "Sequence",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
              "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
              "depth": 10,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Get Orchestrator asset",
              "tag": "GetRobotAsset",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
              "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 6,
              "displayName": "Assign asset value in Config",
              "tag": "Assign",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
              "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "If asset name is specified, but it cannot be retrieved",
              "tag": "If",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
              "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
              "depth": 12,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Throw AssetFailedToLoad Exception",
              "tag": "Throw",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
              "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
              "depth": 14,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 3,
          "displayName": "Read range (Assets sheet)",
          "tag": "ReadRange",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange",
          "formattedLine": "      - [Read range (Assets sheet)] ReadRange (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange_5",
          "depth": 5,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 3,
          "displayName": "For each asset row",
          "tag": "ForEachRow",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow",
          "formattedLine": "      - [For each asset row] ForEachRow (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow_5",
          "depth": 5,
          "isVisual": true,
          "children": [
            {
              "indent": 4,
              "displayName": "Try retrieving asset from Orchestrator",
              "tag": "TryCatch",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch",
              "formattedLine": "        - [Try retrieving asset from Orchestrator] TryCatch (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch_8",
              "depth": 8,
              "isVisual": true,
              "children": [
                {
                  "indent": 5,
                  "displayName": "Get asset from Orchestrator",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
                  "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
                  "depth": 10,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Get Orchestrator asset",
                      "tag": "GetRobotAsset",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                      "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 6,
                      "displayName": "Assign asset value in Config",
                      "tag": "Assign",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                      "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "If asset name is specified, but it cannot be retrieved",
                  "tag": "If",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
                  "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
                  "depth": 12,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Throw AssetFailedToLoad Exception",
                      "tag": "Throw",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                      "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                      "depth": 14,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 5,
              "displayName": "Get asset from Orchestrator",
              "tag": "Sequence",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
              "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
              "depth": 10,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Get Orchestrator asset",
              "tag": "GetRobotAsset",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
              "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 6,
              "displayName": "Assign asset value in Config",
              "tag": "Assign",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
              "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "If asset name is specified, but it cannot be retrieved",
              "tag": "If",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
              "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
              "depth": 12,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Throw AssetFailedToLoad Exception",
              "tag": "Throw",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
              "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
              "depth": 14,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 4,
          "displayName": "Try retrieving asset from Orchestrator",
          "tag": "TryCatch",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch",
          "formattedLine": "        - [Try retrieving asset from Orchestrator] TryCatch (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch_8",
          "depth": 8,
          "isVisual": true,
          "children": [
            {
              "indent": 5,
              "displayName": "Get asset from Orchestrator",
              "tag": "Sequence",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
              "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
              "depth": 10,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Get Orchestrator asset",
              "tag": "GetRobotAsset",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
              "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 6,
              "displayName": "Assign asset value in Config",
              "tag": "Assign",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
              "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "If asset name is specified, but it cannot be retrieved",
              "tag": "If",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
              "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
              "depth": 12,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Throw AssetFailedToLoad Exception",
              "tag": "Throw",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
              "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
              "depth": 14,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 5,
          "displayName": "Get asset from Orchestrator",
          "tag": "Sequence",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
          "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
          "depth": 10,
          "isVisual": true,
          "children": [
            {
              "indent": 6,
              "displayName": "Get Orchestrator asset",
              "tag": "GetRobotAsset",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
              "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 6,
              "displayName": "Assign asset value in Config",
              "tag": "Assign",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
              "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 6,
          "displayName": "Get Orchestrator asset",
          "tag": "GetRobotAsset",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
          "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 6,
          "displayName": "Assign asset value in Config",
          "tag": "Assign",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
          "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 5,
          "displayName": "If asset name is specified, but it cannot be retrieved",
          "tag": "If",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
          "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
          "depth": 12,
          "isVisual": true,
          "children": [
            {
              "indent": 6,
              "displayName": "Throw AssetFailedToLoad Exception",
              "tag": "Throw",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
              "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
              "depth": 14,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 6,
          "displayName": "Throw AssetFailedToLoad Exception",
          "tag": "Throw",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
          "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
          "depth": 14,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 2,
          "displayName": "Rethrow loading asset exception",
          "tag": "Rethrow",
          "path": "Activity/Sequence/TryCatch/TryCatch.Catches/Catch/ActivityAction/Rethrow",
          "formattedLine": "    - [Rethrow loading asset exception] Rethrow (Path: Activity/Sequence/TryCatch/TryCatch.Catches/Catch/ActivityAction/Rethrow)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Catches/Catch/ActivityAction/Rethrow_6",
          "depth": 6,
          "isVisual": true,
          "children": []
        }
      ]
    },
    {
      "indent": 1,
      "displayName": "Log Message (Initialize All Settings)",
      "tag": "LogMessage",
      "path": "Activity/Sequence/LogMessage",
      "formattedLine": "  - [Log Message (Initialize All Settings)] LogMessage (Path: Activity/Sequence/LogMessage)",
      "nodeId": "Activity/Sequence/LogMessage_2",
      "depth": 2,
      "isVisual": true,
      "children": []
    },
    {
      "indent": 1,
      "displayName": "Assing out_Config (initialization)",
      "tag": "Assign",
      "path": "Activity/Sequence/Assign",
      "formattedLine": "  - [Assing out_Config (initialization)] Assign (Path: Activity/Sequence/Assign)",
      "nodeId": "Activity/Sequence/Assign_2",
      "depth": 2,
      "isVisual": true,
      "children": []
    },
    {
      "indent": 1,
      "displayName": "For each configuration sheet",
      "tag": "ForEach",
      "path": "Activity/Sequence/ForEach",
      "formattedLine": "  - [For each configuration sheet] ForEach (Path: Activity/Sequence/ForEach)",
      "nodeId": "Activity/Sequence/ForEach_2",
      "depth": 2,
      "isVisual": true,
      "children": [
        {
          "indent": 2,
          "displayName": "Get local settings and constants",
          "tag": "Sequence",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence",
          "formattedLine": "    - [Get local settings and constants] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence_5",
          "depth": 5,
          "isVisual": true,
          "children": [
            {
              "indent": 3,
              "displayName": "Read range (Settings and Constants sheets)",
              "tag": "ReadRange",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange",
              "formattedLine": "      - [Read range (Settings and Constants sheets)] ReadRange (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange_6",
              "depth": 6,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 3,
              "displayName": "For each configuration row",
              "tag": "ForEachRow",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow",
              "formattedLine": "      - [For each configuration row] ForEachRow (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow_6",
              "depth": 6,
              "isVisual": true,
              "children": [
                {
                  "indent": 4,
                  "displayName": "If configuration row is not empty",
                  "tag": "If",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If",
                  "formattedLine": "        - [If configuration row is not empty] If (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If_9",
                  "depth": 9,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 5,
                      "displayName": "Add Config key/value pair",
                      "tag": "Assign",
                      "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
                      "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
                      "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 5,
                      "displayName": "Else",
                      "tag": "Sequence",
                      "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
                      "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
                      "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 5,
                  "displayName": "Add Config key/value pair",
                  "tag": "Assign",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
                  "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "Else",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
                  "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 4,
              "displayName": "If configuration row is not empty",
              "tag": "If",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If",
              "formattedLine": "        - [If configuration row is not empty] If (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If_9",
              "depth": 9,
              "isVisual": true,
              "children": [
                {
                  "indent": 5,
                  "displayName": "Add Config key/value pair",
                  "tag": "Assign",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
                  "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "Else",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
                  "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 5,
              "displayName": "Add Config key/value pair",
              "tag": "Assign",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
              "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "Else",
              "tag": "Sequence",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
              "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 3,
          "displayName": "Read range (Settings and Constants sheets)",
          "tag": "ReadRange",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange",
          "formattedLine": "      - [Read range (Settings and Constants sheets)] ReadRange (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange_6",
          "depth": 6,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 3,
          "displayName": "For each configuration row",
          "tag": "ForEachRow",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow",
          "formattedLine": "      - [For each configuration row] ForEachRow (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow_6",
          "depth": 6,
          "isVisual": true,
          "children": [
            {
              "indent": 4,
              "displayName": "If configuration row is not empty",
              "tag": "If",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If",
              "formattedLine": "        - [If configuration row is not empty] If (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If_9",
              "depth": 9,
              "isVisual": true,
              "children": [
                {
                  "indent": 5,
                  "displayName": "Add Config key/value pair",
                  "tag": "Assign",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
                  "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "Else",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
                  "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 5,
              "displayName": "Add Config key/value pair",
              "tag": "Assign",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
              "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "Else",
              "tag": "Sequence",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
              "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 4,
          "displayName": "If configuration row is not empty",
          "tag": "If",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If",
          "formattedLine": "        - [If configuration row is not empty] If (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If_9",
          "depth": 9,
          "isVisual": true,
          "children": [
            {
              "indent": 5,
              "displayName": "Add Config key/value pair",
              "tag": "Assign",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
              "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "Else",
              "tag": "Sequence",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
              "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 5,
          "displayName": "Add Config key/value pair",
          "tag": "Assign",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
          "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 5,
          "displayName": "Else",
          "tag": "Sequence",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
          "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        }
      ]
    },
    {
      "indent": 2,
      "displayName": "Get local settings and constants",
      "tag": "Sequence",
      "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence",
      "formattedLine": "    - [Get local settings and constants] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence)",
      "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence_5",
      "depth": 5,
      "isVisual": true,
      "children": [
        {
          "indent": 3,
          "displayName": "Read range (Settings and Constants sheets)",
          "tag": "ReadRange",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange",
          "formattedLine": "      - [Read range (Settings and Constants sheets)] ReadRange (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange_6",
          "depth": 6,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 3,
          "displayName": "For each configuration row",
          "tag": "ForEachRow",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow",
          "formattedLine": "      - [For each configuration row] ForEachRow (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow_6",
          "depth": 6,
          "isVisual": true,
          "children": [
            {
              "indent": 4,
              "displayName": "If configuration row is not empty",
              "tag": "If",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If",
              "formattedLine": "        - [If configuration row is not empty] If (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If_9",
              "depth": 9,
              "isVisual": true,
              "children": [
                {
                  "indent": 5,
                  "displayName": "Add Config key/value pair",
                  "tag": "Assign",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
                  "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "Else",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
                  "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 5,
              "displayName": "Add Config key/value pair",
              "tag": "Assign",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
              "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "Else",
              "tag": "Sequence",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
              "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 4,
          "displayName": "If configuration row is not empty",
          "tag": "If",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If",
          "formattedLine": "        - [If configuration row is not empty] If (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If_9",
          "depth": 9,
          "isVisual": true,
          "children": [
            {
              "indent": 5,
              "displayName": "Add Config key/value pair",
              "tag": "Assign",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
              "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "Else",
              "tag": "Sequence",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
              "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 5,
          "displayName": "Add Config key/value pair",
          "tag": "Assign",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
          "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 5,
          "displayName": "Else",
          "tag": "Sequence",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
          "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        }
      ]
    },
    {
      "indent": 3,
      "displayName": "Read range (Settings and Constants sheets)",
      "tag": "ReadRange",
      "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange",
      "formattedLine": "      - [Read range (Settings and Constants sheets)] ReadRange (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange)",
      "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange_6",
      "depth": 6,
      "isVisual": true,
      "children": []
    },
    {
      "indent": 3,
      "displayName": "For each configuration row",
      "tag": "ForEachRow",
      "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow",
      "formattedLine": "      - [For each configuration row] ForEachRow (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow)",
      "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow_6",
      "depth": 6,
      "isVisual": true,
      "children": [
        {
          "indent": 4,
          "displayName": "If configuration row is not empty",
          "tag": "If",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If",
          "formattedLine": "        - [If configuration row is not empty] If (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If_9",
          "depth": 9,
          "isVisual": true,
          "children": [
            {
              "indent": 5,
              "displayName": "Add Config key/value pair",
              "tag": "Assign",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
              "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "Else",
              "tag": "Sequence",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
              "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 5,
          "displayName": "Add Config key/value pair",
          "tag": "Assign",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
          "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 5,
          "displayName": "Else",
          "tag": "Sequence",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
          "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        }
      ]
    },
    {
      "indent": 4,
      "displayName": "If configuration row is not empty",
      "tag": "If",
      "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If",
      "formattedLine": "        - [If configuration row is not empty] If (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If)",
      "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If_9",
      "depth": 9,
      "isVisual": true,
      "children": [
        {
          "indent": 5,
          "displayName": "Add Config key/value pair",
          "tag": "Assign",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
          "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 5,
          "displayName": "Else",
          "tag": "Sequence",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
          "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        }
      ]
    },
    {
      "indent": 5,
      "displayName": "Add Config key/value pair",
      "tag": "Assign",
      "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
      "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
      "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
      "depth": 11,
      "isVisual": true,
      "children": []
    },
    {
      "indent": 5,
      "displayName": "Else",
      "tag": "Sequence",
      "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
      "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
      "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
      "depth": 11,
      "isVisual": true,
      "children": []
    },
    {
      "indent": 1,
      "displayName": "Try initializing assets",
      "tag": "TryCatch",
      "path": "Activity/Sequence/TryCatch",
      "formattedLine": "  - [Try initializing assets] TryCatch (Path: Activity/Sequence/TryCatch)",
      "nodeId": "Activity/Sequence/TryCatch_2",
      "depth": 2,
      "isVisual": true,
      "children": [
        {
          "indent": 2,
          "displayName": "Get Orchestrator assets",
          "tag": "Sequence",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence",
          "formattedLine": "    - [Get Orchestrator assets] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence_4",
          "depth": 4,
          "isVisual": true,
          "children": [
            {
              "indent": 3,
              "displayName": "Read range (Assets sheet)",
              "tag": "ReadRange",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange",
              "formattedLine": "      - [Read range (Assets sheet)] ReadRange (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange_5",
              "depth": 5,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 3,
              "displayName": "For each asset row",
              "tag": "ForEachRow",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow",
              "formattedLine": "      - [For each asset row] ForEachRow (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow_5",
              "depth": 5,
              "isVisual": true,
              "children": [
                {
                  "indent": 4,
                  "displayName": "Try retrieving asset from Orchestrator",
                  "tag": "TryCatch",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch",
                  "formattedLine": "        - [Try retrieving asset from Orchestrator] TryCatch (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch_8",
                  "depth": 8,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 5,
                      "displayName": "Get asset from Orchestrator",
                      "tag": "Sequence",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
                      "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
                      "depth": 10,
                      "isVisual": true,
                      "children": [
                        {
                          "indent": 6,
                          "displayName": "Get Orchestrator asset",
                          "tag": "GetRobotAsset",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                          "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                          "depth": 11,
                          "isVisual": true,
                          "children": []
                        },
                        {
                          "indent": 6,
                          "displayName": "Assign asset value in Config",
                          "tag": "Assign",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                          "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                          "depth": 11,
                          "isVisual": true,
                          "children": []
                        }
                      ]
                    },
                    {
                      "indent": 6,
                      "displayName": "Get Orchestrator asset",
                      "tag": "GetRobotAsset",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                      "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 6,
                      "displayName": "Assign asset value in Config",
                      "tag": "Assign",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                      "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 5,
                      "displayName": "If asset name is specified, but it cannot be retrieved",
                      "tag": "If",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
                      "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
                      "depth": 12,
                      "isVisual": true,
                      "children": [
                        {
                          "indent": 6,
                          "displayName": "Throw AssetFailedToLoad Exception",
                          "tag": "Throw",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                          "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                          "depth": 14,
                          "isVisual": true,
                          "children": []
                        }
                      ]
                    },
                    {
                      "indent": 6,
                      "displayName": "Throw AssetFailedToLoad Exception",
                      "tag": "Throw",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                      "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                      "depth": 14,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 5,
                  "displayName": "Get asset from Orchestrator",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
                  "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
                  "depth": 10,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Get Orchestrator asset",
                      "tag": "GetRobotAsset",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                      "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 6,
                      "displayName": "Assign asset value in Config",
                      "tag": "Assign",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                      "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "If asset name is specified, but it cannot be retrieved",
                  "tag": "If",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
                  "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
                  "depth": 12,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Throw AssetFailedToLoad Exception",
                      "tag": "Throw",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                      "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                      "depth": 14,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 4,
              "displayName": "Try retrieving asset from Orchestrator",
              "tag": "TryCatch",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch",
              "formattedLine": "        - [Try retrieving asset from Orchestrator] TryCatch (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch_8",
              "depth": 8,
              "isVisual": true,
              "children": [
                {
                  "indent": 5,
                  "displayName": "Get asset from Orchestrator",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
                  "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
                  "depth": 10,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Get Orchestrator asset",
                      "tag": "GetRobotAsset",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                      "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 6,
                      "displayName": "Assign asset value in Config",
                      "tag": "Assign",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                      "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "If asset name is specified, but it cannot be retrieved",
                  "tag": "If",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
                  "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
                  "depth": 12,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Throw AssetFailedToLoad Exception",
                      "tag": "Throw",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                      "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                      "depth": 14,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 5,
              "displayName": "Get asset from Orchestrator",
              "tag": "Sequence",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
              "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
              "depth": 10,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Get Orchestrator asset",
              "tag": "GetRobotAsset",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
              "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 6,
              "displayName": "Assign asset value in Config",
              "tag": "Assign",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
              "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "If asset name is specified, but it cannot be retrieved",
              "tag": "If",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
              "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
              "depth": 12,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Throw AssetFailedToLoad Exception",
              "tag": "Throw",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
              "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
              "depth": 14,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 3,
          "displayName": "Read range (Assets sheet)",
          "tag": "ReadRange",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange",
          "formattedLine": "      - [Read range (Assets sheet)] ReadRange (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange_5",
          "depth": 5,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 3,
          "displayName": "For each asset row",
          "tag": "ForEachRow",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow",
          "formattedLine": "      - [For each asset row] ForEachRow (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow_5",
          "depth": 5,
          "isVisual": true,
          "children": [
            {
              "indent": 4,
              "displayName": "Try retrieving asset from Orchestrator",
              "tag": "TryCatch",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch",
              "formattedLine": "        - [Try retrieving asset from Orchestrator] TryCatch (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch_8",
              "depth": 8,
              "isVisual": true,
              "children": [
                {
                  "indent": 5,
                  "displayName": "Get asset from Orchestrator",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
                  "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
                  "depth": 10,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Get Orchestrator asset",
                      "tag": "GetRobotAsset",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                      "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 6,
                      "displayName": "Assign asset value in Config",
                      "tag": "Assign",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                      "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "If asset name is specified, but it cannot be retrieved",
                  "tag": "If",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
                  "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
                  "depth": 12,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Throw AssetFailedToLoad Exception",
                      "tag": "Throw",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                      "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                      "depth": 14,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 5,
              "displayName": "Get asset from Orchestrator",
              "tag": "Sequence",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
              "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
              "depth": 10,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Get Orchestrator asset",
              "tag": "GetRobotAsset",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
              "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 6,
              "displayName": "Assign asset value in Config",
              "tag": "Assign",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
              "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "If asset name is specified, but it cannot be retrieved",
              "tag": "If",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
              "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
              "depth": 12,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Throw AssetFailedToLoad Exception",
              "tag": "Throw",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
              "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
              "depth": 14,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 4,
          "displayName": "Try retrieving asset from Orchestrator",
          "tag": "TryCatch",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch",
          "formattedLine": "        - [Try retrieving asset from Orchestrator] TryCatch (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch_8",
          "depth": 8,
          "isVisual": true,
          "children": [
            {
              "indent": 5,
              "displayName": "Get asset from Orchestrator",
              "tag": "Sequence",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
              "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
              "depth": 10,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Get Orchestrator asset",
              "tag": "GetRobotAsset",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
              "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 6,
              "displayName": "Assign asset value in Config",
              "tag": "Assign",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
              "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "If asset name is specified, but it cannot be retrieved",
              "tag": "If",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
              "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
              "depth": 12,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Throw AssetFailedToLoad Exception",
              "tag": "Throw",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
              "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
              "depth": 14,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 5,
          "displayName": "Get asset from Orchestrator",
          "tag": "Sequence",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
          "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
          "depth": 10,
          "isVisual": true,
          "children": [
            {
              "indent": 6,
              "displayName": "Get Orchestrator asset",
              "tag": "GetRobotAsset",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
              "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 6,
              "displayName": "Assign asset value in Config",
              "tag": "Assign",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
              "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 6,
          "displayName": "Get Orchestrator asset",
          "tag": "GetRobotAsset",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
          "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 6,
          "displayName": "Assign asset value in Config",
          "tag": "Assign",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
          "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 5,
          "displayName": "If asset name is specified, but it cannot be retrieved",
          "tag": "If",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
          "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
          "depth": 12,
          "isVisual": true,
          "children": [
            {
              "indent": 6,
              "displayName": "Throw AssetFailedToLoad Exception",
              "tag": "Throw",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
              "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
              "depth": 14,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 6,
          "displayName": "Throw AssetFailedToLoad Exception",
          "tag": "Throw",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
          "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
          "depth": 14,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 2,
          "displayName": "Rethrow loading asset exception",
          "tag": "Rethrow",
          "path": "Activity/Sequence/TryCatch/TryCatch.Catches/Catch/ActivityAction/Rethrow",
          "formattedLine": "    - [Rethrow loading asset exception] Rethrow (Path: Activity/Sequence/TryCatch/TryCatch.Catches/Catch/ActivityAction/Rethrow)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Catches/Catch/ActivityAction/Rethrow_6",
          "depth": 6,
          "isVisual": true,
          "children": []
        }
      ]
    },
    {
      "indent": 2,
      "displayName": "Get Orchestrator assets",
      "tag": "Sequence",
      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence",
      "formattedLine": "    - [Get Orchestrator assets] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence)",
      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence_4",
      "depth": 4,
      "isVisual": true,
      "children": [
        {
          "indent": 3,
          "displayName": "Read range (Assets sheet)",
          "tag": "ReadRange",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange",
          "formattedLine": "      - [Read range (Assets sheet)] ReadRange (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange_5",
          "depth": 5,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 3,
          "displayName": "For each asset row",
          "tag": "ForEachRow",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow",
          "formattedLine": "      - [For each asset row] ForEachRow (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow_5",
          "depth": 5,
          "isVisual": true,
          "children": [
            {
              "indent": 4,
              "displayName": "Try retrieving asset from Orchestrator",
              "tag": "TryCatch",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch",
              "formattedLine": "        - [Try retrieving asset from Orchestrator] TryCatch (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch_8",
              "depth": 8,
              "isVisual": true,
              "children": [
                {
                  "indent": 5,
                  "displayName": "Get asset from Orchestrator",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
                  "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
                  "depth": 10,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Get Orchestrator asset",
                      "tag": "GetRobotAsset",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                      "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 6,
                      "displayName": "Assign asset value in Config",
                      "tag": "Assign",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                      "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "If asset name is specified, but it cannot be retrieved",
                  "tag": "If",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
                  "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
                  "depth": 12,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Throw AssetFailedToLoad Exception",
                      "tag": "Throw",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                      "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                      "depth": 14,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 5,
              "displayName": "Get asset from Orchestrator",
              "tag": "Sequence",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
              "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
              "depth": 10,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Get Orchestrator asset",
              "tag": "GetRobotAsset",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
              "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 6,
              "displayName": "Assign asset value in Config",
              "tag": "Assign",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
              "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "If asset name is specified, but it cannot be retrieved",
              "tag": "If",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
              "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
              "depth": 12,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Throw AssetFailedToLoad Exception",
              "tag": "Throw",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
              "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
              "depth": 14,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 4,
          "displayName": "Try retrieving asset from Orchestrator",
          "tag": "TryCatch",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch",
          "formattedLine": "        - [Try retrieving asset from Orchestrator] TryCatch (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch_8",
          "depth": 8,
          "isVisual": true,
          "children": [
            {
              "indent": 5,
              "displayName": "Get asset from Orchestrator",
              "tag": "Sequence",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
              "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
              "depth": 10,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Get Orchestrator asset",
              "tag": "GetRobotAsset",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
              "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 6,
              "displayName": "Assign asset value in Config",
              "tag": "Assign",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
              "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "If asset name is specified, but it cannot be retrieved",
              "tag": "If",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
              "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
              "depth": 12,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Throw AssetFailedToLoad Exception",
              "tag": "Throw",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
              "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
              "depth": 14,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 5,
          "displayName": "Get asset from Orchestrator",
          "tag": "Sequence",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
          "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
          "depth": 10,
          "isVisual": true,
          "children": [
            {
              "indent": 6,
              "displayName": "Get Orchestrator asset",
              "tag": "GetRobotAsset",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
              "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 6,
              "displayName": "Assign asset value in Config",
              "tag": "Assign",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
              "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 6,
          "displayName": "Get Orchestrator asset",
          "tag": "GetRobotAsset",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
          "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 6,
          "displayName": "Assign asset value in Config",
          "tag": "Assign",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
          "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 5,
          "displayName": "If asset name is specified, but it cannot be retrieved",
          "tag": "If",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
          "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
          "depth": 12,
          "isVisual": true,
          "children": [
            {
              "indent": 6,
              "displayName": "Throw AssetFailedToLoad Exception",
              "tag": "Throw",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
              "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
              "depth": 14,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 6,
          "displayName": "Throw AssetFailedToLoad Exception",
          "tag": "Throw",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
          "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
          "depth": 14,
          "isVisual": true,
          "children": []
        }
      ]
    },
    {
      "indent": 3,
      "displayName": "Read range (Assets sheet)",
      "tag": "ReadRange",
      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange",
      "formattedLine": "      - [Read range (Assets sheet)] ReadRange (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange)",
      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange_5",
      "depth": 5,
      "isVisual": true,
      "children": []
    },
    {
      "indent": 3,
      "displayName": "For each asset row",
      "tag": "ForEachRow",
      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow",
      "formattedLine": "      - [For each asset row] ForEachRow (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow)",
      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow_5",
      "depth": 5,
      "isVisual": true,
      "children": [
        {
          "indent": 4,
          "displayName": "Try retrieving asset from Orchestrator",
          "tag": "TryCatch",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch",
          "formattedLine": "        - [Try retrieving asset from Orchestrator] TryCatch (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch_8",
          "depth": 8,
          "isVisual": true,
          "children": [
            {
              "indent": 5,
              "displayName": "Get asset from Orchestrator",
              "tag": "Sequence",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
              "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
              "depth": 10,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Get Orchestrator asset",
              "tag": "GetRobotAsset",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
              "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 6,
              "displayName": "Assign asset value in Config",
              "tag": "Assign",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
              "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "If asset name is specified, but it cannot be retrieved",
              "tag": "If",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
              "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
              "depth": 12,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Throw AssetFailedToLoad Exception",
              "tag": "Throw",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
              "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
              "depth": 14,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 5,
          "displayName": "Get asset from Orchestrator",
          "tag": "Sequence",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
          "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
          "depth": 10,
          "isVisual": true,
          "children": [
            {
              "indent": 6,
              "displayName": "Get Orchestrator asset",
              "tag": "GetRobotAsset",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
              "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 6,
              "displayName": "Assign asset value in Config",
              "tag": "Assign",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
              "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 6,
          "displayName": "Get Orchestrator asset",
          "tag": "GetRobotAsset",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
          "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 6,
          "displayName": "Assign asset value in Config",
          "tag": "Assign",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
          "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 5,
          "displayName": "If asset name is specified, but it cannot be retrieved",
          "tag": "If",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
          "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
          "depth": 12,
          "isVisual": true,
          "children": [
            {
              "indent": 6,
              "displayName": "Throw AssetFailedToLoad Exception",
              "tag": "Throw",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
              "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
              "depth": 14,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 6,
          "displayName": "Throw AssetFailedToLoad Exception",
          "tag": "Throw",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
          "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
          "depth": 14,
          "isVisual": true,
          "children": []
        }
      ]
    },
    {
      "indent": 4,
      "displayName": "Try retrieving asset from Orchestrator",
      "tag": "TryCatch",
      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch",
      "formattedLine": "        - [Try retrieving asset from Orchestrator] TryCatch (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch)",
      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch_8",
      "depth": 8,
      "isVisual": true,
      "children": [
        {
          "indent": 5,
          "displayName": "Get asset from Orchestrator",
          "tag": "Sequence",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
          "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
          "depth": 10,
          "isVisual": true,
          "children": [
            {
              "indent": 6,
              "displayName": "Get Orchestrator asset",
              "tag": "GetRobotAsset",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
              "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 6,
              "displayName": "Assign asset value in Config",
              "tag": "Assign",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
              "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 6,
          "displayName": "Get Orchestrator asset",
          "tag": "GetRobotAsset",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
          "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 6,
          "displayName": "Assign asset value in Config",
          "tag": "Assign",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
          "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 5,
          "displayName": "If asset name is specified, but it cannot be retrieved",
          "tag": "If",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
          "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
          "depth": 12,
          "isVisual": true,
          "children": [
            {
              "indent": 6,
              "displayName": "Throw AssetFailedToLoad Exception",
              "tag": "Throw",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
              "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
              "depth": 14,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 6,
          "displayName": "Throw AssetFailedToLoad Exception",
          "tag": "Throw",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
          "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
          "depth": 14,
          "isVisual": true,
          "children": []
        }
      ]
    },
    {
      "indent": 5,
      "displayName": "Get asset from Orchestrator",
      "tag": "Sequence",
      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
      "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
      "depth": 10,
      "isVisual": true,
      "children": [
        {
          "indent": 6,
          "displayName": "Get Orchestrator asset",
          "tag": "GetRobotAsset",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
          "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 6,
          "displayName": "Assign asset value in Config",
          "tag": "Assign",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
          "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        }
      ]
    },
    {
      "indent": 6,
      "displayName": "Get Orchestrator asset",
      "tag": "GetRobotAsset",
      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
      "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
      "depth": 11,
      "isVisual": true,
      "children": []
    },
    {
      "indent": 6,
      "displayName": "Assign asset value in Config",
      "tag": "Assign",
      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
      "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
      "depth": 11,
      "isVisual": true,
      "children": []
    },
    {
      "indent": 5,
      "displayName": "If asset name is specified, but it cannot be retrieved",
      "tag": "If",
      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
      "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
      "depth": 12,
      "isVisual": true,
      "children": [
        {
          "indent": 6,
          "displayName": "Throw AssetFailedToLoad Exception",
          "tag": "Throw",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
          "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
          "depth": 14,
          "isVisual": true,
          "children": []
        }
      ]
    },
    {
      "indent": 6,
      "displayName": "Throw AssetFailedToLoad Exception",
      "tag": "Throw",
      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
      "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
      "depth": 14,
      "isVisual": true,
      "children": []
    },
    {
      "indent": 2,
      "displayName": "Rethrow loading asset exception",
      "tag": "Rethrow",
      "path": "Activity/Sequence/TryCatch/TryCatch.Catches/Catch/ActivityAction/Rethrow",
      "formattedLine": "    - [Rethrow loading asset exception] Rethrow (Path: Activity/Sequence/TryCatch/TryCatch.Catches/Catch/ActivityAction/Rethrow)",
      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Catches/Catch/ActivityAction/Rethrow_6",
      "depth": 6,
      "isVisual": true,
      "children": []
    }
  ],
  "activity_count": 21,
  "format_version": "gist-style",
  "total_lines": 21,
  "total_activities": 21,
  "entries": [
    {
      "indent": 0,
      "displayName": "Initialize All Settings",
      "tag": "Sequence",
      "path": "Activity/Sequence",
      "formattedLine": "- [Initialize All Settings] Sequence (Path: Activity/Sequence)",
      "nodeId": "Activity/Sequence_1",
      "depth": 1,
      "isVisual": true,
      "children": [
        {
          "indent": 1,
          "displayName": "Log Message (Initialize All Settings)",
          "tag": "LogMessage",
          "path": "Activity/Sequence/LogMessage",
          "formattedLine": "  - [Log Message (Initialize All Settings)] LogMessage (Path: Activity/Sequence/LogMessage)",
          "nodeId": "Activity/Sequence/LogMessage_2",
          "depth": 2,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 1,
          "displayName": "Assing out_Config (initialization)",
          "tag": "Assign",
          "path": "Activity/Sequence/Assign",
          "formattedLine": "  - [Assing out_Config (initialization)] Assign (Path: Activity/Sequence/Assign)",
          "nodeId": "Activity/Sequence/Assign_2",
          "depth": 2,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 1,
          "displayName": "For each configuration sheet",
          "tag": "ForEach",
          "path": "Activity/Sequence/ForEach",
          "formattedLine": "  - [For each configuration sheet] ForEach (Path: Activity/Sequence/ForEach)",
          "nodeId": "Activity/Sequence/ForEach_2",
          "depth": 2,
          "isVisual": true,
          "children": [
            {
              "indent": 2,
              "displayName": "Get local settings and constants",
              "tag": "Sequence",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence",
              "formattedLine": "    - [Get local settings and constants] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence_5",
              "depth": 5,
              "isVisual": true,
              "children": [
                {
                  "indent": 3,
                  "displayName": "Read range (Settings and Constants sheets)",
                  "tag": "ReadRange",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange",
                  "formattedLine": "      - [Read range (Settings and Constants sheets)] ReadRange (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange_6",
                  "depth": 6,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 3,
                  "displayName": "For each configuration row",
                  "tag": "ForEachRow",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow",
                  "formattedLine": "      - [For each configuration row] ForEachRow (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow_6",
                  "depth": 6,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 4,
                      "displayName": "If configuration row is not empty",
                      "tag": "If",
                      "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If",
                      "formattedLine": "        - [If configuration row is not empty] If (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If)",
                      "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If_9",
                      "depth": 9,
                      "isVisual": true,
                      "children": [
                        {
                          "indent": 5,
                          "displayName": "Add Config key/value pair",
                          "tag": "Assign",
                          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
                          "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
                          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
                          "depth": 11,
                          "isVisual": true,
                          "children": []
                        },
                        {
                          "indent": 5,
                          "displayName": "Else",
                          "tag": "Sequence",
                          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
                          "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
                          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
                          "depth": 11,
                          "isVisual": true,
                          "children": []
                        }
                      ]
                    },
                    {
                      "indent": 5,
                      "displayName": "Add Config key/value pair",
                      "tag": "Assign",
                      "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
                      "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
                      "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 5,
                      "displayName": "Else",
                      "tag": "Sequence",
                      "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
                      "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
                      "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 4,
                  "displayName": "If configuration row is not empty",
                  "tag": "If",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If",
                  "formattedLine": "        - [If configuration row is not empty] If (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If_9",
                  "depth": 9,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 5,
                      "displayName": "Add Config key/value pair",
                      "tag": "Assign",
                      "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
                      "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
                      "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 5,
                      "displayName": "Else",
                      "tag": "Sequence",
                      "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
                      "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
                      "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 5,
                  "displayName": "Add Config key/value pair",
                  "tag": "Assign",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
                  "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "Else",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
                  "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 3,
              "displayName": "Read range (Settings and Constants sheets)",
              "tag": "ReadRange",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange",
              "formattedLine": "      - [Read range (Settings and Constants sheets)] ReadRange (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange_6",
              "depth": 6,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 3,
              "displayName": "For each configuration row",
              "tag": "ForEachRow",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow",
              "formattedLine": "      - [For each configuration row] ForEachRow (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow_6",
              "depth": 6,
              "isVisual": true,
              "children": [
                {
                  "indent": 4,
                  "displayName": "If configuration row is not empty",
                  "tag": "If",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If",
                  "formattedLine": "        - [If configuration row is not empty] If (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If_9",
                  "depth": 9,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 5,
                      "displayName": "Add Config key/value pair",
                      "tag": "Assign",
                      "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
                      "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
                      "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 5,
                      "displayName": "Else",
                      "tag": "Sequence",
                      "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
                      "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
                      "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 5,
                  "displayName": "Add Config key/value pair",
                  "tag": "Assign",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
                  "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "Else",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
                  "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 4,
              "displayName": "If configuration row is not empty",
              "tag": "If",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If",
              "formattedLine": "        - [If configuration row is not empty] If (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If_9",
              "depth": 9,
              "isVisual": true,
              "children": [
                {
                  "indent": 5,
                  "displayName": "Add Config key/value pair",
                  "tag": "Assign",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
                  "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "Else",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
                  "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 5,
              "displayName": "Add Config key/value pair",
              "tag": "Assign",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
              "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "Else",
              "tag": "Sequence",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
              "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 2,
          "displayName": "Get local settings and constants",
          "tag": "Sequence",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence",
          "formattedLine": "    - [Get local settings and constants] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence_5",
          "depth": 5,
          "isVisual": true,
          "children": [
            {
              "indent": 3,
              "displayName": "Read range (Settings and Constants sheets)",
              "tag": "ReadRange",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange",
              "formattedLine": "      - [Read range (Settings and Constants sheets)] ReadRange (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange_6",
              "depth": 6,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 3,
              "displayName": "For each configuration row",
              "tag": "ForEachRow",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow",
              "formattedLine": "      - [For each configuration row] ForEachRow (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow_6",
              "depth": 6,
              "isVisual": true,
              "children": [
                {
                  "indent": 4,
                  "displayName": "If configuration row is not empty",
                  "tag": "If",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If",
                  "formattedLine": "        - [If configuration row is not empty] If (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If_9",
                  "depth": 9,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 5,
                      "displayName": "Add Config key/value pair",
                      "tag": "Assign",
                      "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
                      "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
                      "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 5,
                      "displayName": "Else",
                      "tag": "Sequence",
                      "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
                      "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
                      "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 5,
                  "displayName": "Add Config key/value pair",
                  "tag": "Assign",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
                  "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "Else",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
                  "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 4,
              "displayName": "If configuration row is not empty",
              "tag": "If",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If",
              "formattedLine": "        - [If configuration row is not empty] If (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If_9",
              "depth": 9,
              "isVisual": true,
              "children": [
                {
                  "indent": 5,
                  "displayName": "Add Config key/value pair",
                  "tag": "Assign",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
                  "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "Else",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
                  "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 5,
              "displayName": "Add Config key/value pair",
              "tag": "Assign",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
              "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "Else",
              "tag": "Sequence",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
              "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 3,
          "displayName": "Read range (Settings and Constants sheets)",
          "tag": "ReadRange",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange",
          "formattedLine": "      - [Read range (Settings and Constants sheets)] ReadRange (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange_6",
          "depth": 6,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 3,
          "displayName": "For each configuration row",
          "tag": "ForEachRow",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow",
          "formattedLine": "      - [For each configuration row] ForEachRow (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow_6",
          "depth": 6,
          "isVisual": true,
          "children": [
            {
              "indent": 4,
              "displayName": "If configuration row is not empty",
              "tag": "If",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If",
              "formattedLine": "        - [If configuration row is not empty] If (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If_9",
              "depth": 9,
              "isVisual": true,
              "children": [
                {
                  "indent": 5,
                  "displayName": "Add Config key/value pair",
                  "tag": "Assign",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
                  "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "Else",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
                  "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 5,
              "displayName": "Add Config key/value pair",
              "tag": "Assign",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
              "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "Else",
              "tag": "Sequence",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
              "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 4,
          "displayName": "If configuration row is not empty",
          "tag": "If",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If",
          "formattedLine": "        - [If configuration row is not empty] If (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If_9",
          "depth": 9,
          "isVisual": true,
          "children": [
            {
              "indent": 5,
              "displayName": "Add Config key/value pair",
              "tag": "Assign",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
              "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "Else",
              "tag": "Sequence",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
              "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 5,
          "displayName": "Add Config key/value pair",
          "tag": "Assign",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
          "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 5,
          "displayName": "Else",
          "tag": "Sequence",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
          "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 1,
          "displayName": "Try initializing assets",
          "tag": "TryCatch",
          "path": "Activity/Sequence/TryCatch",
          "formattedLine": "  - [Try initializing assets] TryCatch (Path: Activity/Sequence/TryCatch)",
          "nodeId": "Activity/Sequence/TryCatch_2",
          "depth": 2,
          "isVisual": true,
          "children": [
            {
              "indent": 2,
              "displayName": "Get Orchestrator assets",
              "tag": "Sequence",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence",
              "formattedLine": "    - [Get Orchestrator assets] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence_4",
              "depth": 4,
              "isVisual": true,
              "children": [
                {
                  "indent": 3,
                  "displayName": "Read range (Assets sheet)",
                  "tag": "ReadRange",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange",
                  "formattedLine": "      - [Read range (Assets sheet)] ReadRange (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange_5",
                  "depth": 5,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 3,
                  "displayName": "For each asset row",
                  "tag": "ForEachRow",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow",
                  "formattedLine": "      - [For each asset row] ForEachRow (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow_5",
                  "depth": 5,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 4,
                      "displayName": "Try retrieving asset from Orchestrator",
                      "tag": "TryCatch",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch",
                      "formattedLine": "        - [Try retrieving asset from Orchestrator] TryCatch (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch_8",
                      "depth": 8,
                      "isVisual": true,
                      "children": [
                        {
                          "indent": 5,
                          "displayName": "Get asset from Orchestrator",
                          "tag": "Sequence",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
                          "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
                          "depth": 10,
                          "isVisual": true,
                          "children": [
                            {
                              "indent": 6,
                              "displayName": "Get Orchestrator asset",
                              "tag": "GetRobotAsset",
                              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                              "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                              "depth": 11,
                              "isVisual": true,
                              "children": []
                            },
                            {
                              "indent": 6,
                              "displayName": "Assign asset value in Config",
                              "tag": "Assign",
                              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                              "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                              "depth": 11,
                              "isVisual": true,
                              "children": []
                            }
                          ]
                        },
                        {
                          "indent": 6,
                          "displayName": "Get Orchestrator asset",
                          "tag": "GetRobotAsset",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                          "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                          "depth": 11,
                          "isVisual": true,
                          "children": []
                        },
                        {
                          "indent": 6,
                          "displayName": "Assign asset value in Config",
                          "tag": "Assign",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                          "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                          "depth": 11,
                          "isVisual": true,
                          "children": []
                        },
                        {
                          "indent": 5,
                          "displayName": "If asset name is specified, but it cannot be retrieved",
                          "tag": "If",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
                          "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
                          "depth": 12,
                          "isVisual": true,
                          "children": [
                            {
                              "indent": 6,
                              "displayName": "Throw AssetFailedToLoad Exception",
                              "tag": "Throw",
                              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                              "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                              "depth": 14,
                              "isVisual": true,
                              "children": []
                            }
                          ]
                        },
                        {
                          "indent": 6,
                          "displayName": "Throw AssetFailedToLoad Exception",
                          "tag": "Throw",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                          "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                          "depth": 14,
                          "isVisual": true,
                          "children": []
                        }
                      ]
                    },
                    {
                      "indent": 5,
                      "displayName": "Get asset from Orchestrator",
                      "tag": "Sequence",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
                      "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
                      "depth": 10,
                      "isVisual": true,
                      "children": [
                        {
                          "indent": 6,
                          "displayName": "Get Orchestrator asset",
                          "tag": "GetRobotAsset",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                          "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                          "depth": 11,
                          "isVisual": true,
                          "children": []
                        },
                        {
                          "indent": 6,
                          "displayName": "Assign asset value in Config",
                          "tag": "Assign",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                          "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                          "depth": 11,
                          "isVisual": true,
                          "children": []
                        }
                      ]
                    },
                    {
                      "indent": 6,
                      "displayName": "Get Orchestrator asset",
                      "tag": "GetRobotAsset",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                      "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 6,
                      "displayName": "Assign asset value in Config",
                      "tag": "Assign",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                      "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 5,
                      "displayName": "If asset name is specified, but it cannot be retrieved",
                      "tag": "If",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
                      "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
                      "depth": 12,
                      "isVisual": true,
                      "children": [
                        {
                          "indent": 6,
                          "displayName": "Throw AssetFailedToLoad Exception",
                          "tag": "Throw",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                          "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                          "depth": 14,
                          "isVisual": true,
                          "children": []
                        }
                      ]
                    },
                    {
                      "indent": 6,
                      "displayName": "Throw AssetFailedToLoad Exception",
                      "tag": "Throw",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                      "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                      "depth": 14,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 4,
                  "displayName": "Try retrieving asset from Orchestrator",
                  "tag": "TryCatch",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch",
                  "formattedLine": "        - [Try retrieving asset from Orchestrator] TryCatch (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch_8",
                  "depth": 8,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 5,
                      "displayName": "Get asset from Orchestrator",
                      "tag": "Sequence",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
                      "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
                      "depth": 10,
                      "isVisual": true,
                      "children": [
                        {
                          "indent": 6,
                          "displayName": "Get Orchestrator asset",
                          "tag": "GetRobotAsset",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                          "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                          "depth": 11,
                          "isVisual": true,
                          "children": []
                        },
                        {
                          "indent": 6,
                          "displayName": "Assign asset value in Config",
                          "tag": "Assign",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                          "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                          "depth": 11,
                          "isVisual": true,
                          "children": []
                        }
                      ]
                    },
                    {
                      "indent": 6,
                      "displayName": "Get Orchestrator asset",
                      "tag": "GetRobotAsset",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                      "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 6,
                      "displayName": "Assign asset value in Config",
                      "tag": "Assign",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                      "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 5,
                      "displayName": "If asset name is specified, but it cannot be retrieved",
                      "tag": "If",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
                      "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
                      "depth": 12,
                      "isVisual": true,
                      "children": [
                        {
                          "indent": 6,
                          "displayName": "Throw AssetFailedToLoad Exception",
                          "tag": "Throw",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                          "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                          "depth": 14,
                          "isVisual": true,
                          "children": []
                        }
                      ]
                    },
                    {
                      "indent": 6,
                      "displayName": "Throw AssetFailedToLoad Exception",
                      "tag": "Throw",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                      "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                      "depth": 14,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 5,
                  "displayName": "Get asset from Orchestrator",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
                  "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
                  "depth": 10,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Get Orchestrator asset",
                      "tag": "GetRobotAsset",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                      "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 6,
                      "displayName": "Assign asset value in Config",
                      "tag": "Assign",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                      "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "If asset name is specified, but it cannot be retrieved",
                  "tag": "If",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
                  "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
                  "depth": 12,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Throw AssetFailedToLoad Exception",
                      "tag": "Throw",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                      "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                      "depth": 14,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 3,
              "displayName": "Read range (Assets sheet)",
              "tag": "ReadRange",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange",
              "formattedLine": "      - [Read range (Assets sheet)] ReadRange (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange_5",
              "depth": 5,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 3,
              "displayName": "For each asset row",
              "tag": "ForEachRow",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow",
              "formattedLine": "      - [For each asset row] ForEachRow (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow_5",
              "depth": 5,
              "isVisual": true,
              "children": [
                {
                  "indent": 4,
                  "displayName": "Try retrieving asset from Orchestrator",
                  "tag": "TryCatch",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch",
                  "formattedLine": "        - [Try retrieving asset from Orchestrator] TryCatch (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch_8",
                  "depth": 8,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 5,
                      "displayName": "Get asset from Orchestrator",
                      "tag": "Sequence",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
                      "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
                      "depth": 10,
                      "isVisual": true,
                      "children": [
                        {
                          "indent": 6,
                          "displayName": "Get Orchestrator asset",
                          "tag": "GetRobotAsset",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                          "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                          "depth": 11,
                          "isVisual": true,
                          "children": []
                        },
                        {
                          "indent": 6,
                          "displayName": "Assign asset value in Config",
                          "tag": "Assign",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                          "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                          "depth": 11,
                          "isVisual": true,
                          "children": []
                        }
                      ]
                    },
                    {
                      "indent": 6,
                      "displayName": "Get Orchestrator asset",
                      "tag": "GetRobotAsset",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                      "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 6,
                      "displayName": "Assign asset value in Config",
                      "tag": "Assign",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                      "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 5,
                      "displayName": "If asset name is specified, but it cannot be retrieved",
                      "tag": "If",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
                      "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
                      "depth": 12,
                      "isVisual": true,
                      "children": [
                        {
                          "indent": 6,
                          "displayName": "Throw AssetFailedToLoad Exception",
                          "tag": "Throw",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                          "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                          "depth": 14,
                          "isVisual": true,
                          "children": []
                        }
                      ]
                    },
                    {
                      "indent": 6,
                      "displayName": "Throw AssetFailedToLoad Exception",
                      "tag": "Throw",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                      "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                      "depth": 14,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 5,
                  "displayName": "Get asset from Orchestrator",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
                  "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
                  "depth": 10,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Get Orchestrator asset",
                      "tag": "GetRobotAsset",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                      "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 6,
                      "displayName": "Assign asset value in Config",
                      "tag": "Assign",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                      "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "If asset name is specified, but it cannot be retrieved",
                  "tag": "If",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
                  "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
                  "depth": 12,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Throw AssetFailedToLoad Exception",
                      "tag": "Throw",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                      "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                      "depth": 14,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 4,
              "displayName": "Try retrieving asset from Orchestrator",
              "tag": "TryCatch",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch",
              "formattedLine": "        - [Try retrieving asset from Orchestrator] TryCatch (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch_8",
              "depth": 8,
              "isVisual": true,
              "children": [
                {
                  "indent": 5,
                  "displayName": "Get asset from Orchestrator",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
                  "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
                  "depth": 10,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Get Orchestrator asset",
                      "tag": "GetRobotAsset",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                      "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 6,
                      "displayName": "Assign asset value in Config",
                      "tag": "Assign",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                      "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "If asset name is specified, but it cannot be retrieved",
                  "tag": "If",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
                  "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
                  "depth": 12,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Throw AssetFailedToLoad Exception",
                      "tag": "Throw",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                      "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                      "depth": 14,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 5,
              "displayName": "Get asset from Orchestrator",
              "tag": "Sequence",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
              "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
              "depth": 10,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Get Orchestrator asset",
              "tag": "GetRobotAsset",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
              "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 6,
              "displayName": "Assign asset value in Config",
              "tag": "Assign",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
              "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "If asset name is specified, but it cannot be retrieved",
              "tag": "If",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
              "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
              "depth": 12,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Throw AssetFailedToLoad Exception",
              "tag": "Throw",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
              "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
              "depth": 14,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 2,
              "displayName": "Rethrow loading asset exception",
              "tag": "Rethrow",
              "path": "Activity/Sequence/TryCatch/TryCatch.Catches/Catch/ActivityAction/Rethrow",
              "formattedLine": "    - [Rethrow loading asset exception] Rethrow (Path: Activity/Sequence/TryCatch/TryCatch.Catches/Catch/ActivityAction/Rethrow)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Catches/Catch/ActivityAction/Rethrow_6",
              "depth": 6,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 2,
          "displayName": "Get Orchestrator assets",
          "tag": "Sequence",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence",
          "formattedLine": "    - [Get Orchestrator assets] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence_4",
          "depth": 4,
          "isVisual": true,
          "children": [
            {
              "indent": 3,
              "displayName": "Read range (Assets sheet)",
              "tag": "ReadRange",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange",
              "formattedLine": "      - [Read range (Assets sheet)] ReadRange (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange_5",
              "depth": 5,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 3,
              "displayName": "For each asset row",
              "tag": "ForEachRow",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow",
              "formattedLine": "      - [For each asset row] ForEachRow (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow_5",
              "depth": 5,
              "isVisual": true,
              "children": [
                {
                  "indent": 4,
                  "displayName": "Try retrieving asset from Orchestrator",
                  "tag": "TryCatch",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch",
                  "formattedLine": "        - [Try retrieving asset from Orchestrator] TryCatch (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch_8",
                  "depth": 8,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 5,
                      "displayName": "Get asset from Orchestrator",
                      "tag": "Sequence",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
                      "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
                      "depth": 10,
                      "isVisual": true,
                      "children": [
                        {
                          "indent": 6,
                          "displayName": "Get Orchestrator asset",
                          "tag": "GetRobotAsset",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                          "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                          "depth": 11,
                          "isVisual": true,
                          "children": []
                        },
                        {
                          "indent": 6,
                          "displayName": "Assign asset value in Config",
                          "tag": "Assign",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                          "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                          "depth": 11,
                          "isVisual": true,
                          "children": []
                        }
                      ]
                    },
                    {
                      "indent": 6,
                      "displayName": "Get Orchestrator asset",
                      "tag": "GetRobotAsset",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                      "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 6,
                      "displayName": "Assign asset value in Config",
                      "tag": "Assign",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                      "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 5,
                      "displayName": "If asset name is specified, but it cannot be retrieved",
                      "tag": "If",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
                      "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
                      "depth": 12,
                      "isVisual": true,
                      "children": [
                        {
                          "indent": 6,
                          "displayName": "Throw AssetFailedToLoad Exception",
                          "tag": "Throw",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                          "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                          "depth": 14,
                          "isVisual": true,
                          "children": []
                        }
                      ]
                    },
                    {
                      "indent": 6,
                      "displayName": "Throw AssetFailedToLoad Exception",
                      "tag": "Throw",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                      "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                      "depth": 14,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 5,
                  "displayName": "Get asset from Orchestrator",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
                  "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
                  "depth": 10,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Get Orchestrator asset",
                      "tag": "GetRobotAsset",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                      "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 6,
                      "displayName": "Assign asset value in Config",
                      "tag": "Assign",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                      "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "If asset name is specified, but it cannot be retrieved",
                  "tag": "If",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
                  "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
                  "depth": 12,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Throw AssetFailedToLoad Exception",
                      "tag": "Throw",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                      "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                      "depth": 14,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 4,
              "displayName": "Try retrieving asset from Orchestrator",
              "tag": "TryCatch",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch",
              "formattedLine": "        - [Try retrieving asset from Orchestrator] TryCatch (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch_8",
              "depth": 8,
              "isVisual": true,
              "children": [
                {
                  "indent": 5,
                  "displayName": "Get asset from Orchestrator",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
                  "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
                  "depth": 10,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Get Orchestrator asset",
                      "tag": "GetRobotAsset",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                      "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 6,
                      "displayName": "Assign asset value in Config",
                      "tag": "Assign",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                      "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "If asset name is specified, but it cannot be retrieved",
                  "tag": "If",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
                  "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
                  "depth": 12,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Throw AssetFailedToLoad Exception",
                      "tag": "Throw",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                      "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                      "depth": 14,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 5,
              "displayName": "Get asset from Orchestrator",
              "tag": "Sequence",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
              "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
              "depth": 10,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Get Orchestrator asset",
              "tag": "GetRobotAsset",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
              "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 6,
              "displayName": "Assign asset value in Config",
              "tag": "Assign",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
              "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "If asset name is specified, but it cannot be retrieved",
              "tag": "If",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
              "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
              "depth": 12,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Throw AssetFailedToLoad Exception",
              "tag": "Throw",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
              "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
              "depth": 14,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 3,
          "displayName": "Read range (Assets sheet)",
          "tag": "ReadRange",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange",
          "formattedLine": "      - [Read range (Assets sheet)] ReadRange (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange_5",
          "depth": 5,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 3,
          "displayName": "For each asset row",
          "tag": "ForEachRow",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow",
          "formattedLine": "      - [For each asset row] ForEachRow (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow_5",
          "depth": 5,
          "isVisual": true,
          "children": [
            {
              "indent": 4,
              "displayName": "Try retrieving asset from Orchestrator",
              "tag": "TryCatch",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch",
              "formattedLine": "        - [Try retrieving asset from Orchestrator] TryCatch (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch_8",
              "depth": 8,
              "isVisual": true,
              "children": [
                {
                  "indent": 5,
                  "displayName": "Get asset from Orchestrator",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
                  "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
                  "depth": 10,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Get Orchestrator asset",
                      "tag": "GetRobotAsset",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                      "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 6,
                      "displayName": "Assign asset value in Config",
                      "tag": "Assign",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                      "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "If asset name is specified, but it cannot be retrieved",
                  "tag": "If",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
                  "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
                  "depth": 12,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Throw AssetFailedToLoad Exception",
                      "tag": "Throw",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                      "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                      "depth": 14,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 5,
              "displayName": "Get asset from Orchestrator",
              "tag": "Sequence",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
              "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
              "depth": 10,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Get Orchestrator asset",
              "tag": "GetRobotAsset",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
              "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 6,
              "displayName": "Assign asset value in Config",
              "tag": "Assign",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
              "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "If asset name is specified, but it cannot be retrieved",
              "tag": "If",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
              "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
              "depth": 12,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Throw AssetFailedToLoad Exception",
              "tag": "Throw",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
              "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
              "depth": 14,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 4,
          "displayName": "Try retrieving asset from Orchestrator",
          "tag": "TryCatch",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch",
          "formattedLine": "        - [Try retrieving asset from Orchestrator] TryCatch (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch_8",
          "depth": 8,
          "isVisual": true,
          "children": [
            {
              "indent": 5,
              "displayName": "Get asset from Orchestrator",
              "tag": "Sequence",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
              "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
              "depth": 10,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Get Orchestrator asset",
              "tag": "GetRobotAsset",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
              "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 6,
              "displayName": "Assign asset value in Config",
              "tag": "Assign",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
              "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "If asset name is specified, but it cannot be retrieved",
              "tag": "If",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
              "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
              "depth": 12,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Throw AssetFailedToLoad Exception",
              "tag": "Throw",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
              "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
              "depth": 14,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 5,
          "displayName": "Get asset from Orchestrator",
          "tag": "Sequence",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
          "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
          "depth": 10,
          "isVisual": true,
          "children": [
            {
              "indent": 6,
              "displayName": "Get Orchestrator asset",
              "tag": "GetRobotAsset",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
              "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 6,
              "displayName": "Assign asset value in Config",
              "tag": "Assign",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
              "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 6,
          "displayName": "Get Orchestrator asset",
          "tag": "GetRobotAsset",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
          "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 6,
          "displayName": "Assign asset value in Config",
          "tag": "Assign",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
          "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 5,
          "displayName": "If asset name is specified, but it cannot be retrieved",
          "tag": "If",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
          "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
          "depth": 12,
          "isVisual": true,
          "children": [
            {
              "indent": 6,
              "displayName": "Throw AssetFailedToLoad Exception",
              "tag": "Throw",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
              "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
              "depth": 14,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 6,
          "displayName": "Throw AssetFailedToLoad Exception",
          "tag": "Throw",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
          "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
          "depth": 14,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 2,
          "displayName": "Rethrow loading asset exception",
          "tag": "Rethrow",
          "path": "Activity/Sequence/TryCatch/TryCatch.Catches/Catch/ActivityAction/Rethrow",
          "formattedLine": "    - [Rethrow loading asset exception] Rethrow (Path: Activity/Sequence/TryCatch/TryCatch.Catches/Catch/ActivityAction/Rethrow)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Catches/Catch/ActivityAction/Rethrow_6",
          "depth": 6,
          "isVisual": true,
          "children": []
        }
      ]
    },
    {
      "indent": 1,
      "displayName": "Log Message (Initialize All Settings)",
      "tag": "LogMessage",
      "path": "Activity/Sequence/LogMessage",
      "formattedLine": "  - [Log Message (Initialize All Settings)] LogMessage (Path: Activity/Sequence/LogMessage)",
      "nodeId": "Activity/Sequence/LogMessage_2",
      "depth": 2,
      "isVisual": true,
      "children": []
    },
    {
      "indent": 1,
      "displayName": "Assing out_Config (initialization)",
      "tag": "Assign",
      "path": "Activity/Sequence/Assign",
      "formattedLine": "  - [Assing out_Config (initialization)] Assign (Path: Activity/Sequence/Assign)",
      "nodeId": "Activity/Sequence/Assign_2",
      "depth": 2,
      "isVisual": true,
      "children": []
    },
    {
      "indent": 1,
      "displayName": "For each configuration sheet",
      "tag": "ForEach",
      "path": "Activity/Sequence/ForEach",
      "formattedLine": "  - [For each configuration sheet] ForEach (Path: Activity/Sequence/ForEach)",
      "nodeId": "Activity/Sequence/ForEach_2",
      "depth": 2,
      "isVisual": true,
      "children": [
        {
          "indent": 2,
          "displayName": "Get local settings and constants",
          "tag": "Sequence",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence",
          "formattedLine": "    - [Get local settings and constants] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence_5",
          "depth": 5,
          "isVisual": true,
          "children": [
            {
              "indent": 3,
              "displayName": "Read range (Settings and Constants sheets)",
              "tag": "ReadRange",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange",
              "formattedLine": "      - [Read range (Settings and Constants sheets)] ReadRange (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange_6",
              "depth": 6,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 3,
              "displayName": "For each configuration row",
              "tag": "ForEachRow",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow",
              "formattedLine": "      - [For each configuration row] ForEachRow (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow_6",
              "depth": 6,
              "isVisual": true,
              "children": [
                {
                  "indent": 4,
                  "displayName": "If configuration row is not empty",
                  "tag": "If",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If",
                  "formattedLine": "        - [If configuration row is not empty] If (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If_9",
                  "depth": 9,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 5,
                      "displayName": "Add Config key/value pair",
                      "tag": "Assign",
                      "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
                      "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
                      "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 5,
                      "displayName": "Else",
                      "tag": "Sequence",
                      "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
                      "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
                      "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 5,
                  "displayName": "Add Config key/value pair",
                  "tag": "Assign",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
                  "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "Else",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
                  "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 4,
              "displayName": "If configuration row is not empty",
              "tag": "If",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If",
              "formattedLine": "        - [If configuration row is not empty] If (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If_9",
              "depth": 9,
              "isVisual": true,
              "children": [
                {
                  "indent": 5,
                  "displayName": "Add Config key/value pair",
                  "tag": "Assign",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
                  "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "Else",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
                  "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 5,
              "displayName": "Add Config key/value pair",
              "tag": "Assign",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
              "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "Else",
              "tag": "Sequence",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
              "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 3,
          "displayName": "Read range (Settings and Constants sheets)",
          "tag": "ReadRange",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange",
          "formattedLine": "      - [Read range (Settings and Constants sheets)] ReadRange (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange_6",
          "depth": 6,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 3,
          "displayName": "For each configuration row",
          "tag": "ForEachRow",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow",
          "formattedLine": "      - [For each configuration row] ForEachRow (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow_6",
          "depth": 6,
          "isVisual": true,
          "children": [
            {
              "indent": 4,
              "displayName": "If configuration row is not empty",
              "tag": "If",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If",
              "formattedLine": "        - [If configuration row is not empty] If (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If_9",
              "depth": 9,
              "isVisual": true,
              "children": [
                {
                  "indent": 5,
                  "displayName": "Add Config key/value pair",
                  "tag": "Assign",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
                  "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "Else",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
                  "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 5,
              "displayName": "Add Config key/value pair",
              "tag": "Assign",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
              "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "Else",
              "tag": "Sequence",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
              "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 4,
          "displayName": "If configuration row is not empty",
          "tag": "If",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If",
          "formattedLine": "        - [If configuration row is not empty] If (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If_9",
          "depth": 9,
          "isVisual": true,
          "children": [
            {
              "indent": 5,
              "displayName": "Add Config key/value pair",
              "tag": "Assign",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
              "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "Else",
              "tag": "Sequence",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
              "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 5,
          "displayName": "Add Config key/value pair",
          "tag": "Assign",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
          "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 5,
          "displayName": "Else",
          "tag": "Sequence",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
          "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        }
      ]
    },
    {
      "indent": 2,
      "displayName": "Get local settings and constants",
      "tag": "Sequence",
      "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence",
      "formattedLine": "    - [Get local settings and constants] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence)",
      "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence_5",
      "depth": 5,
      "isVisual": true,
      "children": [
        {
          "indent": 3,
          "displayName": "Read range (Settings and Constants sheets)",
          "tag": "ReadRange",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange",
          "formattedLine": "      - [Read range (Settings and Constants sheets)] ReadRange (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange_6",
          "depth": 6,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 3,
          "displayName": "For each configuration row",
          "tag": "ForEachRow",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow",
          "formattedLine": "      - [For each configuration row] ForEachRow (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow_6",
          "depth": 6,
          "isVisual": true,
          "children": [
            {
              "indent": 4,
              "displayName": "If configuration row is not empty",
              "tag": "If",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If",
              "formattedLine": "        - [If configuration row is not empty] If (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If_9",
              "depth": 9,
              "isVisual": true,
              "children": [
                {
                  "indent": 5,
                  "displayName": "Add Config key/value pair",
                  "tag": "Assign",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
                  "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "Else",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
                  "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
                  "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 5,
              "displayName": "Add Config key/value pair",
              "tag": "Assign",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
              "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "Else",
              "tag": "Sequence",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
              "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 4,
          "displayName": "If configuration row is not empty",
          "tag": "If",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If",
          "formattedLine": "        - [If configuration row is not empty] If (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If_9",
          "depth": 9,
          "isVisual": true,
          "children": [
            {
              "indent": 5,
              "displayName": "Add Config key/value pair",
              "tag": "Assign",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
              "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "Else",
              "tag": "Sequence",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
              "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 5,
          "displayName": "Add Config key/value pair",
          "tag": "Assign",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
          "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 5,
          "displayName": "Else",
          "tag": "Sequence",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
          "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        }
      ]
    },
    {
      "indent": 3,
      "displayName": "Read range (Settings and Constants sheets)",
      "tag": "ReadRange",
      "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange",
      "formattedLine": "      - [Read range (Settings and Constants sheets)] ReadRange (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange)",
      "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ReadRange_6",
      "depth": 6,
      "isVisual": true,
      "children": []
    },
    {
      "indent": 3,
      "displayName": "For each configuration row",
      "tag": "ForEachRow",
      "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow",
      "formattedLine": "      - [For each configuration row] ForEachRow (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow)",
      "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow_6",
      "depth": 6,
      "isVisual": true,
      "children": [
        {
          "indent": 4,
          "displayName": "If configuration row is not empty",
          "tag": "If",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If",
          "formattedLine": "        - [If configuration row is not empty] If (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If_9",
          "depth": 9,
          "isVisual": true,
          "children": [
            {
              "indent": 5,
              "displayName": "Add Config key/value pair",
              "tag": "Assign",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
              "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "Else",
              "tag": "Sequence",
              "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
              "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
              "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 5,
          "displayName": "Add Config key/value pair",
          "tag": "Assign",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
          "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 5,
          "displayName": "Else",
          "tag": "Sequence",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
          "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        }
      ]
    },
    {
      "indent": 4,
      "displayName": "If configuration row is not empty",
      "tag": "If",
      "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If",
      "formattedLine": "        - [If configuration row is not empty] If (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If)",
      "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If_9",
      "depth": 9,
      "isVisual": true,
      "children": [
        {
          "indent": 5,
          "displayName": "Add Config key/value pair",
          "tag": "Assign",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
          "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 5,
          "displayName": "Else",
          "tag": "Sequence",
          "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
          "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
          "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        }
      ]
    },
    {
      "indent": 5,
      "displayName": "Add Config key/value pair",
      "tag": "Assign",
      "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign",
      "formattedLine": "          - [Add Config key/value pair] Assign (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign)",
      "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Then/Assign_11",
      "depth": 11,
      "isVisual": true,
      "children": []
    },
    {
      "indent": 5,
      "displayName": "Else",
      "tag": "Sequence",
      "path": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence",
      "formattedLine": "          - [Else] Sequence (Path: Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence)",
      "nodeId": "Activity/Sequence/ForEach/ForEach.Body/ActivityAction/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/If/If.Else/Sequence_11",
      "depth": 11,
      "isVisual": true,
      "children": []
    },
    {
      "indent": 1,
      "displayName": "Try initializing assets",
      "tag": "TryCatch",
      "path": "Activity/Sequence/TryCatch",
      "formattedLine": "  - [Try initializing assets] TryCatch (Path: Activity/Sequence/TryCatch)",
      "nodeId": "Activity/Sequence/TryCatch_2",
      "depth": 2,
      "isVisual": true,
      "children": [
        {
          "indent": 2,
          "displayName": "Get Orchestrator assets",
          "tag": "Sequence",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence",
          "formattedLine": "    - [Get Orchestrator assets] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence_4",
          "depth": 4,
          "isVisual": true,
          "children": [
            {
              "indent": 3,
              "displayName": "Read range (Assets sheet)",
              "tag": "ReadRange",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange",
              "formattedLine": "      - [Read range (Assets sheet)] ReadRange (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange_5",
              "depth": 5,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 3,
              "displayName": "For each asset row",
              "tag": "ForEachRow",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow",
              "formattedLine": "      - [For each asset row] ForEachRow (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow_5",
              "depth": 5,
              "isVisual": true,
              "children": [
                {
                  "indent": 4,
                  "displayName": "Try retrieving asset from Orchestrator",
                  "tag": "TryCatch",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch",
                  "formattedLine": "        - [Try retrieving asset from Orchestrator] TryCatch (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch_8",
                  "depth": 8,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 5,
                      "displayName": "Get asset from Orchestrator",
                      "tag": "Sequence",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
                      "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
                      "depth": 10,
                      "isVisual": true,
                      "children": [
                        {
                          "indent": 6,
                          "displayName": "Get Orchestrator asset",
                          "tag": "GetRobotAsset",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                          "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                          "depth": 11,
                          "isVisual": true,
                          "children": []
                        },
                        {
                          "indent": 6,
                          "displayName": "Assign asset value in Config",
                          "tag": "Assign",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                          "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                          "depth": 11,
                          "isVisual": true,
                          "children": []
                        }
                      ]
                    },
                    {
                      "indent": 6,
                      "displayName": "Get Orchestrator asset",
                      "tag": "GetRobotAsset",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                      "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 6,
                      "displayName": "Assign asset value in Config",
                      "tag": "Assign",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                      "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 5,
                      "displayName": "If asset name is specified, but it cannot be retrieved",
                      "tag": "If",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
                      "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
                      "depth": 12,
                      "isVisual": true,
                      "children": [
                        {
                          "indent": 6,
                          "displayName": "Throw AssetFailedToLoad Exception",
                          "tag": "Throw",
                          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                          "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                          "depth": 14,
                          "isVisual": true,
                          "children": []
                        }
                      ]
                    },
                    {
                      "indent": 6,
                      "displayName": "Throw AssetFailedToLoad Exception",
                      "tag": "Throw",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                      "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                      "depth": 14,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 5,
                  "displayName": "Get asset from Orchestrator",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
                  "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
                  "depth": 10,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Get Orchestrator asset",
                      "tag": "GetRobotAsset",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                      "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 6,
                      "displayName": "Assign asset value in Config",
                      "tag": "Assign",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                      "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "If asset name is specified, but it cannot be retrieved",
                  "tag": "If",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
                  "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
                  "depth": 12,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Throw AssetFailedToLoad Exception",
                      "tag": "Throw",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                      "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                      "depth": 14,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 4,
              "displayName": "Try retrieving asset from Orchestrator",
              "tag": "TryCatch",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch",
              "formattedLine": "        - [Try retrieving asset from Orchestrator] TryCatch (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch_8",
              "depth": 8,
              "isVisual": true,
              "children": [
                {
                  "indent": 5,
                  "displayName": "Get asset from Orchestrator",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
                  "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
                  "depth": 10,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Get Orchestrator asset",
                      "tag": "GetRobotAsset",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                      "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 6,
                      "displayName": "Assign asset value in Config",
                      "tag": "Assign",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                      "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "If asset name is specified, but it cannot be retrieved",
                  "tag": "If",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
                  "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
                  "depth": 12,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Throw AssetFailedToLoad Exception",
                      "tag": "Throw",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                      "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                      "depth": 14,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 5,
              "displayName": "Get asset from Orchestrator",
              "tag": "Sequence",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
              "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
              "depth": 10,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Get Orchestrator asset",
              "tag": "GetRobotAsset",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
              "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 6,
              "displayName": "Assign asset value in Config",
              "tag": "Assign",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
              "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "If asset name is specified, but it cannot be retrieved",
              "tag": "If",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
              "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
              "depth": 12,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Throw AssetFailedToLoad Exception",
              "tag": "Throw",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
              "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
              "depth": 14,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 3,
          "displayName": "Read range (Assets sheet)",
          "tag": "ReadRange",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange",
          "formattedLine": "      - [Read range (Assets sheet)] ReadRange (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange_5",
          "depth": 5,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 3,
          "displayName": "For each asset row",
          "tag": "ForEachRow",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow",
          "formattedLine": "      - [For each asset row] ForEachRow (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow_5",
          "depth": 5,
          "isVisual": true,
          "children": [
            {
              "indent": 4,
              "displayName": "Try retrieving asset from Orchestrator",
              "tag": "TryCatch",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch",
              "formattedLine": "        - [Try retrieving asset from Orchestrator] TryCatch (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch_8",
              "depth": 8,
              "isVisual": true,
              "children": [
                {
                  "indent": 5,
                  "displayName": "Get asset from Orchestrator",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
                  "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
                  "depth": 10,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Get Orchestrator asset",
                      "tag": "GetRobotAsset",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                      "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 6,
                      "displayName": "Assign asset value in Config",
                      "tag": "Assign",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                      "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "If asset name is specified, but it cannot be retrieved",
                  "tag": "If",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
                  "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
                  "depth": 12,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Throw AssetFailedToLoad Exception",
                      "tag": "Throw",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                      "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                      "depth": 14,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 5,
              "displayName": "Get asset from Orchestrator",
              "tag": "Sequence",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
              "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
              "depth": 10,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Get Orchestrator asset",
              "tag": "GetRobotAsset",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
              "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 6,
              "displayName": "Assign asset value in Config",
              "tag": "Assign",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
              "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "If asset name is specified, but it cannot be retrieved",
              "tag": "If",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
              "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
              "depth": 12,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Throw AssetFailedToLoad Exception",
              "tag": "Throw",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
              "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
              "depth": 14,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 4,
          "displayName": "Try retrieving asset from Orchestrator",
          "tag": "TryCatch",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch",
          "formattedLine": "        - [Try retrieving asset from Orchestrator] TryCatch (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch_8",
          "depth": 8,
          "isVisual": true,
          "children": [
            {
              "indent": 5,
              "displayName": "Get asset from Orchestrator",
              "tag": "Sequence",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
              "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
              "depth": 10,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Get Orchestrator asset",
              "tag": "GetRobotAsset",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
              "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 6,
              "displayName": "Assign asset value in Config",
              "tag": "Assign",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
              "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "If asset name is specified, but it cannot be retrieved",
              "tag": "If",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
              "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
              "depth": 12,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Throw AssetFailedToLoad Exception",
              "tag": "Throw",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
              "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
              "depth": 14,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 5,
          "displayName": "Get asset from Orchestrator",
          "tag": "Sequence",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
          "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
          "depth": 10,
          "isVisual": true,
          "children": [
            {
              "indent": 6,
              "displayName": "Get Orchestrator asset",
              "tag": "GetRobotAsset",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
              "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 6,
              "displayName": "Assign asset value in Config",
              "tag": "Assign",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
              "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 6,
          "displayName": "Get Orchestrator asset",
          "tag": "GetRobotAsset",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
          "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 6,
          "displayName": "Assign asset value in Config",
          "tag": "Assign",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
          "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 5,
          "displayName": "If asset name is specified, but it cannot be retrieved",
          "tag": "If",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
          "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
          "depth": 12,
          "isVisual": true,
          "children": [
            {
              "indent": 6,
              "displayName": "Throw AssetFailedToLoad Exception",
              "tag": "Throw",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
              "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
              "depth": 14,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 6,
          "displayName": "Throw AssetFailedToLoad Exception",
          "tag": "Throw",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
          "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
          "depth": 14,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 2,
          "displayName": "Rethrow loading asset exception",
          "tag": "Rethrow",
          "path": "Activity/Sequence/TryCatch/TryCatch.Catches/Catch/ActivityAction/Rethrow",
          "formattedLine": "    - [Rethrow loading asset exception] Rethrow (Path: Activity/Sequence/TryCatch/TryCatch.Catches/Catch/ActivityAction/Rethrow)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Catches/Catch/ActivityAction/Rethrow_6",
          "depth": 6,
          "isVisual": true,
          "children": []
        }
      ]
    },
    {
      "indent": 2,
      "displayName": "Get Orchestrator assets",
      "tag": "Sequence",
      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence",
      "formattedLine": "    - [Get Orchestrator assets] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence)",
      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence_4",
      "depth": 4,
      "isVisual": true,
      "children": [
        {
          "indent": 3,
          "displayName": "Read range (Assets sheet)",
          "tag": "ReadRange",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange",
          "formattedLine": "      - [Read range (Assets sheet)] ReadRange (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange_5",
          "depth": 5,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 3,
          "displayName": "For each asset row",
          "tag": "ForEachRow",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow",
          "formattedLine": "      - [For each asset row] ForEachRow (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow_5",
          "depth": 5,
          "isVisual": true,
          "children": [
            {
              "indent": 4,
              "displayName": "Try retrieving asset from Orchestrator",
              "tag": "TryCatch",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch",
              "formattedLine": "        - [Try retrieving asset from Orchestrator] TryCatch (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch_8",
              "depth": 8,
              "isVisual": true,
              "children": [
                {
                  "indent": 5,
                  "displayName": "Get asset from Orchestrator",
                  "tag": "Sequence",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
                  "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
                  "depth": 10,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Get Orchestrator asset",
                      "tag": "GetRobotAsset",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                      "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    },
                    {
                      "indent": 6,
                      "displayName": "Assign asset value in Config",
                      "tag": "Assign",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                      "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                      "depth": 11,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 5,
                  "displayName": "If asset name is specified, but it cannot be retrieved",
                  "tag": "If",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
                  "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
                  "depth": 12,
                  "isVisual": true,
                  "children": [
                    {
                      "indent": 6,
                      "displayName": "Throw AssetFailedToLoad Exception",
                      "tag": "Throw",
                      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                      "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                      "depth": 14,
                      "isVisual": true,
                      "children": []
                    }
                  ]
                },
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 5,
              "displayName": "Get asset from Orchestrator",
              "tag": "Sequence",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
              "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
              "depth": 10,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Get Orchestrator asset",
              "tag": "GetRobotAsset",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
              "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 6,
              "displayName": "Assign asset value in Config",
              "tag": "Assign",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
              "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "If asset name is specified, but it cannot be retrieved",
              "tag": "If",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
              "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
              "depth": 12,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Throw AssetFailedToLoad Exception",
              "tag": "Throw",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
              "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
              "depth": 14,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 4,
          "displayName": "Try retrieving asset from Orchestrator",
          "tag": "TryCatch",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch",
          "formattedLine": "        - [Try retrieving asset from Orchestrator] TryCatch (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch_8",
          "depth": 8,
          "isVisual": true,
          "children": [
            {
              "indent": 5,
              "displayName": "Get asset from Orchestrator",
              "tag": "Sequence",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
              "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
              "depth": 10,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Get Orchestrator asset",
              "tag": "GetRobotAsset",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
              "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 6,
              "displayName": "Assign asset value in Config",
              "tag": "Assign",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
              "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "If asset name is specified, but it cannot be retrieved",
              "tag": "If",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
              "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
              "depth": 12,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Throw AssetFailedToLoad Exception",
              "tag": "Throw",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
              "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
              "depth": 14,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 5,
          "displayName": "Get asset from Orchestrator",
          "tag": "Sequence",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
          "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
          "depth": 10,
          "isVisual": true,
          "children": [
            {
              "indent": 6,
              "displayName": "Get Orchestrator asset",
              "tag": "GetRobotAsset",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
              "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 6,
              "displayName": "Assign asset value in Config",
              "tag": "Assign",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
              "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 6,
          "displayName": "Get Orchestrator asset",
          "tag": "GetRobotAsset",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
          "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 6,
          "displayName": "Assign asset value in Config",
          "tag": "Assign",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
          "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 5,
          "displayName": "If asset name is specified, but it cannot be retrieved",
          "tag": "If",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
          "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
          "depth": 12,
          "isVisual": true,
          "children": [
            {
              "indent": 6,
              "displayName": "Throw AssetFailedToLoad Exception",
              "tag": "Throw",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
              "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
              "depth": 14,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 6,
          "displayName": "Throw AssetFailedToLoad Exception",
          "tag": "Throw",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
          "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
          "depth": 14,
          "isVisual": true,
          "children": []
        }
      ]
    },
    {
      "indent": 3,
      "displayName": "Read range (Assets sheet)",
      "tag": "ReadRange",
      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange",
      "formattedLine": "      - [Read range (Assets sheet)] ReadRange (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange)",
      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ReadRange_5",
      "depth": 5,
      "isVisual": true,
      "children": []
    },
    {
      "indent": 3,
      "displayName": "For each asset row",
      "tag": "ForEachRow",
      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow",
      "formattedLine": "      - [For each asset row] ForEachRow (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow)",
      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow_5",
      "depth": 5,
      "isVisual": true,
      "children": [
        {
          "indent": 4,
          "displayName": "Try retrieving asset from Orchestrator",
          "tag": "TryCatch",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch",
          "formattedLine": "        - [Try retrieving asset from Orchestrator] TryCatch (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch_8",
          "depth": 8,
          "isVisual": true,
          "children": [
            {
              "indent": 5,
              "displayName": "Get asset from Orchestrator",
              "tag": "Sequence",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
              "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
              "depth": 10,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Get Orchestrator asset",
                  "tag": "GetRobotAsset",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
                  "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                },
                {
                  "indent": 6,
                  "displayName": "Assign asset value in Config",
                  "tag": "Assign",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
                  "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
                  "depth": 11,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Get Orchestrator asset",
              "tag": "GetRobotAsset",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
              "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 6,
              "displayName": "Assign asset value in Config",
              "tag": "Assign",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
              "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 5,
              "displayName": "If asset name is specified, but it cannot be retrieved",
              "tag": "If",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
              "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
              "depth": 12,
              "isVisual": true,
              "children": [
                {
                  "indent": 6,
                  "displayName": "Throw AssetFailedToLoad Exception",
                  "tag": "Throw",
                  "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
                  "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
                  "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
                  "depth": 14,
                  "isVisual": true,
                  "children": []
                }
              ]
            },
            {
              "indent": 6,
              "displayName": "Throw AssetFailedToLoad Exception",
              "tag": "Throw",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
              "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
              "depth": 14,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 5,
          "displayName": "Get asset from Orchestrator",
          "tag": "Sequence",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
          "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
          "depth": 10,
          "isVisual": true,
          "children": [
            {
              "indent": 6,
              "displayName": "Get Orchestrator asset",
              "tag": "GetRobotAsset",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
              "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 6,
              "displayName": "Assign asset value in Config",
              "tag": "Assign",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
              "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 6,
          "displayName": "Get Orchestrator asset",
          "tag": "GetRobotAsset",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
          "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 6,
          "displayName": "Assign asset value in Config",
          "tag": "Assign",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
          "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 5,
          "displayName": "If asset name is specified, but it cannot be retrieved",
          "tag": "If",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
          "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
          "depth": 12,
          "isVisual": true,
          "children": [
            {
              "indent": 6,
              "displayName": "Throw AssetFailedToLoad Exception",
              "tag": "Throw",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
              "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
              "depth": 14,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 6,
          "displayName": "Throw AssetFailedToLoad Exception",
          "tag": "Throw",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
          "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
          "depth": 14,
          "isVisual": true,
          "children": []
        }
      ]
    },
    {
      "indent": 4,
      "displayName": "Try retrieving asset from Orchestrator",
      "tag": "TryCatch",
      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch",
      "formattedLine": "        - [Try retrieving asset from Orchestrator] TryCatch (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch)",
      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch_8",
      "depth": 8,
      "isVisual": true,
      "children": [
        {
          "indent": 5,
          "displayName": "Get asset from Orchestrator",
          "tag": "Sequence",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
          "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
          "depth": 10,
          "isVisual": true,
          "children": [
            {
              "indent": 6,
              "displayName": "Get Orchestrator asset",
              "tag": "GetRobotAsset",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
              "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            },
            {
              "indent": 6,
              "displayName": "Assign asset value in Config",
              "tag": "Assign",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
              "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
              "depth": 11,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 6,
          "displayName": "Get Orchestrator asset",
          "tag": "GetRobotAsset",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
          "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 6,
          "displayName": "Assign asset value in Config",
          "tag": "Assign",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
          "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 5,
          "displayName": "If asset name is specified, but it cannot be retrieved",
          "tag": "If",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
          "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
          "depth": 12,
          "isVisual": true,
          "children": [
            {
              "indent": 6,
              "displayName": "Throw AssetFailedToLoad Exception",
              "tag": "Throw",
              "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
              "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
              "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
              "depth": 14,
              "isVisual": true,
              "children": []
            }
          ]
        },
        {
          "indent": 6,
          "displayName": "Throw AssetFailedToLoad Exception",
          "tag": "Throw",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
          "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
          "depth": 14,
          "isVisual": true,
          "children": []
        }
      ]
    },
    {
      "indent": 5,
      "displayName": "Get asset from Orchestrator",
      "tag": "Sequence",
      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence",
      "formattedLine": "          - [Get asset from Orchestrator] Sequence (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence)",
      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence_10",
      "depth": 10,
      "isVisual": true,
      "children": [
        {
          "indent": 6,
          "displayName": "Get Orchestrator asset",
          "tag": "GetRobotAsset",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
          "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        },
        {
          "indent": 6,
          "displayName": "Assign asset value in Config",
          "tag": "Assign",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
          "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
          "depth": 11,
          "isVisual": true,
          "children": []
        }
      ]
    },
    {
      "indent": 6,
      "displayName": "Get Orchestrator asset",
      "tag": "GetRobotAsset",
      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset",
      "formattedLine": "            - [Get Orchestrator asset] GetRobotAsset (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset)",
      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/GetRobotAsset_11",
      "depth": 11,
      "isVisual": true,
      "children": []
    },
    {
      "indent": 6,
      "displayName": "Assign asset value in Config",
      "tag": "Assign",
      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign",
      "formattedLine": "            - [Assign asset value in Config] Assign (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign)",
      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Try/Sequence/Assign_11",
      "depth": 11,
      "isVisual": true,
      "children": []
    },
    {
      "indent": 5,
      "displayName": "If asset name is specified, but it cannot be retrieved",
      "tag": "If",
      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If",
      "formattedLine": "          - [If asset name is specified, but it cannot be retrieved] If (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If)",
      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If_12",
      "depth": 12,
      "isVisual": true,
      "children": [
        {
          "indent": 6,
          "displayName": "Throw AssetFailedToLoad Exception",
          "tag": "Throw",
          "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
          "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
          "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
          "depth": 14,
          "isVisual": true,
          "children": []
        }
      ]
    },
    {
      "indent": 6,
      "displayName": "Throw AssetFailedToLoad Exception",
      "tag": "Throw",
      "path": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw",
      "formattedLine": "            - [Throw AssetFailedToLoad Exception] Throw (Path: Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw)",
      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Try/Sequence/ForEachRow/ForEachRow.Body/ActivityAction/TryCatch/TryCatch.Catches/Catch/ActivityAction/If/If.Then/Throw_14",
      "depth": 14,
      "isVisual": true,
      "children": []
    },
    {
      "indent": 2,
      "displayName": "Rethrow loading asset exception",
      "tag": "Rethrow",
      "path": "Activity/Sequence/TryCatch/TryCatch.Catches/Catch/ActivityAction/Rethrow",
      "formattedLine": "    - [Rethrow loading asset exception] Rethrow (Path: Activity/Sequence/TryCatch/TryCatch.Catches/Catch/ActivityAction/Rethrow)",
      "nodeId": "Activity/Sequence/TryCatch/TryCatch.Catches/Catch/ActivityAction/Rethrow_6",
      "depth": 6,
      "isVisual": true,
      "children": []
    }
  ],
  "metadata": {
    "source_file": "D:\\github.com\\rpapub\\rpax-corpuses\\c25v001_CORE_00000001\\Framework\\InitAllSettings.xaml",
    "generation_method": "enhanced-visual-detection",
    "parser_metadata": {
      "workflow_id": "InitAllSettings",
      "variables": [
        {
          "name": "dt_SettingsAndConstants",
          "type": "",
          "default": "",
          "scope": "Workflow"
        },
        {
          "name": "dt_Assets",
          "type": "",
          "default": "",
          "scope": "Workflow"
        },
        {
          "name": "AssetValue",
          "type": "",
          "default": "",
          "scope": "Workflow"
        }
      ],
      "arguments": [],
      "imports": [],
      "namespace_map": {
        "{http://schemas.openxmlformats.org/markup-compatibility/2006}Ignorable": "sap sap2010",
        "{http://schemas.microsoft.com/winfx/2006/xaml}Class": "InitiAllSettings",
        "{clr-namespace:}InitiAllSettings.in_ConfigFile": "Data\\Config.xlsx",
        "{clr-namespace:}InitiAllSettings.in_ConfigSheets": "[{\"Settings\",\"Constants\"}]"
      }
    }
  },
  "expanded_pseudocode": [],
  "expansion_config": {},
  "generation_config": {}
}