{
  "projectName": "c25v001_CORE_00000001",
  "projectRoot": "D:\\github.com\\rpapub\\rpax-corpuses\\c25v001_CORE_00000001",
  "scanTimestamp": "2025-09-06T21:05:04.725750+00:00",
  "totalWorkflows": 5,
  "successfulParses": 5,
  "failedParses": 0,
  "workflows": [
    {
      "id": "c25v001-core-00000001-77baa14b#myEntrypointOne.xaml#651ab16c8664328f",
      "projectSlug": "c25v001-core-00000001-77baa14b",
      "workflowId": "myEntrypointOne.xaml",
      "contentHash": "651ab16c8664328f7681f9603f4f40ac03401880bdc5ba21bd45a422966f0cb5",
      "filePath": "D:\\github.com\\rpapub\\rpax-corpuses\\c25v001_CORE_00000001\\myEntrypointOne.xaml",
      "fileName": "myEntrypointOne.xaml",
      "relativePath": "myEntrypointOne.xaml",
      "originalPath": "myEntrypointOne.xaml",
      "displayName": "myEntrypointOne",
      "description": null,
      "discoveredAt": "2025-09-06T21:05:04.718899+00:00",
      "fileSize": 7016,
      "lastModified": "2025-09-06T17:51:24.495679+00:00",
      "rootAnnotation": null,
      "arguments": [
        {
          "name": "in_ConfigFile",
          "type": "InArgument(x:String)",
          "direction": "in",
          "annotation": "Path to the configuration file that defines settings, constants and assets.",
          "default_value": null
        }
      ],
      "variables": [
        {
          "name": "Config",
          "type": "Object",
          "default_value": null,
          "scope": "workflow"
        }
      ],
      "activities": [
        {
          "tag": "Activity",
          "activity_id": "activity_1",
          "display_name": null,
          "annotation": null,
          "visible_attributes": {
            "{http://schemas.openxmlformats.org/markup-compatibility/2006}Ignorable": "sap sap2010",
            "{http://schemas.microsoft.com/winfx/2006/xaml}Class": "Main",
            "{clr-namespace:}Main.in_ConfigFile": "Data\\Config.xlsx"
          },
          "invisible_attributes": {},
          "configuration": {
            "Members": {
              "Property": {
                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Path to the configuration file that defines settings, constants and assets.",
                "Name": "in_ConfigFile",
                "Type": "InArgument(x:String)"
              }
            },
            "VisualBasic.Settings": {
              "Null": {}
            },
            "WorkflowViewState.IdRef": "ActivityBuilder_1",
            "TextExpression.NamespacesForImplementation": {
              "Collection": {
                "attributes": {
                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String"
                },
                "children": {
                  "String": "System.Reflection"
                }
              }
            },
            "TextExpression.ReferencesForImplementation": {
              "Collection": {
                "attributes": {
                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "AssemblyReference"
                },
                "children": {
                  "AssemblyReference": "System.Reflection.MetadataLoadContext"
                }
              }
            },
            "Sequence": {
              "attributes": {
                "DisplayName": "Main Sequence",
                "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "1442.4,807.64",
                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_1"
              },
              "children": {
                "Sequence.Variables": {
                  "Variable": {
                    "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "scg:Dictionary(x:String, x:Object)",
                    "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Dictionary structure to store configuration data of the process (settings, constants and assets).",
                    "Name": "Config"
                  }
                },
                "WorkflowViewStateService.ViewState": {
                  "Dictionary": {
                    "attributes": {
                      "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                    },
                    "children": {
                      "Boolean": "True"
                    }
                  }
                },
                "InvokeWorkflowFile": {
                  "attributes": {
                    "ArgumentsVariable": "{x:Null}",
                    "ContinueOnError": "{x:Null}",
                    "DisplayName": "myEmptyWOrkflow - Invoke Workflow File (Foo\\myEmptyWOrkflow.xaml)",
                    "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "416,167.2",
                    "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "InvokeWorkflowFile_2",
                    "UnSafe": "False",
                    "WorkflowFileName": "Foo\\myEmptyWOrkflow.xaml"
                  },
                  "children": {
                    "InvokeWorkflowFile.Arguments": {
                      "Dictionary": {
                        "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, Argument"
                      }
                    }
                  }
                }
              }
            }
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": null,
          "child_activities": [
            "activity_2"
          ],
          "depth_level": 0,
          "xpath_location": "/root",
          "source_line": null
        },
        {
          "tag": "Sequence",
          "activity_id": "activity_2",
          "display_name": "Main Sequence",
          "annotation": null,
          "visible_attributes": {
            "DisplayName": "Main Sequence"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "1442.4,807.64",
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_1"
          },
          "configuration": {
            "Sequence.Variables": {
              "Variable": {
                "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "scg:Dictionary(x:String, x:Object)",
                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Dictionary structure to store configuration data of the process (settings, constants and assets).",
                "Name": "Config"
              }
            },
            "WorkflowViewStateService.ViewState": {
              "Dictionary": {
                "attributes": {
                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                },
                "children": {
                  "Boolean": "True"
                }
              }
            },
            "InvokeWorkflowFile": {
              "attributes": {
                "ArgumentsVariable": "{x:Null}",
                "ContinueOnError": "{x:Null}",
                "DisplayName": "myEmptyWOrkflow - Invoke Workflow File (Foo\\myEmptyWOrkflow.xaml)",
                "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "416,167.2",
                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "InvokeWorkflowFile_2",
                "UnSafe": "False",
                "WorkflowFileName": "Foo\\myEmptyWOrkflow.xaml"
              },
              "children": {
                "InvokeWorkflowFile.Arguments": {
                  "Dictionary": {
                    "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, Argument"
                  }
                }
              }
            }
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_1",
          "child_activities": [
            "activity_3",
            "activity_4",
            "activity_6"
          ],
          "depth_level": 1,
          "xpath_location": "/Sequence",
          "source_line": null
        },
        {
          "tag": "Variable",
          "activity_id": "activity_3",
          "display_name": null,
          "annotation": "Dictionary structure to store configuration data of the process (settings, constants and assets).",
          "visible_attributes": {
            "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "scg:Dictionary(x:String, x:Object)",
            "Name": "Config"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Dictionary structure to store configuration data of the process (settings, constants and assets)."
          },
          "configuration": {},
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_2",
          "child_activities": [],
          "depth_level": 2,
          "xpath_location": "/Variable",
          "source_line": null
        },
        {
          "tag": "InvokeWorkflowFile",
          "activity_id": "activity_4",
          "display_name": "InitAllSettings - Invoke Workflow File (Framework\\InitAllSettings.xaml)",
          "annotation": null,
          "visible_attributes": {
            "ArgumentsVariable": "{x:Null}",
            "ContinueOnError": "{x:Null}",
            "DisplayName": "InitAllSettings - Invoke Workflow File (Framework\\InitAllSettings.xaml)",
            "UnSafe": "False",
            "WorkflowFileName": "Framework\\InitAllSettings.xaml"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "416,176",
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "InvokeWorkflowFile_1"
          },
          "configuration": {
            "InvokeWorkflowFile.Arguments": {
              "InArgument": "[New String() {\"Settings\", \"Constants\"}]",
              "OutArgument": "[Config]"
            }
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_2",
          "child_activities": [
            "activity_5"
          ],
          "depth_level": 2,
          "xpath_location": "/InvokeWorkflowFile",
          "source_line": null
        },
        {
          "tag": "InvokeWorkflowFile.Arguments",
          "activity_id": "activity_5",
          "display_name": null,
          "annotation": null,
          "visible_attributes": {},
          "invisible_attributes": {},
          "configuration": {
            "InArgument": "[New String() {\"Settings\", \"Constants\"}]",
            "OutArgument": "[Config]"
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_4",
          "child_activities": [],
          "depth_level": 3,
          "xpath_location": "/InvokeWorkflowFile.Arguments",
          "source_line": null
        },
        {
          "tag": "InvokeWorkflowFile",
          "activity_id": "activity_6",
          "display_name": "myEmptyWOrkflow - Invoke Workflow File (Foo\\myEmptyWOrkflow.xaml)",
          "annotation": null,
          "visible_attributes": {
            "ArgumentsVariable": "{x:Null}",
            "ContinueOnError": "{x:Null}",
            "DisplayName": "myEmptyWOrkflow - Invoke Workflow File (Foo\\myEmptyWOrkflow.xaml)",
            "UnSafe": "False",
            "WorkflowFileName": "Foo\\myEmptyWOrkflow.xaml"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "416,167.2",
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "InvokeWorkflowFile_2"
          },
          "configuration": {
            "InvokeWorkflowFile.Arguments": {
              "Dictionary": {
                "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, Argument"
              }
            }
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_2",
          "child_activities": [
            "activity_7"
          ],
          "depth_level": 2,
          "xpath_location": "/InvokeWorkflowFile",
          "source_line": null
        },
        {
          "tag": "InvokeWorkflowFile.Arguments",
          "activity_id": "activity_7",
          "display_name": null,
          "annotation": null,
          "visible_attributes": {},
          "invisible_attributes": {},
          "configuration": {
            "Dictionary": {
              "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, Argument"
            }
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_6",
          "child_activities": [],
          "depth_level": 3,
          "xpath_location": "/InvokeWorkflowFile.Arguments",
          "source_line": null
        }
      ],
      "expressionLanguage": "VisualBasic",
      "totalActivities": 7,
      "totalArguments": 1,
      "totalVariables": 1,
      "parseSuccessful": true,
      "parseErrors": []
    },
    {
      "id": "c25v001-core-00000001-77baa14b#myEntrypointTwo.xaml#90c081afc8b3f3e6",
      "projectSlug": "c25v001-core-00000001-77baa14b",
      "workflowId": "myEntrypointTwo.xaml",
      "contentHash": "90c081afc8b3f3e6994f304a0cd8198aa7dea63f9f040b64d79505529bd9cfb9",
      "filePath": "D:\\github.com\\rpapub\\rpax-corpuses\\c25v001_CORE_00000001\\myEntrypointTwo.xaml",
      "fileName": "myEntrypointTwo.xaml",
      "relativePath": "myEntrypointTwo.xaml",
      "originalPath": "myEntrypointTwo.xaml",
      "displayName": "myEntrypointTwo",
      "description": null,
      "discoveredAt": "2025-09-06T21:05:04.720909+00:00",
      "fileSize": 7658,
      "lastModified": "2025-09-06T17:48:51.066772+00:00",
      "rootAnnotation": null,
      "arguments": [
        {
          "name": "in_ConfigFile",
          "type": "InArgument(x:String)",
          "direction": "in",
          "annotation": "Path to the configuration file that defines settings, constants and assets.",
          "default_value": null
        }
      ],
      "variables": [
        {
          "name": "Config",
          "type": "Object",
          "default_value": null,
          "scope": "workflow"
        }
      ],
      "activities": [
        {
          "tag": "Activity",
          "activity_id": "activity_1",
          "display_name": null,
          "annotation": null,
          "visible_attributes": {
            "{http://schemas.openxmlformats.org/markup-compatibility/2006}Ignorable": "sap sap2010",
            "{http://schemas.microsoft.com/winfx/2006/xaml}Class": "Performer",
            "{clr-namespace:}Performer.in_ConfigFile": "Data\\Config.xlsx"
          },
          "invisible_attributes": {},
          "configuration": {
            "Members": {
              "Property": {
                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Path to the configuration file that defines settings, constants and assets.",
                "Name": "in_ConfigFile",
                "Type": "InArgument(x:String)"
              }
            },
            "VisualBasic.Settings": {
              "Null": {}
            },
            "WorkflowViewState.IdRef": "Performer_1",
            "TextExpression.NamespacesForImplementation": {
              "Collection": {
                "attributes": {
                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String"
                },
                "children": {
                  "String": "System.Linq.Expressions"
                }
              }
            },
            "TextExpression.ReferencesForImplementation": {
              "Collection": {
                "attributes": {
                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "AssemblyReference"
                },
                "children": {
                  "AssemblyReference": "System.Linq.Expressions"
                }
              }
            },
            "Sequence": {
              "attributes": {
                "DisplayName": "Performer",
                "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "1442.4,807.64",
                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_1"
              },
              "children": {
                "Sequence.Variables": {
                  "Variable": {
                    "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "scg:Dictionary(x:String, x:Object)",
                    "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Dictionary structure to store configuration data of the process (settings, constants and assets).",
                    "Name": "Config"
                  }
                },
                "WorkflowViewStateService.ViewState": {
                  "Dictionary": {
                    "attributes": {
                      "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                    },
                    "children": {
                      "Boolean": "True"
                    }
                  }
                },
                "InvokeWorkflowFile": {
                  "attributes": {
                    "ArgumentsVariable": "{x:Null}",
                    "ContinueOnError": "{x:Null}",
                    "DisplayName": "myWorkflowFooBar - Invoke Workflow File (Foo\\Bar\\myWorkflowFooBar.xaml)",
                    "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "416,167.2",
                    "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "InvokeWorkflowFile_2",
                    "UnSafe": "False",
                    "WorkflowFileName": "Foo\\Bar\\myWorkflowFooBar.xaml"
                  },
                  "children": {
                    "InvokeWorkflowFile.Arguments": {
                      "Dictionary": {
                        "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, Argument"
                      }
                    }
                  }
                }
              }
            }
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": null,
          "child_activities": [
            "activity_2"
          ],
          "depth_level": 0,
          "xpath_location": "/root",
          "source_line": null
        },
        {
          "tag": "Sequence",
          "activity_id": "activity_2",
          "display_name": "Performer",
          "annotation": null,
          "visible_attributes": {
            "DisplayName": "Performer"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "1442.4,807.64",
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_1"
          },
          "configuration": {
            "Sequence.Variables": {
              "Variable": {
                "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "scg:Dictionary(x:String, x:Object)",
                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Dictionary structure to store configuration data of the process (settings, constants and assets).",
                "Name": "Config"
              }
            },
            "WorkflowViewStateService.ViewState": {
              "Dictionary": {
                "attributes": {
                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                },
                "children": {
                  "Boolean": "True"
                }
              }
            },
            "InvokeWorkflowFile": {
              "attributes": {
                "ArgumentsVariable": "{x:Null}",
                "ContinueOnError": "{x:Null}",
                "DisplayName": "myWorkflowFooBar - Invoke Workflow File (Foo\\Bar\\myWorkflowFooBar.xaml)",
                "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "416,167.2",
                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "InvokeWorkflowFile_2",
                "UnSafe": "False",
                "WorkflowFileName": "Foo\\Bar\\myWorkflowFooBar.xaml"
              },
              "children": {
                "InvokeWorkflowFile.Arguments": {
                  "Dictionary": {
                    "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, Argument"
                  }
                }
              }
            }
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_1",
          "child_activities": [
            "activity_3",
            "activity_4",
            "activity_6"
          ],
          "depth_level": 1,
          "xpath_location": "/Sequence",
          "source_line": null
        },
        {
          "tag": "Variable",
          "activity_id": "activity_3",
          "display_name": null,
          "annotation": "Dictionary structure to store configuration data of the process (settings, constants and assets).",
          "visible_attributes": {
            "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "scg:Dictionary(x:String, x:Object)",
            "Name": "Config"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Dictionary structure to store configuration data of the process (settings, constants and assets)."
          },
          "configuration": {},
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_2",
          "child_activities": [],
          "depth_level": 2,
          "xpath_location": "/Variable",
          "source_line": null
        },
        {
          "tag": "InvokeWorkflowFile",
          "activity_id": "activity_4",
          "display_name": "InitAllSettings - Invoke Workflow File (Framework\\InitAllSettings.xaml)",
          "annotation": null,
          "visible_attributes": {
            "ArgumentsVariable": "{x:Null}",
            "ContinueOnError": "{x:Null}",
            "DisplayName": "InitAllSettings - Invoke Workflow File (Framework\\InitAllSettings.xaml)",
            "UnSafe": "False",
            "WorkflowFileName": "Framework\\InitAllSettings.xaml"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "416,176",
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "InvokeWorkflowFile_1"
          },
          "configuration": {
            "InvokeWorkflowFile.Arguments": {
              "InArgument": "[New String() {\"Settings\", \"Constants\"}]",
              "OutArgument": "[Config]"
            }
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_2",
          "child_activities": [
            "activity_5"
          ],
          "depth_level": 2,
          "xpath_location": "/InvokeWorkflowFile",
          "source_line": null
        },
        {
          "tag": "InvokeWorkflowFile.Arguments",
          "activity_id": "activity_5",
          "display_name": null,
          "annotation": null,
          "visible_attributes": {},
          "invisible_attributes": {},
          "configuration": {
            "InArgument": "[New String() {\"Settings\", \"Constants\"}]",
            "OutArgument": "[Config]"
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_4",
          "child_activities": [],
          "depth_level": 3,
          "xpath_location": "/InvokeWorkflowFile.Arguments",
          "source_line": null
        },
        {
          "tag": "InvokeWorkflowFile",
          "activity_id": "activity_6",
          "display_name": "myWorkflowFooBar - Invoke Workflow File (Foo\\Bar\\myWorkflowFooBar.xaml)",
          "annotation": null,
          "visible_attributes": {
            "ArgumentsVariable": "{x:Null}",
            "ContinueOnError": "{x:Null}",
            "DisplayName": "myWorkflowFooBar - Invoke Workflow File (Foo\\Bar\\myWorkflowFooBar.xaml)",
            "UnSafe": "False",
            "WorkflowFileName": "Foo\\Bar\\myWorkflowFooBar.xaml"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "416,167.2",
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "InvokeWorkflowFile_2"
          },
          "configuration": {
            "InvokeWorkflowFile.Arguments": {
              "Dictionary": {
                "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, Argument"
              }
            }
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_2",
          "child_activities": [
            "activity_7"
          ],
          "depth_level": 2,
          "xpath_location": "/InvokeWorkflowFile",
          "source_line": null
        },
        {
          "tag": "InvokeWorkflowFile.Arguments",
          "activity_id": "activity_7",
          "display_name": null,
          "annotation": null,
          "visible_attributes": {},
          "invisible_attributes": {},
          "configuration": {
            "Dictionary": {
              "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, Argument"
            }
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_6",
          "child_activities": [],
          "depth_level": 3,
          "xpath_location": "/InvokeWorkflowFile.Arguments",
          "source_line": null
        }
      ],
      "expressionLanguage": "VisualBasic",
      "totalActivities": 7,
      "totalArguments": 1,
      "totalVariables": 1,
      "parseSuccessful": true,
      "parseErrors": []
    },
    {
      "id": "c25v001-core-00000001-77baa14b#Foo/myEmptyWOrkflow.xaml#39066dab25c96865",
      "projectSlug": "c25v001-core-00000001-77baa14b",
      "workflowId": "Foo/myEmptyWOrkflow.xaml",
      "contentHash": "39066dab25c9686522565ee7403ba31464fbf82846e64341662574ed959101f9",
      "filePath": "D:\\github.com\\rpapub\\rpax-corpuses\\c25v001_CORE_00000001\\Foo\\myEmptyWOrkflow.xaml",
      "fileName": "myEmptyWOrkflow.xaml",
      "relativePath": "Foo/myEmptyWOrkflow.xaml",
      "originalPath": "Foo/myEmptyWOrkflow.xaml",
      "displayName": "myEmptyWOrkflow",
      "description": null,
      "discoveredAt": "2025-09-06T21:05:04.723582+00:00",
      "fileSize": 3904,
      "lastModified": "2025-09-06T17:51:04.348281+00:00",
      "rootAnnotation": null,
      "arguments": [],
      "variables": [],
      "activities": [
        {
          "tag": "Activity",
          "activity_id": "activity_1",
          "display_name": null,
          "annotation": null,
          "visible_attributes": {
            "{http://schemas.openxmlformats.org/markup-compatibility/2006}Ignorable": "sap sap2010",
            "{http://schemas.microsoft.com/winfx/2006/xaml}Class": "myEmptyWOrkflow",
            "VisualBasic.Settings": "{x:Null}"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "myEmptyWOrkflow_1"
          },
          "configuration": {
            "TextExpression.NamespacesForImplementation": {
              "Collection": {
                "attributes": {
                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String"
                },
                "children": {
                  "String": "GlobalConstantsNamespace"
                }
              }
            },
            "TextExpression.ReferencesForImplementation": {
              "Collection": {
                "attributes": {
                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "AssemblyReference"
                },
                "children": {
                  "AssemblyReference": "UiPath.UiAutomation.Activities"
                }
              }
            },
            "Sequence": {
              "attributes": {
                "DisplayName": "myEmptyWOrkflow",
                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_1"
              },
              "children": {
                "WorkflowViewStateService.ViewState": {
                  "Dictionary": {
                    "attributes": {
                      "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                    },
                    "children": {
                      "Boolean": "True"
                    }
                  }
                }
              }
            }
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": null,
          "child_activities": [
            "activity_2"
          ],
          "depth_level": 0,
          "xpath_location": "/root",
          "source_line": null
        },
        {
          "tag": "Sequence",
          "activity_id": "activity_2",
          "display_name": "myEmptyWOrkflow",
          "annotation": null,
          "visible_attributes": {
            "DisplayName": "myEmptyWOrkflow"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_1"
          },
          "configuration": {
            "WorkflowViewStateService.ViewState": {
              "Dictionary": {
                "attributes": {
                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                },
                "children": {
                  "Boolean": "True"
                }
              }
            }
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_1",
          "child_activities": [],
          "depth_level": 1,
          "xpath_location": "/Sequence",
          "source_line": null
        }
      ],
      "expressionLanguage": "VisualBasic",
      "totalActivities": 2,
      "totalArguments": 0,
      "totalVariables": 0,
      "parseSuccessful": true,
      "parseErrors": []
    },
    {
      "id": "c25v001-core-00000001-77baa14b#Foo/Bar/myWorkflowFooBar.xaml#7b0ae72c4c8e571e",
      "projectSlug": "c25v001-core-00000001-77baa14b",
      "workflowId": "Foo/Bar/myWorkflowFooBar.xaml",
      "contentHash": "7b0ae72c4c8e571eae030483431279e48b03c245e3dbdf21f972cb8c7676bb17",
      "filePath": "D:\\github.com\\rpapub\\rpax-corpuses\\c25v001_CORE_00000001\\Foo\\Bar\\myWorkflowFooBar.xaml",
      "fileName": "myWorkflowFooBar.xaml",
      "relativePath": "Foo/Bar/myWorkflowFooBar.xaml",
      "originalPath": "Foo/Bar/myWorkflowFooBar.xaml",
      "displayName": "myWorkflowFooBar",
      "description": null,
      "discoveredAt": "2025-09-06T21:05:04.724228+00:00",
      "fileSize": 6485,
      "lastModified": "2025-09-06T19:41:19.863114+00:00",
      "rootAnnotation": "myWorkflowFooBar root annotation",
      "arguments": [],
      "variables": [],
      "activities": [
        {
          "tag": "Activity",
          "activity_id": "activity_1",
          "display_name": null,
          "annotation": null,
          "visible_attributes": {
            "{http://schemas.openxmlformats.org/markup-compatibility/2006}Ignorable": "sap sap2010",
            "{http://schemas.microsoft.com/winfx/2006/xaml}Class": "myWorkflowFooBar",
            "VisualBasic.Settings": "{x:Null}"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "myWorkflowFooBar_1"
          },
          "configuration": {
            "TextExpression.NamespacesForImplementation": {
              "Collection": {
                "attributes": {
                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String"
                },
                "children": {
                  "String": "System.Runtime.Serialization"
                }
              }
            },
            "TextExpression.ReferencesForImplementation": {
              "Collection": {
                "attributes": {
                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "AssemblyReference"
                },
                "children": {
                  "AssemblyReference": "System.Runtime.Serialization.Primitives"
                }
              }
            },
            "Sequence": {
              "attributes": {
                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "myWorkflowFooBar root annotation",
                "DisplayName": "myWorkflowFooBar",
                "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "1442.4,807.64",
                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_1"
              },
              "children": {
                "WorkflowViewStateService.ViewState": {
                  "Dictionary": {
                    "attributes": {
                      "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                    },
                    "children": {
                      "Boolean": "True"
                    }
                  }
                },
                "Sequence": {
                  "attributes": {
                    "DisplayName": "SequenceSecond",
                    "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "449.6,248.8",
                    "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_3"
                  },
                  "children": {
                    "WorkflowViewStateService.ViewState": {
                      "Dictionary": {
                        "attributes": {
                          "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                        },
                        "children": {
                          "Boolean": "True"
                        }
                      }
                    },
                    "LogMessage": {
                      "DisplayName": "Log Message TRACE SequenceSecond",
                      "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "416,165.6",
                      "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "LogMessage_2",
                      "Level": "Trace",
                      "Message": "[\"myLogMessage\"]"
                    }
                  }
                }
              }
            }
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": null,
          "child_activities": [
            "activity_2"
          ],
          "depth_level": 0,
          "xpath_location": "/root",
          "source_line": null
        },
        {
          "tag": "Sequence",
          "activity_id": "activity_2",
          "display_name": "myWorkflowFooBar",
          "annotation": "myWorkflowFooBar root annotation",
          "visible_attributes": {
            "DisplayName": "myWorkflowFooBar"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "myWorkflowFooBar root annotation",
            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "1442.4,807.64",
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_1"
          },
          "configuration": {
            "WorkflowViewStateService.ViewState": {
              "Dictionary": {
                "attributes": {
                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                },
                "children": {
                  "Boolean": "True"
                }
              }
            },
            "Sequence": {
              "attributes": {
                "DisplayName": "SequenceSecond",
                "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "449.6,248.8",
                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_3"
              },
              "children": {
                "WorkflowViewStateService.ViewState": {
                  "Dictionary": {
                    "attributes": {
                      "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                    },
                    "children": {
                      "Boolean": "True"
                    }
                  }
                },
                "LogMessage": {
                  "DisplayName": "Log Message TRACE SequenceSecond",
                  "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "416,165.6",
                  "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "LogMessage_2",
                  "Level": "Trace",
                  "Message": "[\"myLogMessage\"]"
                }
              }
            }
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_1",
          "child_activities": [
            "activity_3",
            "activity_5"
          ],
          "depth_level": 1,
          "xpath_location": "/Sequence",
          "source_line": null
        },
        {
          "tag": "Sequence",
          "activity_id": "activity_3",
          "display_name": "SequenceFirst",
          "annotation": null,
          "visible_attributes": {
            "DisplayName": "SequenceFirst"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "449.6,257.6",
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_2"
          },
          "configuration": {
            "WorkflowViewStateService.ViewState": {
              "Dictionary": {
                "attributes": {
                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                },
                "children": {
                  "Boolean": "True"
                }
              }
            },
            "LogMessage": {
              "DisplayName": "Log Message INFO SequenceFirst",
              "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "416,165.6",
              "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "LogMessage_1",
              "Level": "Info",
              "Message": "[\"myLogMessage\"]"
            }
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_2",
          "child_activities": [
            "activity_4"
          ],
          "depth_level": 2,
          "xpath_location": "/Sequence",
          "source_line": null
        },
        {
          "tag": "LogMessage",
          "activity_id": "activity_4",
          "display_name": "Log Message INFO SequenceFirst",
          "annotation": null,
          "visible_attributes": {
            "DisplayName": "Log Message INFO SequenceFirst",
            "Level": "Info",
            "Message": "[\"myLogMessage\"]"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "416,165.6",
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "LogMessage_1"
          },
          "configuration": {},
          "variables": [],
          "expressions": [
            {
              "content": "[\"myLogMessage\"]",
              "expression_type": "message",
              "language": "VisualBasic",
              "context": "Message",
              "contains_variables": [],
              "contains_methods": []
            }
          ],
          "parent_activity_id": "activity_3",
          "child_activities": [],
          "depth_level": 3,
          "xpath_location": "/LogMessage",
          "source_line": null
        },
        {
          "tag": "Sequence",
          "activity_id": "activity_5",
          "display_name": "SequenceSecond",
          "annotation": null,
          "visible_attributes": {
            "DisplayName": "SequenceSecond"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "449.6,248.8",
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_3"
          },
          "configuration": {
            "WorkflowViewStateService.ViewState": {
              "Dictionary": {
                "attributes": {
                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                },
                "children": {
                  "Boolean": "True"
                }
              }
            },
            "LogMessage": {
              "DisplayName": "Log Message TRACE SequenceSecond",
              "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "416,165.6",
              "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "LogMessage_2",
              "Level": "Trace",
              "Message": "[\"myLogMessage\"]"
            }
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_2",
          "child_activities": [
            "activity_6"
          ],
          "depth_level": 2,
          "xpath_location": "/Sequence",
          "source_line": null
        },
        {
          "tag": "LogMessage",
          "activity_id": "activity_6",
          "display_name": "Log Message TRACE SequenceSecond",
          "annotation": null,
          "visible_attributes": {
            "DisplayName": "Log Message TRACE SequenceSecond",
            "Level": "Trace",
            "Message": "[\"myLogMessage\"]"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "416,165.6",
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "LogMessage_2"
          },
          "configuration": {},
          "variables": [],
          "expressions": [
            {
              "content": "[\"myLogMessage\"]",
              "expression_type": "message",
              "language": "VisualBasic",
              "context": "Message",
              "contains_variables": [],
              "contains_methods": []
            }
          ],
          "parent_activity_id": "activity_5",
          "child_activities": [],
          "depth_level": 3,
          "xpath_location": "/LogMessage",
          "source_line": null
        }
      ],
      "expressionLanguage": "VisualBasic",
      "totalActivities": 6,
      "totalArguments": 0,
      "totalVariables": 0,
      "parseSuccessful": true,
      "parseErrors": []
    },
    {
      "id": "c25v001-core-00000001-77baa14b#Framework/InitAllSettings.xaml#0dc31bd00f382ae6",
      "projectSlug": "c25v001-core-00000001-77baa14b",
      "workflowId": "Framework/InitAllSettings.xaml",
      "contentHash": "0dc31bd00f382ae6dfd93942f7a436e1ebc71682bb4991c4db55b78c14197191",
      "filePath": "D:\\github.com\\rpapub\\rpax-corpuses\\c25v001_CORE_00000001\\Framework\\InitAllSettings.xaml",
      "fileName": "InitAllSettings.xaml",
      "relativePath": "Framework/InitAllSettings.xaml",
      "originalPath": "Framework/InitAllSettings.xaml",
      "displayName": "InitAllSettings",
      "description": null,
      "discoveredAt": "2025-09-06T21:05:04.725750+00:00",
      "fileSize": 21581,
      "lastModified": "2024-10-03T13:48:12+00:00",
      "rootAnnotation": "Initialize, populate and output a configuration Dictionary to be used throughout the project. \nSettings and constants are read from the local configuration file, and assets are fetched from Orchestrator. \nAsset values overwrite settings and constant values if they are defined with the same name.",
      "arguments": [
        {
          "name": "in_ConfigFile",
          "type": "InArgument(x:String)",
          "direction": "in",
          "annotation": "Path to the configuration file that defines settings, constants and assets.",
          "default_value": null
        },
        {
          "name": "in_ConfigSheets",
          "type": "InArgument(s:String[])",
          "direction": "in",
          "annotation": "Names of the sheets corresponding to settings and constants in the configuration file.",
          "default_value": null
        },
        {
          "name": "out_Config",
          "type": "OutArgument(scg:Dictionary(x:String, x:Object))",
          "direction": "out",
          "annotation": "Dictionary structure to store configuration data of the process (settings, constants and assets).",
          "default_value": null
        }
      ],
      "variables": [
        {
          "name": "dt_SettingsAndConstants",
          "type": "Object",
          "default_value": null,
          "scope": "workflow"
        },
        {
          "name": "dt_Assets",
          "type": "Object",
          "default_value": null,
          "scope": "workflow"
        },
        {
          "name": "AssetValue",
          "type": "Object",
          "default_value": null,
          "scope": "workflow"
        }
      ],
      "activities": [
        {
          "tag": "Activity",
          "activity_id": "activity_1",
          "display_name": null,
          "annotation": null,
          "visible_attributes": {
            "{http://schemas.openxmlformats.org/markup-compatibility/2006}Ignorable": "sap sap2010",
            "{http://schemas.microsoft.com/winfx/2006/xaml}Class": "InitiAllSettings",
            "{clr-namespace:}InitiAllSettings.in_ConfigFile": "Data\\Config.xlsx",
            "{clr-namespace:}InitiAllSettings.in_ConfigSheets": "[{\"Settings\",\"Constants\"}]"
          },
          "invisible_attributes": {},
          "configuration": {
            "Members": {
              "Property": {
                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Dictionary structure to store configuration data of the process (settings, constants and assets).",
                "Name": "out_Config",
                "Type": "OutArgument(scg:Dictionary(x:String, x:Object))"
              }
            },
            "VisualBasic.Settings": {
              "Null": {}
            },
            "VirtualizedContainerService.HintSize": "1382,2713.3333333333335",
            "WorkflowViewState.IdRef": "GetAllSettings_1",
            "TextExpression.NamespacesForImplementation": {
              "Collection": {
                "attributes": {
                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String"
                },
                "children": {
                  "String": "UiPath.Core.Activities"
                }
              }
            },
            "TextExpression.ReferencesForImplementation": {
              "List": {
                "attributes": {
                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "AssemblyReference",
                  "Capacity": "92"
                },
                "children": {
                  "AssemblyReference": "WindowsBase"
                }
              }
            },
            "Sequence": {
              "attributes": {
                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Initialize, populate and output a configuration Dictionary to be used throughout the project. \nSettings and constants are read from the local configuration file, and assets are fetched from Orchestrator. \nAsset values overwrite settings and constant values if they are defined with the same name.",
                "DisplayName": "Initialize All Settings",
                "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "660,2648.6666666666665",
                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_2"
              },
              "children": {
                "WorkflowViewStateService.ViewState": {
                  "Dictionary": {
                    "attributes": {
                      "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                    },
                    "children": {
                      "Boolean": "True"
                    }
                  }
                },
                "LogMessage": {
                  "DisplayName": "Log Message (Initialize All Settings)",
                  "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "598,176.66666666666666",
                  "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "LogMessage_5",
                  "Level": "Trace",
                  "Message": "[\"Initializing settings...\"]"
                },
                "Assign": {
                  "attributes": {
                    "DisplayName": "Assing out_Config (initialization)",
                    "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "598,117.33333333333333",
                    "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Assign_1"
                  },
                  "children": {
                    "Assign.To": {
                      "OutArgument": "[out_Config]"
                    },
                    "Assign.Value": {
                      "InArgument": "[New Dictionary(of String, Object)]"
                    }
                  }
                },
                "ForEach": {
                  "attributes": {
                    "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String",
                    "CurrentIndex": "{x:Null}",
                    "DisplayName": "For each configuration sheet",
                    "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "598,982",
                    "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "ForEach`1_3",
                    "Values": "[in_ConfigSheets]"
                  },
                  "children": {
                    "ForEach.Body": {
                      "ActivityAction": {
                        "attributes": {
                          "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String"
                        },
                        "children": {
                          "ActivityAction.Argument": {
                            "DelegateInArgument": {
                              "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String",
                              "Name": "Sheet"
                            }
                          },
                          "Sequence": {
                            "attributes": {
                              "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Read settings and constants from the configuration file and add them to the Config dictionary.",
                              "DisplayName": "Get local settings and constants",
                              "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "564,834",
                              "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_5"
                            },
                            "children": {
                              "Sequence.Variables": {
                                "Variable": {
                                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataTable",
                                  "Name": "dt_SettingsAndConstants"
                                }
                              },
                              "WorkflowViewStateService.ViewState": {
                                "Dictionary": {
                                  "attributes": {
                                    "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                  },
                                  "children": {
                                    "Boolean": "True"
                                  }
                                }
                              },
                              "ReadRange": {
                                "Range": "{x:Null}",
                                "AddHeaders": "True",
                                "DataTable": "[Dt_SettingsAndConstants]",
                                "DisplayName": "Read range (Settings and Constants sheets)",
                                "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "502,120",
                                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "ReadRange_2",
                                "SheetName": "[Sheet]",
                                "WorkbookPath": "[in_ConfigFile]"
                              },
                              "ForEachRow": {
                                "attributes": {
                                  "ColumnNames": "{x:Null}",
                                  "CurrentIndex": "{x:Null}",
                                  "DataTable": "[Dt_SettingsAndConstants]",
                                  "DisplayName": "For each configuration row",
                                  "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "502,595.3333333333334",
                                  "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "ForEachRow_2"
                                },
                                "children": {
                                  "ForEachRow.Body": {
                                    "ActivityAction": {
                                      "attributes": {
                                        "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataRow"
                                      },
                                      "children": {
                                        "ActivityAction.Argument": {
                                          "DelegateInArgument": {
                                            "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataRow",
                                            "Name": "Row"
                                          }
                                        },
                                        "If": {
                                          "attributes": {
                                            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Read non-empty rows in the sheet.",
                                            "Condition": "[Not String.IsNullOrWhiteSpace(row(\"Name\").ToString.Trim)]",
                                            "DisplayName": "If configuration row is not empty",
                                            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "468,382.6666666666667",
                                            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "If_1"
                                          },
                                          "children": {
                                            "WorkflowViewStateService.ViewState": {
                                              "Dictionary": {
                                                "attributes": {
                                                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                                },
                                                "children": {
                                                  "Boolean": "False"
                                                }
                                              }
                                            },
                                            "If.Then": {
                                              "Assign": {
                                                "attributes": {
                                                  "DisplayName": "Add Config key/value pair",
                                                  "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "434,85.33333333333333",
                                                  "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Assign_15"
                                                },
                                                "children": {
                                                  "Assign.To": {
                                                    "OutArgument": "[out_Config(Row(\"Name\").ToString.Trim)]"
                                                  },
                                                  "Assign.Value": {
                                                    "InArgument": "[Row(\"Value\")]"
                                                  }
                                                }
                                              }
                                            },
                                            "If.Else": {
                                              "Sequence": {
                                                "attributes": {
                                                  "DisplayName": "Else",
                                                  "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "416,104.66666666666667",
                                                  "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_12"
                                                },
                                                "children": {
                                                  "WorkflowViewStateService.ViewState": {
                                                    "Dictionary": {
                                                      "attributes": {
                                                        "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                                      },
                                                      "children": {
                                                        "Boolean": "True"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "WorkflowViewStateService.ViewState": {
                      "Dictionary": {
                        "attributes": {
                          "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                        },
                        "children": {
                          "Boolean": "False"
                        }
                      }
                    }
                  }
                },
                "TryCatch": {
                  "attributes": {
                    "DisplayName": "Try initializing assets",
                    "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "550.4,1222.4",
                    "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "TryCatch_2"
                  },
                  "children": {
                    "WorkflowViewStateService.ViewState": {
                      "Dictionary": {
                        "attributes": {
                          "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                        },
                        "children": {
                          "Boolean": "False"
                        }
                      }
                    },
                    "TryCatch.Try": {
                      "Sequence": {
                        "attributes": {
                          "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Get from Orchestrator the values of assets listed in the Assets sheet.",
                          "DisplayName": "Get Orchestrator assets",
                          "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "513.6,981.6",
                          "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_6"
                        },
                        "children": {
                          "Sequence.Variables": {
                            "Variable": {
                              "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataTable",
                              "Name": "dt_Assets"
                            }
                          },
                          "WorkflowViewStateService.ViewState": {
                            "Dictionary": {
                              "attributes": {
                                "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                              },
                              "children": {
                                "Boolean": "True"
                              }
                            }
                          },
                          "ReadRange": {
                            "Range": "{x:Null}",
                            "AddHeaders": "True",
                            "DataTable": "[dt_Assets]",
                            "DisplayName": "Read range (Assets sheet)",
                            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "470.4,97.6",
                            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "ReadRange_3",
                            "SheetName": "Assets",
                            "WorkbookPath": "[in_ConfigFile]"
                          },
                          "ForEachRow": {
                            "attributes": {
                              "ColumnNames": "{x:Null}",
                              "CurrentIndex": "{x:Null}",
                              "DataTable": "[dt_Assets]",
                              "DisplayName": "For each asset row",
                              "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "470.4,752.8",
                              "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "ForEachRow_3"
                            },
                            "children": {
                              "ForEachRow.Body": {
                                "ActivityAction": {
                                  "attributes": {
                                    "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataRow"
                                  },
                                  "children": {
                                    "ActivityAction.Argument": {
                                      "DelegateInArgument": {
                                        "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataRow",
                                        "Name": "Row"
                                      }
                                    },
                                    "TryCatch": {
                                      "attributes": {
                                        "DisplayName": "Try retrieving asset from Orchestrator",
                                        "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "436.8,627.2",
                                        "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "TryCatch_3"
                                      },
                                      "children": {
                                        "WorkflowViewStateService.ViewState": {
                                          "Dictionary": {
                                            "attributes": {
                                              "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                            },
                                            "children": {
                                              "Boolean": "False"
                                            }
                                          }
                                        },
                                        "TryCatch.Try": {
                                          "Sequence": {
                                            "attributes": {
                                              "DisplayName": "Get asset from Orchestrator",
                                              "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "400,386.4",
                                              "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_11"
                                            },
                                            "children": {
                                              "Sequence.Variables": {
                                                "Variable": {
                                                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:Object",
                                                  "Name": "AssetValue"
                                                }
                                              },
                                              "WorkflowViewStateService.ViewState": {
                                                "Dictionary": {
                                                  "attributes": {
                                                    "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                                  },
                                                  "children": {
                                                    "Boolean": "True"
                                                  }
                                                }
                                              },
                                              "GetRobotAsset": {
                                                "attributes": {
                                                  "AssetName": "[row(\"Asset\").ToString]",
                                                  "CacheStrategy": "None",
                                                  "DisplayName": "Get Orchestrator asset",
                                                  "FolderPath": "[row(\"OrchestratorAssetFolder\").ToString]",
                                                  "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "356.8,185.6",
                                                  "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "GetRobotAsset_5"
                                                },
                                                "children": {
                                                  "GetRobotAsset.TimeoutMS": {
                                                    "InArgument": {
                                                      "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:Int32"
                                                    }
                                                  },
                                                  "GetRobotAsset.Value": {
                                                    "OutArgument": "[AssetValue]"
                                                  }
                                                }
                                              },
                                              "Assign": {
                                                "attributes": {
                                                  "DisplayName": "Assign asset value in Config",
                                                  "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "356.8,69.6",
                                                  "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Assign_23"
                                                },
                                                "children": {
                                                  "Assign.To": {
                                                    "OutArgument": "[out_Config(row(\"Name\").ToString)]"
                                                  },
                                                  "Assign.Value": {
                                                    "InArgument": "[AssetValue]"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "TryCatch.Catches": {
                                          "Catch": {
                                            "attributes": {
                                              "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "s:Exception",
                                              "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "403.2,22.4",
                                              "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Catch`1_3"
                                            },
                                            "children": {
                                              "WorkflowViewStateService.ViewState": {
                                                "Dictionary": {
                                                  "attributes": {
                                                    "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                                  },
                                                  "children": {
                                                    "Boolean": "False"
                                                  }
                                                }
                                              },
                                              "ActivityAction": {
                                                "attributes": {
                                                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "s:Exception"
                                                },
                                                "children": {
                                                  "ActivityAction.Argument": {
                                                    "DelegateInArgument": {
                                                      "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "s:Exception",
                                                      "Name": "Exception"
                                                    }
                                                  },
                                                  "If": {
                                                    "attributes": {
                                                      "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Logs a message and throw exception in case the asset is specified in the Config file, but it could not be loaded from Orchestrator.",
                                                      "Condition": "[Not String.IsNullOrWhiteSpace(Row(\"Name\").ToString.Trim)]",
                                                      "DisplayName": "If asset name is specified, but it cannot be retrieved",
                                                      "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "416,409.6",
                                                      "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "If_5"
                                                    },
                                                    "children": {
                                                      "WorkflowViewStateService.ViewState": {
                                                        "Dictionary": {
                                                          "attributes": {
                                                            "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                                          },
                                                          "children": {
                                                            "Boolean": "True"
                                                          }
                                                        }
                                                      },
                                                      "If.Then": {
                                                        "Throw": {
                                                          "DisplayName": "Throw AssetFailedToLoad Exception",
                                                          "Exception": "[new Exception(\"Loading asset \" + Row(\"Asset\").ToString + \" failed: \" + Exception.Message)]",
                                                          "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "334.4,98.4",
                                                          "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Throw_1"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "WorkflowViewStateService.ViewState": {
                                "Dictionary": {
                                  "attributes": {
                                    "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                  },
                                  "children": {
                                    "Boolean": "False"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "TryCatch.Catches": {
                      "Catch": {
                        "attributes": {
                          "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "s:Exception",
                          "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "516.8,22.4",
                          "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Catch`1_2"
                        },
                        "children": {
                          "WorkflowViewStateService.ViewState": {
                            "Dictionary": {
                              "attributes": {
                                "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                              },
                              "children": {
                                "Boolean": "False"
                              }
                            }
                          },
                          "ActivityAction": {
                            "attributes": {
                              "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "s:Exception"
                            },
                            "children": {
                              "ActivityAction.Argument": {
                                "DelegateInArgument": {
                                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "s:Exception",
                                  "Name": "Exception"
                                }
                              },
                              "Rethrow": {
                                "DisplayName": "Rethrow loading asset exception",
                                "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "334.4,32",
                                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Rethrow_1"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "variables": [],
          "expressions": [
            {
              "content": "[{\"Settings\",\"Constants\"}]",
              "expression_type": "general",
              "language": "VisualBasic",
              "context": "{clr-namespace:}InitiAllSettings.in_ConfigSheets",
              "contains_variables": [],
              "contains_methods": []
            }
          ],
          "parent_activity_id": null,
          "child_activities": [
            "activity_2"
          ],
          "depth_level": 0,
          "xpath_location": "/root",
          "source_line": null
        },
        {
          "tag": "Sequence",
          "activity_id": "activity_2",
          "display_name": "Initialize All Settings",
          "annotation": "Initialize, populate and output a configuration Dictionary to be used throughout the project. \nSettings and constants are read from the local configuration file, and assets are fetched from Orchestrator. \nAsset values overwrite settings and constant values if they are defined with the same name.",
          "visible_attributes": {
            "DisplayName": "Initialize All Settings"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Initialize, populate and output a configuration Dictionary to be used throughout the project. \nSettings and constants are read from the local configuration file, and assets are fetched from Orchestrator. \nAsset values overwrite settings and constant values if they are defined with the same name.",
            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "660,2648.6666666666665",
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_2"
          },
          "configuration": {
            "WorkflowViewStateService.ViewState": {
              "Dictionary": {
                "attributes": {
                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                },
                "children": {
                  "Boolean": "True"
                }
              }
            },
            "LogMessage": {
              "DisplayName": "Log Message (Initialize All Settings)",
              "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "598,176.66666666666666",
              "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "LogMessage_5",
              "Level": "Trace",
              "Message": "[\"Initializing settings...\"]"
            },
            "Assign": {
              "attributes": {
                "DisplayName": "Assing out_Config (initialization)",
                "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "598,117.33333333333333",
                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Assign_1"
              },
              "children": {
                "Assign.To": {
                  "OutArgument": "[out_Config]"
                },
                "Assign.Value": {
                  "InArgument": "[New Dictionary(of String, Object)]"
                }
              }
            },
            "ForEach": {
              "attributes": {
                "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String",
                "CurrentIndex": "{x:Null}",
                "DisplayName": "For each configuration sheet",
                "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "598,982",
                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "ForEach`1_3",
                "Values": "[in_ConfigSheets]"
              },
              "children": {
                "ForEach.Body": {
                  "ActivityAction": {
                    "attributes": {
                      "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String"
                    },
                    "children": {
                      "ActivityAction.Argument": {
                        "DelegateInArgument": {
                          "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String",
                          "Name": "Sheet"
                        }
                      },
                      "Sequence": {
                        "attributes": {
                          "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Read settings and constants from the configuration file and add them to the Config dictionary.",
                          "DisplayName": "Get local settings and constants",
                          "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "564,834",
                          "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_5"
                        },
                        "children": {
                          "Sequence.Variables": {
                            "Variable": {
                              "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataTable",
                              "Name": "dt_SettingsAndConstants"
                            }
                          },
                          "WorkflowViewStateService.ViewState": {
                            "Dictionary": {
                              "attributes": {
                                "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                              },
                              "children": {
                                "Boolean": "True"
                              }
                            }
                          },
                          "ReadRange": {
                            "Range": "{x:Null}",
                            "AddHeaders": "True",
                            "DataTable": "[Dt_SettingsAndConstants]",
                            "DisplayName": "Read range (Settings and Constants sheets)",
                            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "502,120",
                            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "ReadRange_2",
                            "SheetName": "[Sheet]",
                            "WorkbookPath": "[in_ConfigFile]"
                          },
                          "ForEachRow": {
                            "attributes": {
                              "ColumnNames": "{x:Null}",
                              "CurrentIndex": "{x:Null}",
                              "DataTable": "[Dt_SettingsAndConstants]",
                              "DisplayName": "For each configuration row",
                              "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "502,595.3333333333334",
                              "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "ForEachRow_2"
                            },
                            "children": {
                              "ForEachRow.Body": {
                                "ActivityAction": {
                                  "attributes": {
                                    "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataRow"
                                  },
                                  "children": {
                                    "ActivityAction.Argument": {
                                      "DelegateInArgument": {
                                        "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataRow",
                                        "Name": "Row"
                                      }
                                    },
                                    "If": {
                                      "attributes": {
                                        "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Read non-empty rows in the sheet.",
                                        "Condition": "[Not String.IsNullOrWhiteSpace(row(\"Name\").ToString.Trim)]",
                                        "DisplayName": "If configuration row is not empty",
                                        "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "468,382.6666666666667",
                                        "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "If_1"
                                      },
                                      "children": {
                                        "WorkflowViewStateService.ViewState": {
                                          "Dictionary": {
                                            "attributes": {
                                              "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                            },
                                            "children": {
                                              "Boolean": "False"
                                            }
                                          }
                                        },
                                        "If.Then": {
                                          "Assign": {
                                            "attributes": {
                                              "DisplayName": "Add Config key/value pair",
                                              "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "434,85.33333333333333",
                                              "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Assign_15"
                                            },
                                            "children": {
                                              "Assign.To": {
                                                "OutArgument": "[out_Config(Row(\"Name\").ToString.Trim)]"
                                              },
                                              "Assign.Value": {
                                                "InArgument": "[Row(\"Value\")]"
                                              }
                                            }
                                          }
                                        },
                                        "If.Else": {
                                          "Sequence": {
                                            "attributes": {
                                              "DisplayName": "Else",
                                              "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "416,104.66666666666667",
                                              "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_12"
                                            },
                                            "children": {
                                              "WorkflowViewStateService.ViewState": {
                                                "Dictionary": {
                                                  "attributes": {
                                                    "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                                  },
                                                  "children": {
                                                    "Boolean": "True"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "WorkflowViewStateService.ViewState": {
                  "Dictionary": {
                    "attributes": {
                      "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                    },
                    "children": {
                      "Boolean": "False"
                    }
                  }
                }
              }
            },
            "TryCatch": {
              "attributes": {
                "DisplayName": "Try initializing assets",
                "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "550.4,1222.4",
                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "TryCatch_2"
              },
              "children": {
                "WorkflowViewStateService.ViewState": {
                  "Dictionary": {
                    "attributes": {
                      "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                    },
                    "children": {
                      "Boolean": "False"
                    }
                  }
                },
                "TryCatch.Try": {
                  "Sequence": {
                    "attributes": {
                      "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Get from Orchestrator the values of assets listed in the Assets sheet.",
                      "DisplayName": "Get Orchestrator assets",
                      "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "513.6,981.6",
                      "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_6"
                    },
                    "children": {
                      "Sequence.Variables": {
                        "Variable": {
                          "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataTable",
                          "Name": "dt_Assets"
                        }
                      },
                      "WorkflowViewStateService.ViewState": {
                        "Dictionary": {
                          "attributes": {
                            "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                          },
                          "children": {
                            "Boolean": "True"
                          }
                        }
                      },
                      "ReadRange": {
                        "Range": "{x:Null}",
                        "AddHeaders": "True",
                        "DataTable": "[dt_Assets]",
                        "DisplayName": "Read range (Assets sheet)",
                        "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "470.4,97.6",
                        "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "ReadRange_3",
                        "SheetName": "Assets",
                        "WorkbookPath": "[in_ConfigFile]"
                      },
                      "ForEachRow": {
                        "attributes": {
                          "ColumnNames": "{x:Null}",
                          "CurrentIndex": "{x:Null}",
                          "DataTable": "[dt_Assets]",
                          "DisplayName": "For each asset row",
                          "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "470.4,752.8",
                          "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "ForEachRow_3"
                        },
                        "children": {
                          "ForEachRow.Body": {
                            "ActivityAction": {
                              "attributes": {
                                "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataRow"
                              },
                              "children": {
                                "ActivityAction.Argument": {
                                  "DelegateInArgument": {
                                    "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataRow",
                                    "Name": "Row"
                                  }
                                },
                                "TryCatch": {
                                  "attributes": {
                                    "DisplayName": "Try retrieving asset from Orchestrator",
                                    "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "436.8,627.2",
                                    "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "TryCatch_3"
                                  },
                                  "children": {
                                    "WorkflowViewStateService.ViewState": {
                                      "Dictionary": {
                                        "attributes": {
                                          "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                        },
                                        "children": {
                                          "Boolean": "False"
                                        }
                                      }
                                    },
                                    "TryCatch.Try": {
                                      "Sequence": {
                                        "attributes": {
                                          "DisplayName": "Get asset from Orchestrator",
                                          "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "400,386.4",
                                          "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_11"
                                        },
                                        "children": {
                                          "Sequence.Variables": {
                                            "Variable": {
                                              "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:Object",
                                              "Name": "AssetValue"
                                            }
                                          },
                                          "WorkflowViewStateService.ViewState": {
                                            "Dictionary": {
                                              "attributes": {
                                                "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                              },
                                              "children": {
                                                "Boolean": "True"
                                              }
                                            }
                                          },
                                          "GetRobotAsset": {
                                            "attributes": {
                                              "AssetName": "[row(\"Asset\").ToString]",
                                              "CacheStrategy": "None",
                                              "DisplayName": "Get Orchestrator asset",
                                              "FolderPath": "[row(\"OrchestratorAssetFolder\").ToString]",
                                              "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "356.8,185.6",
                                              "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "GetRobotAsset_5"
                                            },
                                            "children": {
                                              "GetRobotAsset.TimeoutMS": {
                                                "InArgument": {
                                                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:Int32"
                                                }
                                              },
                                              "GetRobotAsset.Value": {
                                                "OutArgument": "[AssetValue]"
                                              }
                                            }
                                          },
                                          "Assign": {
                                            "attributes": {
                                              "DisplayName": "Assign asset value in Config",
                                              "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "356.8,69.6",
                                              "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Assign_23"
                                            },
                                            "children": {
                                              "Assign.To": {
                                                "OutArgument": "[out_Config(row(\"Name\").ToString)]"
                                              },
                                              "Assign.Value": {
                                                "InArgument": "[AssetValue]"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "TryCatch.Catches": {
                                      "Catch": {
                                        "attributes": {
                                          "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "s:Exception",
                                          "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "403.2,22.4",
                                          "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Catch`1_3"
                                        },
                                        "children": {
                                          "WorkflowViewStateService.ViewState": {
                                            "Dictionary": {
                                              "attributes": {
                                                "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                              },
                                              "children": {
                                                "Boolean": "False"
                                              }
                                            }
                                          },
                                          "ActivityAction": {
                                            "attributes": {
                                              "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "s:Exception"
                                            },
                                            "children": {
                                              "ActivityAction.Argument": {
                                                "DelegateInArgument": {
                                                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "s:Exception",
                                                  "Name": "Exception"
                                                }
                                              },
                                              "If": {
                                                "attributes": {
                                                  "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Logs a message and throw exception in case the asset is specified in the Config file, but it could not be loaded from Orchestrator.",
                                                  "Condition": "[Not String.IsNullOrWhiteSpace(Row(\"Name\").ToString.Trim)]",
                                                  "DisplayName": "If asset name is specified, but it cannot be retrieved",
                                                  "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "416,409.6",
                                                  "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "If_5"
                                                },
                                                "children": {
                                                  "WorkflowViewStateService.ViewState": {
                                                    "Dictionary": {
                                                      "attributes": {
                                                        "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                                      },
                                                      "children": {
                                                        "Boolean": "True"
                                                      }
                                                    }
                                                  },
                                                  "If.Then": {
                                                    "Throw": {
                                                      "DisplayName": "Throw AssetFailedToLoad Exception",
                                                      "Exception": "[new Exception(\"Loading asset \" + Row(\"Asset\").ToString + \" failed: \" + Exception.Message)]",
                                                      "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "334.4,98.4",
                                                      "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Throw_1"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "WorkflowViewStateService.ViewState": {
                            "Dictionary": {
                              "attributes": {
                                "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                              },
                              "children": {
                                "Boolean": "False"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "TryCatch.Catches": {
                  "Catch": {
                    "attributes": {
                      "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "s:Exception",
                      "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "516.8,22.4",
                      "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Catch`1_2"
                    },
                    "children": {
                      "WorkflowViewStateService.ViewState": {
                        "Dictionary": {
                          "attributes": {
                            "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                          },
                          "children": {
                            "Boolean": "False"
                          }
                        }
                      },
                      "ActivityAction": {
                        "attributes": {
                          "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "s:Exception"
                        },
                        "children": {
                          "ActivityAction.Argument": {
                            "DelegateInArgument": {
                              "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "s:Exception",
                              "Name": "Exception"
                            }
                          },
                          "Rethrow": {
                            "DisplayName": "Rethrow loading asset exception",
                            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "334.4,32",
                            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Rethrow_1"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_1",
          "child_activities": [
            "activity_3",
            "activity_4",
            "activity_5",
            "activity_16"
          ],
          "depth_level": 1,
          "xpath_location": "/Sequence",
          "source_line": null
        },
        {
          "tag": "LogMessage",
          "activity_id": "activity_3",
          "display_name": "Log Message (Initialize All Settings)",
          "annotation": null,
          "visible_attributes": {
            "DisplayName": "Log Message (Initialize All Settings)",
            "Level": "Trace",
            "Message": "[\"Initializing settings...\"]"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "598,176.66666666666666",
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "LogMessage_5"
          },
          "configuration": {},
          "variables": [],
          "expressions": [
            {
              "content": "[\"Initializing settings...\"]",
              "expression_type": "message",
              "language": "VisualBasic",
              "context": "Message",
              "contains_variables": [],
              "contains_methods": []
            }
          ],
          "parent_activity_id": "activity_2",
          "child_activities": [],
          "depth_level": 2,
          "xpath_location": "/LogMessage",
          "source_line": null
        },
        {
          "tag": "Assign",
          "activity_id": "activity_4",
          "display_name": "Assing out_Config (initialization)",
          "annotation": null,
          "visible_attributes": {
            "DisplayName": "Assing out_Config (initialization)"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "598,117.33333333333333",
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Assign_1"
          },
          "configuration": {
            "Assign.To": {
              "OutArgument": "[out_Config]"
            },
            "Assign.Value": {
              "InArgument": "[New Dictionary(of String, Object)]"
            }
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_2",
          "child_activities": [],
          "depth_level": 2,
          "xpath_location": "/Assign",
          "source_line": null
        },
        {
          "tag": "ForEach",
          "activity_id": "activity_5",
          "display_name": "For each configuration sheet",
          "annotation": null,
          "visible_attributes": {
            "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String",
            "CurrentIndex": "{x:Null}",
            "DisplayName": "For each configuration sheet",
            "Values": "[in_ConfigSheets]"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "598,982",
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "ForEach`1_3"
          },
          "configuration": {
            "ForEach.Body": {
              "ActivityAction": {
                "attributes": {
                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String"
                },
                "children": {
                  "ActivityAction.Argument": {
                    "DelegateInArgument": {
                      "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String",
                      "Name": "Sheet"
                    }
                  },
                  "Sequence": {
                    "attributes": {
                      "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Read settings and constants from the configuration file and add them to the Config dictionary.",
                      "DisplayName": "Get local settings and constants",
                      "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "564,834",
                      "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_5"
                    },
                    "children": {
                      "Sequence.Variables": {
                        "Variable": {
                          "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataTable",
                          "Name": "dt_SettingsAndConstants"
                        }
                      },
                      "WorkflowViewStateService.ViewState": {
                        "Dictionary": {
                          "attributes": {
                            "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                          },
                          "children": {
                            "Boolean": "True"
                          }
                        }
                      },
                      "ReadRange": {
                        "Range": "{x:Null}",
                        "AddHeaders": "True",
                        "DataTable": "[Dt_SettingsAndConstants]",
                        "DisplayName": "Read range (Settings and Constants sheets)",
                        "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "502,120",
                        "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "ReadRange_2",
                        "SheetName": "[Sheet]",
                        "WorkbookPath": "[in_ConfigFile]"
                      },
                      "ForEachRow": {
                        "attributes": {
                          "ColumnNames": "{x:Null}",
                          "CurrentIndex": "{x:Null}",
                          "DataTable": "[Dt_SettingsAndConstants]",
                          "DisplayName": "For each configuration row",
                          "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "502,595.3333333333334",
                          "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "ForEachRow_2"
                        },
                        "children": {
                          "ForEachRow.Body": {
                            "ActivityAction": {
                              "attributes": {
                                "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataRow"
                              },
                              "children": {
                                "ActivityAction.Argument": {
                                  "DelegateInArgument": {
                                    "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataRow",
                                    "Name": "Row"
                                  }
                                },
                                "If": {
                                  "attributes": {
                                    "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Read non-empty rows in the sheet.",
                                    "Condition": "[Not String.IsNullOrWhiteSpace(row(\"Name\").ToString.Trim)]",
                                    "DisplayName": "If configuration row is not empty",
                                    "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "468,382.6666666666667",
                                    "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "If_1"
                                  },
                                  "children": {
                                    "WorkflowViewStateService.ViewState": {
                                      "Dictionary": {
                                        "attributes": {
                                          "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                        },
                                        "children": {
                                          "Boolean": "False"
                                        }
                                      }
                                    },
                                    "If.Then": {
                                      "Assign": {
                                        "attributes": {
                                          "DisplayName": "Add Config key/value pair",
                                          "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "434,85.33333333333333",
                                          "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Assign_15"
                                        },
                                        "children": {
                                          "Assign.To": {
                                            "OutArgument": "[out_Config(Row(\"Name\").ToString.Trim)]"
                                          },
                                          "Assign.Value": {
                                            "InArgument": "[Row(\"Value\")]"
                                          }
                                        }
                                      }
                                    },
                                    "If.Else": {
                                      "Sequence": {
                                        "attributes": {
                                          "DisplayName": "Else",
                                          "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "416,104.66666666666667",
                                          "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_12"
                                        },
                                        "children": {
                                          "WorkflowViewStateService.ViewState": {
                                            "Dictionary": {
                                              "attributes": {
                                                "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                              },
                                              "children": {
                                                "Boolean": "True"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "WorkflowViewStateService.ViewState": {
              "Dictionary": {
                "attributes": {
                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                },
                "children": {
                  "Boolean": "False"
                }
              }
            }
          },
          "variables": [],
          "expressions": [
            {
              "content": "[in_ConfigSheets]",
              "expression_type": "assignment",
              "language": "VisualBasic",
              "context": "Values",
              "contains_variables": [],
              "contains_methods": []
            }
          ],
          "parent_activity_id": "activity_2",
          "child_activities": [
            "activity_6"
          ],
          "depth_level": 2,
          "xpath_location": "/ForEach",
          "source_line": null
        },
        {
          "tag": "ForEach.Body",
          "activity_id": "activity_6",
          "display_name": null,
          "annotation": null,
          "visible_attributes": {},
          "invisible_attributes": {},
          "configuration": {
            "ActivityAction": {
              "attributes": {
                "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String"
              },
              "children": {
                "ActivityAction.Argument": {
                  "DelegateInArgument": {
                    "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String",
                    "Name": "Sheet"
                  }
                },
                "Sequence": {
                  "attributes": {
                    "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Read settings and constants from the configuration file and add them to the Config dictionary.",
                    "DisplayName": "Get local settings and constants",
                    "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "564,834",
                    "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_5"
                  },
                  "children": {
                    "Sequence.Variables": {
                      "Variable": {
                        "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataTable",
                        "Name": "dt_SettingsAndConstants"
                      }
                    },
                    "WorkflowViewStateService.ViewState": {
                      "Dictionary": {
                        "attributes": {
                          "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                        },
                        "children": {
                          "Boolean": "True"
                        }
                      }
                    },
                    "ReadRange": {
                      "Range": "{x:Null}",
                      "AddHeaders": "True",
                      "DataTable": "[Dt_SettingsAndConstants]",
                      "DisplayName": "Read range (Settings and Constants sheets)",
                      "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "502,120",
                      "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "ReadRange_2",
                      "SheetName": "[Sheet]",
                      "WorkbookPath": "[in_ConfigFile]"
                    },
                    "ForEachRow": {
                      "attributes": {
                        "ColumnNames": "{x:Null}",
                        "CurrentIndex": "{x:Null}",
                        "DataTable": "[Dt_SettingsAndConstants]",
                        "DisplayName": "For each configuration row",
                        "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "502,595.3333333333334",
                        "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "ForEachRow_2"
                      },
                      "children": {
                        "ForEachRow.Body": {
                          "ActivityAction": {
                            "attributes": {
                              "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataRow"
                            },
                            "children": {
                              "ActivityAction.Argument": {
                                "DelegateInArgument": {
                                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataRow",
                                  "Name": "Row"
                                }
                              },
                              "If": {
                                "attributes": {
                                  "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Read non-empty rows in the sheet.",
                                  "Condition": "[Not String.IsNullOrWhiteSpace(row(\"Name\").ToString.Trim)]",
                                  "DisplayName": "If configuration row is not empty",
                                  "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "468,382.6666666666667",
                                  "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "If_1"
                                },
                                "children": {
                                  "WorkflowViewStateService.ViewState": {
                                    "Dictionary": {
                                      "attributes": {
                                        "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                      },
                                      "children": {
                                        "Boolean": "False"
                                      }
                                    }
                                  },
                                  "If.Then": {
                                    "Assign": {
                                      "attributes": {
                                        "DisplayName": "Add Config key/value pair",
                                        "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "434,85.33333333333333",
                                        "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Assign_15"
                                      },
                                      "children": {
                                        "Assign.To": {
                                          "OutArgument": "[out_Config(Row(\"Name\").ToString.Trim)]"
                                        },
                                        "Assign.Value": {
                                          "InArgument": "[Row(\"Value\")]"
                                        }
                                      }
                                    }
                                  },
                                  "If.Else": {
                                    "Sequence": {
                                      "attributes": {
                                        "DisplayName": "Else",
                                        "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "416,104.66666666666667",
                                        "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_12"
                                      },
                                      "children": {
                                        "WorkflowViewStateService.ViewState": {
                                          "Dictionary": {
                                            "attributes": {
                                              "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                            },
                                            "children": {
                                              "Boolean": "True"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_5",
          "child_activities": [
            "activity_7"
          ],
          "depth_level": 3,
          "xpath_location": "/ForEach.Body",
          "source_line": null
        },
        {
          "tag": "Sequence",
          "activity_id": "activity_7",
          "display_name": "Get local settings and constants",
          "annotation": "Read settings and constants from the configuration file and add them to the Config dictionary.",
          "visible_attributes": {
            "DisplayName": "Get local settings and constants"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Read settings and constants from the configuration file and add them to the Config dictionary.",
            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "564,834",
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_5"
          },
          "configuration": {
            "Sequence.Variables": {
              "Variable": {
                "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataTable",
                "Name": "dt_SettingsAndConstants"
              }
            },
            "WorkflowViewStateService.ViewState": {
              "Dictionary": {
                "attributes": {
                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                },
                "children": {
                  "Boolean": "True"
                }
              }
            },
            "ReadRange": {
              "Range": "{x:Null}",
              "AddHeaders": "True",
              "DataTable": "[Dt_SettingsAndConstants]",
              "DisplayName": "Read range (Settings and Constants sheets)",
              "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "502,120",
              "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "ReadRange_2",
              "SheetName": "[Sheet]",
              "WorkbookPath": "[in_ConfigFile]"
            },
            "ForEachRow": {
              "attributes": {
                "ColumnNames": "{x:Null}",
                "CurrentIndex": "{x:Null}",
                "DataTable": "[Dt_SettingsAndConstants]",
                "DisplayName": "For each configuration row",
                "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "502,595.3333333333334",
                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "ForEachRow_2"
              },
              "children": {
                "ForEachRow.Body": {
                  "ActivityAction": {
                    "attributes": {
                      "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataRow"
                    },
                    "children": {
                      "ActivityAction.Argument": {
                        "DelegateInArgument": {
                          "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataRow",
                          "Name": "Row"
                        }
                      },
                      "If": {
                        "attributes": {
                          "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Read non-empty rows in the sheet.",
                          "Condition": "[Not String.IsNullOrWhiteSpace(row(\"Name\").ToString.Trim)]",
                          "DisplayName": "If configuration row is not empty",
                          "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "468,382.6666666666667",
                          "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "If_1"
                        },
                        "children": {
                          "WorkflowViewStateService.ViewState": {
                            "Dictionary": {
                              "attributes": {
                                "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                              },
                              "children": {
                                "Boolean": "False"
                              }
                            }
                          },
                          "If.Then": {
                            "Assign": {
                              "attributes": {
                                "DisplayName": "Add Config key/value pair",
                                "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "434,85.33333333333333",
                                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Assign_15"
                              },
                              "children": {
                                "Assign.To": {
                                  "OutArgument": "[out_Config(Row(\"Name\").ToString.Trim)]"
                                },
                                "Assign.Value": {
                                  "InArgument": "[Row(\"Value\")]"
                                }
                              }
                            }
                          },
                          "If.Else": {
                            "Sequence": {
                              "attributes": {
                                "DisplayName": "Else",
                                "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "416,104.66666666666667",
                                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_12"
                              },
                              "children": {
                                "WorkflowViewStateService.ViewState": {
                                  "Dictionary": {
                                    "attributes": {
                                      "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                    },
                                    "children": {
                                      "Boolean": "True"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_6",
          "child_activities": [
            "activity_8",
            "activity_9"
          ],
          "depth_level": 4,
          "xpath_location": "/Sequence",
          "source_line": null
        },
        {
          "tag": "ReadRange",
          "activity_id": "activity_8",
          "display_name": "Read range (Settings and Constants sheets)",
          "annotation": null,
          "visible_attributes": {
            "Range": "{x:Null}",
            "AddHeaders": "True",
            "DataTable": "[Dt_SettingsAndConstants]",
            "DisplayName": "Read range (Settings and Constants sheets)",
            "SheetName": "[Sheet]",
            "WorkbookPath": "[in_ConfigFile]"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "502,120",
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "ReadRange_2"
          },
          "configuration": {},
          "variables": [],
          "expressions": [
            {
              "content": "[Dt_SettingsAndConstants]",
              "expression_type": "general",
              "language": "VisualBasic",
              "context": "DataTable",
              "contains_variables": [],
              "contains_methods": []
            },
            {
              "content": "[Sheet]",
              "expression_type": "general",
              "language": "VisualBasic",
              "context": "SheetName",
              "contains_variables": [],
              "contains_methods": []
            },
            {
              "content": "[in_ConfigFile]",
              "expression_type": "general",
              "language": "VisualBasic",
              "context": "WorkbookPath",
              "contains_variables": [],
              "contains_methods": []
            }
          ],
          "parent_activity_id": "activity_7",
          "child_activities": [],
          "depth_level": 5,
          "xpath_location": "/ReadRange",
          "source_line": null
        },
        {
          "tag": "ForEachRow",
          "activity_id": "activity_9",
          "display_name": "For each configuration row",
          "annotation": null,
          "visible_attributes": {
            "ColumnNames": "{x:Null}",
            "CurrentIndex": "{x:Null}",
            "DataTable": "[Dt_SettingsAndConstants]",
            "DisplayName": "For each configuration row"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "502,595.3333333333334",
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "ForEachRow_2"
          },
          "configuration": {
            "ForEachRow.Body": {
              "ActivityAction": {
                "attributes": {
                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataRow"
                },
                "children": {
                  "ActivityAction.Argument": {
                    "DelegateInArgument": {
                      "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataRow",
                      "Name": "Row"
                    }
                  },
                  "If": {
                    "attributes": {
                      "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Read non-empty rows in the sheet.",
                      "Condition": "[Not String.IsNullOrWhiteSpace(row(\"Name\").ToString.Trim)]",
                      "DisplayName": "If configuration row is not empty",
                      "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "468,382.6666666666667",
                      "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "If_1"
                    },
                    "children": {
                      "WorkflowViewStateService.ViewState": {
                        "Dictionary": {
                          "attributes": {
                            "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                          },
                          "children": {
                            "Boolean": "False"
                          }
                        }
                      },
                      "If.Then": {
                        "Assign": {
                          "attributes": {
                            "DisplayName": "Add Config key/value pair",
                            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "434,85.33333333333333",
                            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Assign_15"
                          },
                          "children": {
                            "Assign.To": {
                              "OutArgument": "[out_Config(Row(\"Name\").ToString.Trim)]"
                            },
                            "Assign.Value": {
                              "InArgument": "[Row(\"Value\")]"
                            }
                          }
                        }
                      },
                      "If.Else": {
                        "Sequence": {
                          "attributes": {
                            "DisplayName": "Else",
                            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "416,104.66666666666667",
                            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_12"
                          },
                          "children": {
                            "WorkflowViewStateService.ViewState": {
                              "Dictionary": {
                                "attributes": {
                                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                },
                                "children": {
                                  "Boolean": "True"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "variables": [],
          "expressions": [
            {
              "content": "[Dt_SettingsAndConstants]",
              "expression_type": "general",
              "language": "VisualBasic",
              "context": "DataTable",
              "contains_variables": [],
              "contains_methods": []
            }
          ],
          "parent_activity_id": "activity_7",
          "child_activities": [
            "activity_10"
          ],
          "depth_level": 5,
          "xpath_location": "/ForEachRow",
          "source_line": null
        },
        {
          "tag": "ForEachRow.Body",
          "activity_id": "activity_10",
          "display_name": null,
          "annotation": null,
          "visible_attributes": {},
          "invisible_attributes": {},
          "configuration": {
            "ActivityAction": {
              "attributes": {
                "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataRow"
              },
              "children": {
                "ActivityAction.Argument": {
                  "DelegateInArgument": {
                    "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataRow",
                    "Name": "Row"
                  }
                },
                "If": {
                  "attributes": {
                    "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Read non-empty rows in the sheet.",
                    "Condition": "[Not String.IsNullOrWhiteSpace(row(\"Name\").ToString.Trim)]",
                    "DisplayName": "If configuration row is not empty",
                    "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "468,382.6666666666667",
                    "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "If_1"
                  },
                  "children": {
                    "WorkflowViewStateService.ViewState": {
                      "Dictionary": {
                        "attributes": {
                          "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                        },
                        "children": {
                          "Boolean": "False"
                        }
                      }
                    },
                    "If.Then": {
                      "Assign": {
                        "attributes": {
                          "DisplayName": "Add Config key/value pair",
                          "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "434,85.33333333333333",
                          "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Assign_15"
                        },
                        "children": {
                          "Assign.To": {
                            "OutArgument": "[out_Config(Row(\"Name\").ToString.Trim)]"
                          },
                          "Assign.Value": {
                            "InArgument": "[Row(\"Value\")]"
                          }
                        }
                      }
                    },
                    "If.Else": {
                      "Sequence": {
                        "attributes": {
                          "DisplayName": "Else",
                          "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "416,104.66666666666667",
                          "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_12"
                        },
                        "children": {
                          "WorkflowViewStateService.ViewState": {
                            "Dictionary": {
                              "attributes": {
                                "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                              },
                              "children": {
                                "Boolean": "True"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_9",
          "child_activities": [
            "activity_11"
          ],
          "depth_level": 6,
          "xpath_location": "/ForEachRow.Body",
          "source_line": null
        },
        {
          "tag": "If",
          "activity_id": "activity_11",
          "display_name": "If configuration row is not empty",
          "annotation": "Read non-empty rows in the sheet.",
          "visible_attributes": {
            "Condition": "[Not String.IsNullOrWhiteSpace(row(\"Name\").ToString.Trim)]",
            "DisplayName": "If configuration row is not empty"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Read non-empty rows in the sheet.",
            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "468,382.6666666666667",
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "If_1"
          },
          "configuration": {
            "WorkflowViewStateService.ViewState": {
              "Dictionary": {
                "attributes": {
                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                },
                "children": {
                  "Boolean": "False"
                }
              }
            },
            "If.Then": {
              "Assign": {
                "attributes": {
                  "DisplayName": "Add Config key/value pair",
                  "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "434,85.33333333333333",
                  "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Assign_15"
                },
                "children": {
                  "Assign.To": {
                    "OutArgument": "[out_Config(Row(\"Name\").ToString.Trim)]"
                  },
                  "Assign.Value": {
                    "InArgument": "[Row(\"Value\")]"
                  }
                }
              }
            },
            "If.Else": {
              "Sequence": {
                "attributes": {
                  "DisplayName": "Else",
                  "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "416,104.66666666666667",
                  "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_12"
                },
                "children": {
                  "WorkflowViewStateService.ViewState": {
                    "Dictionary": {
                      "attributes": {
                        "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                      },
                      "children": {
                        "Boolean": "True"
                      }
                    }
                  }
                }
              }
            }
          },
          "variables": [],
          "expressions": [
            {
              "content": "[Not String.IsNullOrWhiteSpace(row(\"Name\").ToString.Trim)]",
              "expression_type": "condition",
              "language": "VisualBasic",
              "context": "Condition",
              "contains_variables": [],
              "contains_methods": []
            }
          ],
          "parent_activity_id": "activity_10",
          "child_activities": [
            "activity_12",
            "activity_14"
          ],
          "depth_level": 7,
          "xpath_location": "/If",
          "source_line": null
        },
        {
          "tag": "If.Then",
          "activity_id": "activity_12",
          "display_name": null,
          "annotation": null,
          "visible_attributes": {},
          "invisible_attributes": {},
          "configuration": {
            "Assign": {
              "attributes": {
                "DisplayName": "Add Config key/value pair",
                "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "434,85.33333333333333",
                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Assign_15"
              },
              "children": {
                "Assign.To": {
                  "OutArgument": "[out_Config(Row(\"Name\").ToString.Trim)]"
                },
                "Assign.Value": {
                  "InArgument": "[Row(\"Value\")]"
                }
              }
            }
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_11",
          "child_activities": [
            "activity_13"
          ],
          "depth_level": 8,
          "xpath_location": "/If.Then",
          "source_line": null
        },
        {
          "tag": "Assign",
          "activity_id": "activity_13",
          "display_name": "Add Config key/value pair",
          "annotation": null,
          "visible_attributes": {
            "DisplayName": "Add Config key/value pair"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "434,85.33333333333333",
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Assign_15"
          },
          "configuration": {
            "Assign.To": {
              "OutArgument": "[out_Config(Row(\"Name\").ToString.Trim)]"
            },
            "Assign.Value": {
              "InArgument": "[Row(\"Value\")]"
            }
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_12",
          "child_activities": [],
          "depth_level": 9,
          "xpath_location": "/Assign",
          "source_line": null
        },
        {
          "tag": "If.Else",
          "activity_id": "activity_14",
          "display_name": null,
          "annotation": null,
          "visible_attributes": {},
          "invisible_attributes": {},
          "configuration": {
            "Sequence": {
              "attributes": {
                "DisplayName": "Else",
                "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "416,104.66666666666667",
                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_12"
              },
              "children": {
                "WorkflowViewStateService.ViewState": {
                  "Dictionary": {
                    "attributes": {
                      "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                    },
                    "children": {
                      "Boolean": "True"
                    }
                  }
                }
              }
            }
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_11",
          "child_activities": [
            "activity_15"
          ],
          "depth_level": 8,
          "xpath_location": "/If.Else",
          "source_line": null
        },
        {
          "tag": "Sequence",
          "activity_id": "activity_15",
          "display_name": "Else",
          "annotation": null,
          "visible_attributes": {
            "DisplayName": "Else"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "416,104.66666666666667",
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_12"
          },
          "configuration": {
            "WorkflowViewStateService.ViewState": {
              "Dictionary": {
                "attributes": {
                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                },
                "children": {
                  "Boolean": "True"
                }
              }
            }
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_14",
          "child_activities": [],
          "depth_level": 9,
          "xpath_location": "/Sequence",
          "source_line": null
        },
        {
          "tag": "TryCatch",
          "activity_id": "activity_16",
          "display_name": "Try initializing assets",
          "annotation": null,
          "visible_attributes": {
            "DisplayName": "Try initializing assets"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "550.4,1222.4",
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "TryCatch_2"
          },
          "configuration": {
            "WorkflowViewStateService.ViewState": {
              "Dictionary": {
                "attributes": {
                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                },
                "children": {
                  "Boolean": "False"
                }
              }
            },
            "TryCatch.Try": {
              "Sequence": {
                "attributes": {
                  "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Get from Orchestrator the values of assets listed in the Assets sheet.",
                  "DisplayName": "Get Orchestrator assets",
                  "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "513.6,981.6",
                  "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_6"
                },
                "children": {
                  "Sequence.Variables": {
                    "Variable": {
                      "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataTable",
                      "Name": "dt_Assets"
                    }
                  },
                  "WorkflowViewStateService.ViewState": {
                    "Dictionary": {
                      "attributes": {
                        "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                      },
                      "children": {
                        "Boolean": "True"
                      }
                    }
                  },
                  "ReadRange": {
                    "Range": "{x:Null}",
                    "AddHeaders": "True",
                    "DataTable": "[dt_Assets]",
                    "DisplayName": "Read range (Assets sheet)",
                    "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "470.4,97.6",
                    "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "ReadRange_3",
                    "SheetName": "Assets",
                    "WorkbookPath": "[in_ConfigFile]"
                  },
                  "ForEachRow": {
                    "attributes": {
                      "ColumnNames": "{x:Null}",
                      "CurrentIndex": "{x:Null}",
                      "DataTable": "[dt_Assets]",
                      "DisplayName": "For each asset row",
                      "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "470.4,752.8",
                      "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "ForEachRow_3"
                    },
                    "children": {
                      "ForEachRow.Body": {
                        "ActivityAction": {
                          "attributes": {
                            "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataRow"
                          },
                          "children": {
                            "ActivityAction.Argument": {
                              "DelegateInArgument": {
                                "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataRow",
                                "Name": "Row"
                              }
                            },
                            "TryCatch": {
                              "attributes": {
                                "DisplayName": "Try retrieving asset from Orchestrator",
                                "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "436.8,627.2",
                                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "TryCatch_3"
                              },
                              "children": {
                                "WorkflowViewStateService.ViewState": {
                                  "Dictionary": {
                                    "attributes": {
                                      "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                    },
                                    "children": {
                                      "Boolean": "False"
                                    }
                                  }
                                },
                                "TryCatch.Try": {
                                  "Sequence": {
                                    "attributes": {
                                      "DisplayName": "Get asset from Orchestrator",
                                      "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "400,386.4",
                                      "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_11"
                                    },
                                    "children": {
                                      "Sequence.Variables": {
                                        "Variable": {
                                          "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:Object",
                                          "Name": "AssetValue"
                                        }
                                      },
                                      "WorkflowViewStateService.ViewState": {
                                        "Dictionary": {
                                          "attributes": {
                                            "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                          },
                                          "children": {
                                            "Boolean": "True"
                                          }
                                        }
                                      },
                                      "GetRobotAsset": {
                                        "attributes": {
                                          "AssetName": "[row(\"Asset\").ToString]",
                                          "CacheStrategy": "None",
                                          "DisplayName": "Get Orchestrator asset",
                                          "FolderPath": "[row(\"OrchestratorAssetFolder\").ToString]",
                                          "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "356.8,185.6",
                                          "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "GetRobotAsset_5"
                                        },
                                        "children": {
                                          "GetRobotAsset.TimeoutMS": {
                                            "InArgument": {
                                              "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:Int32"
                                            }
                                          },
                                          "GetRobotAsset.Value": {
                                            "OutArgument": "[AssetValue]"
                                          }
                                        }
                                      },
                                      "Assign": {
                                        "attributes": {
                                          "DisplayName": "Assign asset value in Config",
                                          "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "356.8,69.6",
                                          "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Assign_23"
                                        },
                                        "children": {
                                          "Assign.To": {
                                            "OutArgument": "[out_Config(row(\"Name\").ToString)]"
                                          },
                                          "Assign.Value": {
                                            "InArgument": "[AssetValue]"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "TryCatch.Catches": {
                                  "Catch": {
                                    "attributes": {
                                      "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "s:Exception",
                                      "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "403.2,22.4",
                                      "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Catch`1_3"
                                    },
                                    "children": {
                                      "WorkflowViewStateService.ViewState": {
                                        "Dictionary": {
                                          "attributes": {
                                            "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                          },
                                          "children": {
                                            "Boolean": "False"
                                          }
                                        }
                                      },
                                      "ActivityAction": {
                                        "attributes": {
                                          "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "s:Exception"
                                        },
                                        "children": {
                                          "ActivityAction.Argument": {
                                            "DelegateInArgument": {
                                              "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "s:Exception",
                                              "Name": "Exception"
                                            }
                                          },
                                          "If": {
                                            "attributes": {
                                              "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Logs a message and throw exception in case the asset is specified in the Config file, but it could not be loaded from Orchestrator.",
                                              "Condition": "[Not String.IsNullOrWhiteSpace(Row(\"Name\").ToString.Trim)]",
                                              "DisplayName": "If asset name is specified, but it cannot be retrieved",
                                              "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "416,409.6",
                                              "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "If_5"
                                            },
                                            "children": {
                                              "WorkflowViewStateService.ViewState": {
                                                "Dictionary": {
                                                  "attributes": {
                                                    "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                                  },
                                                  "children": {
                                                    "Boolean": "True"
                                                  }
                                                }
                                              },
                                              "If.Then": {
                                                "Throw": {
                                                  "DisplayName": "Throw AssetFailedToLoad Exception",
                                                  "Exception": "[new Exception(\"Loading asset \" + Row(\"Asset\").ToString + \" failed: \" + Exception.Message)]",
                                                  "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "334.4,98.4",
                                                  "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Throw_1"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "WorkflowViewStateService.ViewState": {
                        "Dictionary": {
                          "attributes": {
                            "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                          },
                          "children": {
                            "Boolean": "False"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "TryCatch.Catches": {
              "Catch": {
                "attributes": {
                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "s:Exception",
                  "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "516.8,22.4",
                  "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Catch`1_2"
                },
                "children": {
                  "WorkflowViewStateService.ViewState": {
                    "Dictionary": {
                      "attributes": {
                        "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                      },
                      "children": {
                        "Boolean": "False"
                      }
                    }
                  },
                  "ActivityAction": {
                    "attributes": {
                      "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "s:Exception"
                    },
                    "children": {
                      "ActivityAction.Argument": {
                        "DelegateInArgument": {
                          "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "s:Exception",
                          "Name": "Exception"
                        }
                      },
                      "Rethrow": {
                        "DisplayName": "Rethrow loading asset exception",
                        "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "334.4,32",
                        "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Rethrow_1"
                      }
                    }
                  }
                }
              }
            }
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_2",
          "child_activities": [
            "activity_17",
            "activity_31"
          ],
          "depth_level": 2,
          "xpath_location": "/TryCatch",
          "source_line": null
        },
        {
          "tag": "TryCatch.Try",
          "activity_id": "activity_17",
          "display_name": null,
          "annotation": null,
          "visible_attributes": {},
          "invisible_attributes": {},
          "configuration": {
            "Sequence": {
              "attributes": {
                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Get from Orchestrator the values of assets listed in the Assets sheet.",
                "DisplayName": "Get Orchestrator assets",
                "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "513.6,981.6",
                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_6"
              },
              "children": {
                "Sequence.Variables": {
                  "Variable": {
                    "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataTable",
                    "Name": "dt_Assets"
                  }
                },
                "WorkflowViewStateService.ViewState": {
                  "Dictionary": {
                    "attributes": {
                      "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                    },
                    "children": {
                      "Boolean": "True"
                    }
                  }
                },
                "ReadRange": {
                  "Range": "{x:Null}",
                  "AddHeaders": "True",
                  "DataTable": "[dt_Assets]",
                  "DisplayName": "Read range (Assets sheet)",
                  "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "470.4,97.6",
                  "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "ReadRange_3",
                  "SheetName": "Assets",
                  "WorkbookPath": "[in_ConfigFile]"
                },
                "ForEachRow": {
                  "attributes": {
                    "ColumnNames": "{x:Null}",
                    "CurrentIndex": "{x:Null}",
                    "DataTable": "[dt_Assets]",
                    "DisplayName": "For each asset row",
                    "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "470.4,752.8",
                    "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "ForEachRow_3"
                  },
                  "children": {
                    "ForEachRow.Body": {
                      "ActivityAction": {
                        "attributes": {
                          "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataRow"
                        },
                        "children": {
                          "ActivityAction.Argument": {
                            "DelegateInArgument": {
                              "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataRow",
                              "Name": "Row"
                            }
                          },
                          "TryCatch": {
                            "attributes": {
                              "DisplayName": "Try retrieving asset from Orchestrator",
                              "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "436.8,627.2",
                              "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "TryCatch_3"
                            },
                            "children": {
                              "WorkflowViewStateService.ViewState": {
                                "Dictionary": {
                                  "attributes": {
                                    "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                  },
                                  "children": {
                                    "Boolean": "False"
                                  }
                                }
                              },
                              "TryCatch.Try": {
                                "Sequence": {
                                  "attributes": {
                                    "DisplayName": "Get asset from Orchestrator",
                                    "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "400,386.4",
                                    "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_11"
                                  },
                                  "children": {
                                    "Sequence.Variables": {
                                      "Variable": {
                                        "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:Object",
                                        "Name": "AssetValue"
                                      }
                                    },
                                    "WorkflowViewStateService.ViewState": {
                                      "Dictionary": {
                                        "attributes": {
                                          "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                        },
                                        "children": {
                                          "Boolean": "True"
                                        }
                                      }
                                    },
                                    "GetRobotAsset": {
                                      "attributes": {
                                        "AssetName": "[row(\"Asset\").ToString]",
                                        "CacheStrategy": "None",
                                        "DisplayName": "Get Orchestrator asset",
                                        "FolderPath": "[row(\"OrchestratorAssetFolder\").ToString]",
                                        "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "356.8,185.6",
                                        "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "GetRobotAsset_5"
                                      },
                                      "children": {
                                        "GetRobotAsset.TimeoutMS": {
                                          "InArgument": {
                                            "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:Int32"
                                          }
                                        },
                                        "GetRobotAsset.Value": {
                                          "OutArgument": "[AssetValue]"
                                        }
                                      }
                                    },
                                    "Assign": {
                                      "attributes": {
                                        "DisplayName": "Assign asset value in Config",
                                        "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "356.8,69.6",
                                        "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Assign_23"
                                      },
                                      "children": {
                                        "Assign.To": {
                                          "OutArgument": "[out_Config(row(\"Name\").ToString)]"
                                        },
                                        "Assign.Value": {
                                          "InArgument": "[AssetValue]"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "TryCatch.Catches": {
                                "Catch": {
                                  "attributes": {
                                    "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "s:Exception",
                                    "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "403.2,22.4",
                                    "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Catch`1_3"
                                  },
                                  "children": {
                                    "WorkflowViewStateService.ViewState": {
                                      "Dictionary": {
                                        "attributes": {
                                          "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                        },
                                        "children": {
                                          "Boolean": "False"
                                        }
                                      }
                                    },
                                    "ActivityAction": {
                                      "attributes": {
                                        "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "s:Exception"
                                      },
                                      "children": {
                                        "ActivityAction.Argument": {
                                          "DelegateInArgument": {
                                            "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "s:Exception",
                                            "Name": "Exception"
                                          }
                                        },
                                        "If": {
                                          "attributes": {
                                            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Logs a message and throw exception in case the asset is specified in the Config file, but it could not be loaded from Orchestrator.",
                                            "Condition": "[Not String.IsNullOrWhiteSpace(Row(\"Name\").ToString.Trim)]",
                                            "DisplayName": "If asset name is specified, but it cannot be retrieved",
                                            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "416,409.6",
                                            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "If_5"
                                          },
                                          "children": {
                                            "WorkflowViewStateService.ViewState": {
                                              "Dictionary": {
                                                "attributes": {
                                                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                                },
                                                "children": {
                                                  "Boolean": "True"
                                                }
                                              }
                                            },
                                            "If.Then": {
                                              "Throw": {
                                                "DisplayName": "Throw AssetFailedToLoad Exception",
                                                "Exception": "[new Exception(\"Loading asset \" + Row(\"Asset\").ToString + \" failed: \" + Exception.Message)]",
                                                "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "334.4,98.4",
                                                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Throw_1"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "WorkflowViewStateService.ViewState": {
                      "Dictionary": {
                        "attributes": {
                          "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                        },
                        "children": {
                          "Boolean": "False"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_16",
          "child_activities": [
            "activity_18"
          ],
          "depth_level": 3,
          "xpath_location": "/TryCatch.Try",
          "source_line": null
        },
        {
          "tag": "Sequence",
          "activity_id": "activity_18",
          "display_name": "Get Orchestrator assets",
          "annotation": "Get from Orchestrator the values of assets listed in the Assets sheet.",
          "visible_attributes": {
            "DisplayName": "Get Orchestrator assets"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Get from Orchestrator the values of assets listed in the Assets sheet.",
            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "513.6,981.6",
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_6"
          },
          "configuration": {
            "Sequence.Variables": {
              "Variable": {
                "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataTable",
                "Name": "dt_Assets"
              }
            },
            "WorkflowViewStateService.ViewState": {
              "Dictionary": {
                "attributes": {
                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                },
                "children": {
                  "Boolean": "True"
                }
              }
            },
            "ReadRange": {
              "Range": "{x:Null}",
              "AddHeaders": "True",
              "DataTable": "[dt_Assets]",
              "DisplayName": "Read range (Assets sheet)",
              "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "470.4,97.6",
              "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "ReadRange_3",
              "SheetName": "Assets",
              "WorkbookPath": "[in_ConfigFile]"
            },
            "ForEachRow": {
              "attributes": {
                "ColumnNames": "{x:Null}",
                "CurrentIndex": "{x:Null}",
                "DataTable": "[dt_Assets]",
                "DisplayName": "For each asset row",
                "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "470.4,752.8",
                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "ForEachRow_3"
              },
              "children": {
                "ForEachRow.Body": {
                  "ActivityAction": {
                    "attributes": {
                      "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataRow"
                    },
                    "children": {
                      "ActivityAction.Argument": {
                        "DelegateInArgument": {
                          "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataRow",
                          "Name": "Row"
                        }
                      },
                      "TryCatch": {
                        "attributes": {
                          "DisplayName": "Try retrieving asset from Orchestrator",
                          "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "436.8,627.2",
                          "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "TryCatch_3"
                        },
                        "children": {
                          "WorkflowViewStateService.ViewState": {
                            "Dictionary": {
                              "attributes": {
                                "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                              },
                              "children": {
                                "Boolean": "False"
                              }
                            }
                          },
                          "TryCatch.Try": {
                            "Sequence": {
                              "attributes": {
                                "DisplayName": "Get asset from Orchestrator",
                                "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "400,386.4",
                                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_11"
                              },
                              "children": {
                                "Sequence.Variables": {
                                  "Variable": {
                                    "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:Object",
                                    "Name": "AssetValue"
                                  }
                                },
                                "WorkflowViewStateService.ViewState": {
                                  "Dictionary": {
                                    "attributes": {
                                      "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                    },
                                    "children": {
                                      "Boolean": "True"
                                    }
                                  }
                                },
                                "GetRobotAsset": {
                                  "attributes": {
                                    "AssetName": "[row(\"Asset\").ToString]",
                                    "CacheStrategy": "None",
                                    "DisplayName": "Get Orchestrator asset",
                                    "FolderPath": "[row(\"OrchestratorAssetFolder\").ToString]",
                                    "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "356.8,185.6",
                                    "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "GetRobotAsset_5"
                                  },
                                  "children": {
                                    "GetRobotAsset.TimeoutMS": {
                                      "InArgument": {
                                        "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:Int32"
                                      }
                                    },
                                    "GetRobotAsset.Value": {
                                      "OutArgument": "[AssetValue]"
                                    }
                                  }
                                },
                                "Assign": {
                                  "attributes": {
                                    "DisplayName": "Assign asset value in Config",
                                    "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "356.8,69.6",
                                    "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Assign_23"
                                  },
                                  "children": {
                                    "Assign.To": {
                                      "OutArgument": "[out_Config(row(\"Name\").ToString)]"
                                    },
                                    "Assign.Value": {
                                      "InArgument": "[AssetValue]"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "TryCatch.Catches": {
                            "Catch": {
                              "attributes": {
                                "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "s:Exception",
                                "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "403.2,22.4",
                                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Catch`1_3"
                              },
                              "children": {
                                "WorkflowViewStateService.ViewState": {
                                  "Dictionary": {
                                    "attributes": {
                                      "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                    },
                                    "children": {
                                      "Boolean": "False"
                                    }
                                  }
                                },
                                "ActivityAction": {
                                  "attributes": {
                                    "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "s:Exception"
                                  },
                                  "children": {
                                    "ActivityAction.Argument": {
                                      "DelegateInArgument": {
                                        "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "s:Exception",
                                        "Name": "Exception"
                                      }
                                    },
                                    "If": {
                                      "attributes": {
                                        "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Logs a message and throw exception in case the asset is specified in the Config file, but it could not be loaded from Orchestrator.",
                                        "Condition": "[Not String.IsNullOrWhiteSpace(Row(\"Name\").ToString.Trim)]",
                                        "DisplayName": "If asset name is specified, but it cannot be retrieved",
                                        "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "416,409.6",
                                        "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "If_5"
                                      },
                                      "children": {
                                        "WorkflowViewStateService.ViewState": {
                                          "Dictionary": {
                                            "attributes": {
                                              "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                            },
                                            "children": {
                                              "Boolean": "True"
                                            }
                                          }
                                        },
                                        "If.Then": {
                                          "Throw": {
                                            "DisplayName": "Throw AssetFailedToLoad Exception",
                                            "Exception": "[new Exception(\"Loading asset \" + Row(\"Asset\").ToString + \" failed: \" + Exception.Message)]",
                                            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "334.4,98.4",
                                            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Throw_1"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "WorkflowViewStateService.ViewState": {
                  "Dictionary": {
                    "attributes": {
                      "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                    },
                    "children": {
                      "Boolean": "False"
                    }
                  }
                }
              }
            }
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_17",
          "child_activities": [
            "activity_19",
            "activity_20"
          ],
          "depth_level": 4,
          "xpath_location": "/Sequence",
          "source_line": null
        },
        {
          "tag": "ReadRange",
          "activity_id": "activity_19",
          "display_name": "Read range (Assets sheet)",
          "annotation": null,
          "visible_attributes": {
            "Range": "{x:Null}",
            "AddHeaders": "True",
            "DataTable": "[dt_Assets]",
            "DisplayName": "Read range (Assets sheet)",
            "SheetName": "Assets",
            "WorkbookPath": "[in_ConfigFile]"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "470.4,97.6",
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "ReadRange_3"
          },
          "configuration": {},
          "variables": [],
          "expressions": [
            {
              "content": "[dt_Assets]",
              "expression_type": "general",
              "language": "VisualBasic",
              "context": "DataTable",
              "contains_variables": [],
              "contains_methods": []
            },
            {
              "content": "[in_ConfigFile]",
              "expression_type": "general",
              "language": "VisualBasic",
              "context": "WorkbookPath",
              "contains_variables": [],
              "contains_methods": []
            }
          ],
          "parent_activity_id": "activity_18",
          "child_activities": [],
          "depth_level": 5,
          "xpath_location": "/ReadRange",
          "source_line": null
        },
        {
          "tag": "ForEachRow",
          "activity_id": "activity_20",
          "display_name": "For each asset row",
          "annotation": null,
          "visible_attributes": {
            "ColumnNames": "{x:Null}",
            "CurrentIndex": "{x:Null}",
            "DataTable": "[dt_Assets]",
            "DisplayName": "For each asset row"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "470.4,752.8",
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "ForEachRow_3"
          },
          "configuration": {
            "ForEachRow.Body": {
              "ActivityAction": {
                "attributes": {
                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataRow"
                },
                "children": {
                  "ActivityAction.Argument": {
                    "DelegateInArgument": {
                      "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataRow",
                      "Name": "Row"
                    }
                  },
                  "TryCatch": {
                    "attributes": {
                      "DisplayName": "Try retrieving asset from Orchestrator",
                      "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "436.8,627.2",
                      "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "TryCatch_3"
                    },
                    "children": {
                      "WorkflowViewStateService.ViewState": {
                        "Dictionary": {
                          "attributes": {
                            "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                          },
                          "children": {
                            "Boolean": "False"
                          }
                        }
                      },
                      "TryCatch.Try": {
                        "Sequence": {
                          "attributes": {
                            "DisplayName": "Get asset from Orchestrator",
                            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "400,386.4",
                            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_11"
                          },
                          "children": {
                            "Sequence.Variables": {
                              "Variable": {
                                "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:Object",
                                "Name": "AssetValue"
                              }
                            },
                            "WorkflowViewStateService.ViewState": {
                              "Dictionary": {
                                "attributes": {
                                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                },
                                "children": {
                                  "Boolean": "True"
                                }
                              }
                            },
                            "GetRobotAsset": {
                              "attributes": {
                                "AssetName": "[row(\"Asset\").ToString]",
                                "CacheStrategy": "None",
                                "DisplayName": "Get Orchestrator asset",
                                "FolderPath": "[row(\"OrchestratorAssetFolder\").ToString]",
                                "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "356.8,185.6",
                                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "GetRobotAsset_5"
                              },
                              "children": {
                                "GetRobotAsset.TimeoutMS": {
                                  "InArgument": {
                                    "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:Int32"
                                  }
                                },
                                "GetRobotAsset.Value": {
                                  "OutArgument": "[AssetValue]"
                                }
                              }
                            },
                            "Assign": {
                              "attributes": {
                                "DisplayName": "Assign asset value in Config",
                                "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "356.8,69.6",
                                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Assign_23"
                              },
                              "children": {
                                "Assign.To": {
                                  "OutArgument": "[out_Config(row(\"Name\").ToString)]"
                                },
                                "Assign.Value": {
                                  "InArgument": "[AssetValue]"
                                }
                              }
                            }
                          }
                        }
                      },
                      "TryCatch.Catches": {
                        "Catch": {
                          "attributes": {
                            "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "s:Exception",
                            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "403.2,22.4",
                            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Catch`1_3"
                          },
                          "children": {
                            "WorkflowViewStateService.ViewState": {
                              "Dictionary": {
                                "attributes": {
                                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                },
                                "children": {
                                  "Boolean": "False"
                                }
                              }
                            },
                            "ActivityAction": {
                              "attributes": {
                                "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "s:Exception"
                              },
                              "children": {
                                "ActivityAction.Argument": {
                                  "DelegateInArgument": {
                                    "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "s:Exception",
                                    "Name": "Exception"
                                  }
                                },
                                "If": {
                                  "attributes": {
                                    "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Logs a message and throw exception in case the asset is specified in the Config file, but it could not be loaded from Orchestrator.",
                                    "Condition": "[Not String.IsNullOrWhiteSpace(Row(\"Name\").ToString.Trim)]",
                                    "DisplayName": "If asset name is specified, but it cannot be retrieved",
                                    "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "416,409.6",
                                    "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "If_5"
                                  },
                                  "children": {
                                    "WorkflowViewStateService.ViewState": {
                                      "Dictionary": {
                                        "attributes": {
                                          "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                        },
                                        "children": {
                                          "Boolean": "True"
                                        }
                                      }
                                    },
                                    "If.Then": {
                                      "Throw": {
                                        "DisplayName": "Throw AssetFailedToLoad Exception",
                                        "Exception": "[new Exception(\"Loading asset \" + Row(\"Asset\").ToString + \" failed: \" + Exception.Message)]",
                                        "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "334.4,98.4",
                                        "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Throw_1"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "WorkflowViewStateService.ViewState": {
              "Dictionary": {
                "attributes": {
                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                },
                "children": {
                  "Boolean": "False"
                }
              }
            }
          },
          "variables": [],
          "expressions": [
            {
              "content": "[dt_Assets]",
              "expression_type": "general",
              "language": "VisualBasic",
              "context": "DataTable",
              "contains_variables": [],
              "contains_methods": []
            }
          ],
          "parent_activity_id": "activity_18",
          "child_activities": [
            "activity_21"
          ],
          "depth_level": 5,
          "xpath_location": "/ForEachRow",
          "source_line": null
        },
        {
          "tag": "ForEachRow.Body",
          "activity_id": "activity_21",
          "display_name": null,
          "annotation": null,
          "visible_attributes": {},
          "invisible_attributes": {},
          "configuration": {
            "ActivityAction": {
              "attributes": {
                "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataRow"
              },
              "children": {
                "ActivityAction.Argument": {
                  "DelegateInArgument": {
                    "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "sd:DataRow",
                    "Name": "Row"
                  }
                },
                "TryCatch": {
                  "attributes": {
                    "DisplayName": "Try retrieving asset from Orchestrator",
                    "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "436.8,627.2",
                    "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "TryCatch_3"
                  },
                  "children": {
                    "WorkflowViewStateService.ViewState": {
                      "Dictionary": {
                        "attributes": {
                          "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                        },
                        "children": {
                          "Boolean": "False"
                        }
                      }
                    },
                    "TryCatch.Try": {
                      "Sequence": {
                        "attributes": {
                          "DisplayName": "Get asset from Orchestrator",
                          "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "400,386.4",
                          "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_11"
                        },
                        "children": {
                          "Sequence.Variables": {
                            "Variable": {
                              "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:Object",
                              "Name": "AssetValue"
                            }
                          },
                          "WorkflowViewStateService.ViewState": {
                            "Dictionary": {
                              "attributes": {
                                "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                              },
                              "children": {
                                "Boolean": "True"
                              }
                            }
                          },
                          "GetRobotAsset": {
                            "attributes": {
                              "AssetName": "[row(\"Asset\").ToString]",
                              "CacheStrategy": "None",
                              "DisplayName": "Get Orchestrator asset",
                              "FolderPath": "[row(\"OrchestratorAssetFolder\").ToString]",
                              "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "356.8,185.6",
                              "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "GetRobotAsset_5"
                            },
                            "children": {
                              "GetRobotAsset.TimeoutMS": {
                                "InArgument": {
                                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:Int32"
                                }
                              },
                              "GetRobotAsset.Value": {
                                "OutArgument": "[AssetValue]"
                              }
                            }
                          },
                          "Assign": {
                            "attributes": {
                              "DisplayName": "Assign asset value in Config",
                              "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "356.8,69.6",
                              "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Assign_23"
                            },
                            "children": {
                              "Assign.To": {
                                "OutArgument": "[out_Config(row(\"Name\").ToString)]"
                              },
                              "Assign.Value": {
                                "InArgument": "[AssetValue]"
                              }
                            }
                          }
                        }
                      }
                    },
                    "TryCatch.Catches": {
                      "Catch": {
                        "attributes": {
                          "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "s:Exception",
                          "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "403.2,22.4",
                          "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Catch`1_3"
                        },
                        "children": {
                          "WorkflowViewStateService.ViewState": {
                            "Dictionary": {
                              "attributes": {
                                "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                              },
                              "children": {
                                "Boolean": "False"
                              }
                            }
                          },
                          "ActivityAction": {
                            "attributes": {
                              "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "s:Exception"
                            },
                            "children": {
                              "ActivityAction.Argument": {
                                "DelegateInArgument": {
                                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "s:Exception",
                                  "Name": "Exception"
                                }
                              },
                              "If": {
                                "attributes": {
                                  "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Logs a message and throw exception in case the asset is specified in the Config file, but it could not be loaded from Orchestrator.",
                                  "Condition": "[Not String.IsNullOrWhiteSpace(Row(\"Name\").ToString.Trim)]",
                                  "DisplayName": "If asset name is specified, but it cannot be retrieved",
                                  "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "416,409.6",
                                  "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "If_5"
                                },
                                "children": {
                                  "WorkflowViewStateService.ViewState": {
                                    "Dictionary": {
                                      "attributes": {
                                        "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                                      },
                                      "children": {
                                        "Boolean": "True"
                                      }
                                    }
                                  },
                                  "If.Then": {
                                    "Throw": {
                                      "DisplayName": "Throw AssetFailedToLoad Exception",
                                      "Exception": "[new Exception(\"Loading asset \" + Row(\"Asset\").ToString + \" failed: \" + Exception.Message)]",
                                      "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "334.4,98.4",
                                      "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Throw_1"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_20",
          "child_activities": [
            "activity_22"
          ],
          "depth_level": 6,
          "xpath_location": "/ForEachRow.Body",
          "source_line": null
        },
        {
          "tag": "TryCatch",
          "activity_id": "activity_22",
          "display_name": "Try retrieving asset from Orchestrator",
          "annotation": null,
          "visible_attributes": {
            "DisplayName": "Try retrieving asset from Orchestrator"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "436.8,627.2",
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "TryCatch_3"
          },
          "configuration": {
            "WorkflowViewStateService.ViewState": {
              "Dictionary": {
                "attributes": {
                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                },
                "children": {
                  "Boolean": "False"
                }
              }
            },
            "TryCatch.Try": {
              "Sequence": {
                "attributes": {
                  "DisplayName": "Get asset from Orchestrator",
                  "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "400,386.4",
                  "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_11"
                },
                "children": {
                  "Sequence.Variables": {
                    "Variable": {
                      "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:Object",
                      "Name": "AssetValue"
                    }
                  },
                  "WorkflowViewStateService.ViewState": {
                    "Dictionary": {
                      "attributes": {
                        "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                      },
                      "children": {
                        "Boolean": "True"
                      }
                    }
                  },
                  "GetRobotAsset": {
                    "attributes": {
                      "AssetName": "[row(\"Asset\").ToString]",
                      "CacheStrategy": "None",
                      "DisplayName": "Get Orchestrator asset",
                      "FolderPath": "[row(\"OrchestratorAssetFolder\").ToString]",
                      "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "356.8,185.6",
                      "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "GetRobotAsset_5"
                    },
                    "children": {
                      "GetRobotAsset.TimeoutMS": {
                        "InArgument": {
                          "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:Int32"
                        }
                      },
                      "GetRobotAsset.Value": {
                        "OutArgument": "[AssetValue]"
                      }
                    }
                  },
                  "Assign": {
                    "attributes": {
                      "DisplayName": "Assign asset value in Config",
                      "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "356.8,69.6",
                      "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Assign_23"
                    },
                    "children": {
                      "Assign.To": {
                        "OutArgument": "[out_Config(row(\"Name\").ToString)]"
                      },
                      "Assign.Value": {
                        "InArgument": "[AssetValue]"
                      }
                    }
                  }
                }
              }
            },
            "TryCatch.Catches": {
              "Catch": {
                "attributes": {
                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "s:Exception",
                  "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "403.2,22.4",
                  "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Catch`1_3"
                },
                "children": {
                  "WorkflowViewStateService.ViewState": {
                    "Dictionary": {
                      "attributes": {
                        "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                      },
                      "children": {
                        "Boolean": "False"
                      }
                    }
                  },
                  "ActivityAction": {
                    "attributes": {
                      "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "s:Exception"
                    },
                    "children": {
                      "ActivityAction.Argument": {
                        "DelegateInArgument": {
                          "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "s:Exception",
                          "Name": "Exception"
                        }
                      },
                      "If": {
                        "attributes": {
                          "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Logs a message and throw exception in case the asset is specified in the Config file, but it could not be loaded from Orchestrator.",
                          "Condition": "[Not String.IsNullOrWhiteSpace(Row(\"Name\").ToString.Trim)]",
                          "DisplayName": "If asset name is specified, but it cannot be retrieved",
                          "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "416,409.6",
                          "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "If_5"
                        },
                        "children": {
                          "WorkflowViewStateService.ViewState": {
                            "Dictionary": {
                              "attributes": {
                                "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                              },
                              "children": {
                                "Boolean": "True"
                              }
                            }
                          },
                          "If.Then": {
                            "Throw": {
                              "DisplayName": "Throw AssetFailedToLoad Exception",
                              "Exception": "[new Exception(\"Loading asset \" + Row(\"Asset\").ToString + \" failed: \" + Exception.Message)]",
                              "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "334.4,98.4",
                              "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Throw_1"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_21",
          "child_activities": [
            "activity_23",
            "activity_29"
          ],
          "depth_level": 7,
          "xpath_location": "/TryCatch",
          "source_line": null
        },
        {
          "tag": "TryCatch.Try",
          "activity_id": "activity_23",
          "display_name": null,
          "annotation": null,
          "visible_attributes": {},
          "invisible_attributes": {},
          "configuration": {
            "Sequence": {
              "attributes": {
                "DisplayName": "Get asset from Orchestrator",
                "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "400,386.4",
                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_11"
              },
              "children": {
                "Sequence.Variables": {
                  "Variable": {
                    "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:Object",
                    "Name": "AssetValue"
                  }
                },
                "WorkflowViewStateService.ViewState": {
                  "Dictionary": {
                    "attributes": {
                      "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                    },
                    "children": {
                      "Boolean": "True"
                    }
                  }
                },
                "GetRobotAsset": {
                  "attributes": {
                    "AssetName": "[row(\"Asset\").ToString]",
                    "CacheStrategy": "None",
                    "DisplayName": "Get Orchestrator asset",
                    "FolderPath": "[row(\"OrchestratorAssetFolder\").ToString]",
                    "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "356.8,185.6",
                    "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "GetRobotAsset_5"
                  },
                  "children": {
                    "GetRobotAsset.TimeoutMS": {
                      "InArgument": {
                        "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:Int32"
                      }
                    },
                    "GetRobotAsset.Value": {
                      "OutArgument": "[AssetValue]"
                    }
                  }
                },
                "Assign": {
                  "attributes": {
                    "DisplayName": "Assign asset value in Config",
                    "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "356.8,69.6",
                    "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Assign_23"
                  },
                  "children": {
                    "Assign.To": {
                      "OutArgument": "[out_Config(row(\"Name\").ToString)]"
                    },
                    "Assign.Value": {
                      "InArgument": "[AssetValue]"
                    }
                  }
                }
              }
            }
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_22",
          "child_activities": [
            "activity_24"
          ],
          "depth_level": 8,
          "xpath_location": "/TryCatch.Try",
          "source_line": null
        },
        {
          "tag": "Sequence",
          "activity_id": "activity_24",
          "display_name": "Get asset from Orchestrator",
          "annotation": null,
          "visible_attributes": {
            "DisplayName": "Get asset from Orchestrator"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "400,386.4",
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Sequence_11"
          },
          "configuration": {
            "Sequence.Variables": {
              "Variable": {
                "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:Object",
                "Name": "AssetValue"
              }
            },
            "WorkflowViewStateService.ViewState": {
              "Dictionary": {
                "attributes": {
                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                },
                "children": {
                  "Boolean": "True"
                }
              }
            },
            "GetRobotAsset": {
              "attributes": {
                "AssetName": "[row(\"Asset\").ToString]",
                "CacheStrategy": "None",
                "DisplayName": "Get Orchestrator asset",
                "FolderPath": "[row(\"OrchestratorAssetFolder\").ToString]",
                "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "356.8,185.6",
                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "GetRobotAsset_5"
              },
              "children": {
                "GetRobotAsset.TimeoutMS": {
                  "InArgument": {
                    "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:Int32"
                  }
                },
                "GetRobotAsset.Value": {
                  "OutArgument": "[AssetValue]"
                }
              }
            },
            "Assign": {
              "attributes": {
                "DisplayName": "Assign asset value in Config",
                "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "356.8,69.6",
                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Assign_23"
              },
              "children": {
                "Assign.To": {
                  "OutArgument": "[out_Config(row(\"Name\").ToString)]"
                },
                "Assign.Value": {
                  "InArgument": "[AssetValue]"
                }
              }
            }
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_23",
          "child_activities": [
            "activity_25",
            "activity_28"
          ],
          "depth_level": 9,
          "xpath_location": "/Sequence",
          "source_line": null
        },
        {
          "tag": "GetRobotAsset",
          "activity_id": "activity_25",
          "display_name": "Get Orchestrator asset",
          "annotation": null,
          "visible_attributes": {
            "AssetName": "[row(\"Asset\").ToString]",
            "CacheStrategy": "None",
            "DisplayName": "Get Orchestrator asset",
            "FolderPath": "[row(\"OrchestratorAssetFolder\").ToString]"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "356.8,185.6",
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "GetRobotAsset_5"
          },
          "configuration": {
            "GetRobotAsset.TimeoutMS": {
              "InArgument": {
                "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:Int32"
              }
            },
            "GetRobotAsset.Value": {
              "OutArgument": "[AssetValue]"
            }
          },
          "variables": [],
          "expressions": [
            {
              "content": "[row(\"Asset\").ToString]",
              "expression_type": "general",
              "language": "VisualBasic",
              "context": "AssetName",
              "contains_variables": [],
              "contains_methods": []
            },
            {
              "content": "[row(\"OrchestratorAssetFolder\").ToString]",
              "expression_type": "general",
              "language": "VisualBasic",
              "context": "FolderPath",
              "contains_variables": [],
              "contains_methods": []
            }
          ],
          "parent_activity_id": "activity_24",
          "child_activities": [
            "activity_26",
            "activity_27"
          ],
          "depth_level": 10,
          "xpath_location": "/GetRobotAsset",
          "source_line": null
        },
        {
          "tag": "GetRobotAsset.TimeoutMS",
          "activity_id": "activity_26",
          "display_name": null,
          "annotation": null,
          "visible_attributes": {},
          "invisible_attributes": {},
          "configuration": {
            "InArgument": {
              "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:Int32"
            }
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_25",
          "child_activities": [],
          "depth_level": 11,
          "xpath_location": "/GetRobotAsset.TimeoutMS",
          "source_line": null
        },
        {
          "tag": "GetRobotAsset.Value",
          "activity_id": "activity_27",
          "display_name": null,
          "annotation": null,
          "visible_attributes": {},
          "invisible_attributes": {},
          "configuration": {
            "OutArgument": "[AssetValue]"
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_25",
          "child_activities": [],
          "depth_level": 11,
          "xpath_location": "/GetRobotAsset.Value",
          "source_line": null
        },
        {
          "tag": "Assign",
          "activity_id": "activity_28",
          "display_name": "Assign asset value in Config",
          "annotation": null,
          "visible_attributes": {
            "DisplayName": "Assign asset value in Config"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "356.8,69.6",
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Assign_23"
          },
          "configuration": {
            "Assign.To": {
              "OutArgument": "[out_Config(row(\"Name\").ToString)]"
            },
            "Assign.Value": {
              "InArgument": "[AssetValue]"
            }
          },
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_24",
          "child_activities": [],
          "depth_level": 10,
          "xpath_location": "/Assign",
          "source_line": null
        },
        {
          "tag": "If",
          "activity_id": "activity_29",
          "display_name": "If asset name is specified, but it cannot be retrieved",
          "annotation": "Logs a message and throw exception in case the asset is specified in the Config file, but it could not be loaded from Orchestrator.",
          "visible_attributes": {
            "Condition": "[Not String.IsNullOrWhiteSpace(Row(\"Name\").ToString.Trim)]",
            "DisplayName": "If asset name is specified, but it cannot be retrieved"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}Annotation.AnnotationText": "Logs a message and throw exception in case the asset is specified in the Config file, but it could not be loaded from Orchestrator.",
            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "416,409.6",
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "If_5"
          },
          "configuration": {
            "WorkflowViewStateService.ViewState": {
              "Dictionary": {
                "attributes": {
                  "{http://schemas.microsoft.com/winfx/2006/xaml}TypeArguments": "x:String, x:Object"
                },
                "children": {
                  "Boolean": "True"
                }
              }
            },
            "If.Then": {
              "Throw": {
                "DisplayName": "Throw AssetFailedToLoad Exception",
                "Exception": "[new Exception(\"Loading asset \" + Row(\"Asset\").ToString + \" failed: \" + Exception.Message)]",
                "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "334.4,98.4",
                "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Throw_1"
              }
            }
          },
          "variables": [],
          "expressions": [
            {
              "content": "[Not String.IsNullOrWhiteSpace(Row(\"Name\").ToString.Trim)]",
              "expression_type": "condition",
              "language": "VisualBasic",
              "context": "Condition",
              "contains_variables": [],
              "contains_methods": []
            }
          ],
          "parent_activity_id": "activity_22",
          "child_activities": [
            "activity_30"
          ],
          "depth_level": 8,
          "xpath_location": "/If",
          "source_line": null
        },
        {
          "tag": "Throw",
          "activity_id": "activity_30",
          "display_name": "Throw AssetFailedToLoad Exception",
          "annotation": null,
          "visible_attributes": {
            "DisplayName": "Throw AssetFailedToLoad Exception",
            "Exception": "[new Exception(\"Loading asset \" + Row(\"Asset\").ToString + \" failed: \" + Exception.Message)]"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "334.4,98.4",
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Throw_1"
          },
          "configuration": {},
          "variables": [],
          "expressions": [
            {
              "content": "[new Exception(\"Loading asset \" + Row(\"Asset\").ToString + \" failed: \" + Exception.Message)]",
              "expression_type": "general",
              "language": "VisualBasic",
              "context": "Exception",
              "contains_variables": [],
              "contains_methods": []
            }
          ],
          "parent_activity_id": "activity_29",
          "child_activities": [],
          "depth_level": 9,
          "xpath_location": "/Throw",
          "source_line": null
        },
        {
          "tag": "Rethrow",
          "activity_id": "activity_31",
          "display_name": "Rethrow loading asset exception",
          "annotation": null,
          "visible_attributes": {
            "DisplayName": "Rethrow loading asset exception"
          },
          "invisible_attributes": {
            "{http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation}VirtualizedContainerService.HintSize": "334.4,32",
            "{http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation}WorkflowViewState.IdRef": "Rethrow_1"
          },
          "configuration": {},
          "variables": [],
          "expressions": [],
          "parent_activity_id": "activity_16",
          "child_activities": [],
          "depth_level": 3,
          "xpath_location": "/Rethrow",
          "source_line": null
        }
      ],
      "expressionLanguage": "VisualBasic",
      "totalActivities": 31,
      "totalArguments": 3,
      "totalVariables": 3,
      "parseSuccessful": true,
      "parseErrors": []
    }
  ],
  "excludedPatterns": [
    ".local/**",
    ".settings/**",
    ".screenshots/**",
    "TestResults/**"
  ],
  "excludedFiles": []
}